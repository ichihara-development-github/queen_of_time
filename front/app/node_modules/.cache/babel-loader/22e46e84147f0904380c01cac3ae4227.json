{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/tasks/TaskCards.jsx\";\n\nimport { Button, Grid, Stack } from \"@mui/material\";\nimport React from \"react\";\nimport { useState } from \"react\"; // import {AddTaskCardButton} from \"./button/AddTaskCardButton\";\n\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\nimport { TaskCard } from \"./TaskCard\";\nexport var TaskCards = function TaskCards() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskCardsList = _useState2[0],\n      setTaskCardsList = _useState2[1];\n\n  var reorder = function reorder(taskCardsList, startIndex, endIndex) {\n    var remove = taskCardsList.splice(startIndex, 1);\n    taskCardsList.splice(endIndex, 0, remove[0]);\n    console.log(taskCardsList[0].taskList);\n  };\n\n  var handleDragEnd = function handleDragEnd(result) {\n    reorder(taskCardsList, result.source.index, result.destination.index);\n    setTaskCardsList(taskCardsList);\n  };\n\n  var saveTask = function saveTask() {\n    if (window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskCardsArea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    sx: {\n      height: 60,\n      width: \"100%\"\n    },\n    direction: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddTaskCardButton, {\n    taskCardsList: taskCardsList,\n    setTaskCardsList: setTaskCardsList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: \"auto\"\n    },\n    color: \"success\",\n    variant: \"contained\",\n    onClick: function onClick() {\n      return saveTask();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"\\u4FDD\\u5B58\")), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    direction: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, function (provided) {\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: {\n        sm: 12,\n        md: 12,\n        lg: 12\n      },\n      spacing: {\n        sm: 4,\n        md: 3,\n        lg: 2\n      },\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }\n    }, taskCardsList.map(function (taskCard, index) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: index,\n        sm: 12,\n        md: 6,\n        lg: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TaskCard, {\n        key: taskCard.id,\n        index: index,\n        taskCardsList: taskCardsList,\n        setTaskCardsList: setTaskCardsList,\n        taskCard: taskCard,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }\n      }));\n    })));\n  })));\n};","map":{"version":3,"names":["Button","Grid","Stack","React","useState","DragDropContext","Droppable","AddTaskCardButton","TaskCard","TaskCards","taskCardsList","setTaskCardsList","reorder","startIndex","endIndex","remove","splice","console","log","taskList","handleDragEnd","result","source","index","destination","saveTask","window","confirm","height","width","marginLeft","provided","droppableProps","innerRef","sm","md","lg","map","taskCard","id"],"sources":["/usr/src/app/app/src/components/tasks/TaskCards.jsx"],"sourcesContent":["import { Button, Grid, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n// import {AddTaskCardButton} from \"./button/AddTaskCardButton\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\r\n\r\nimport {TaskCard} from \"./TaskCard\"\r\n\r\n\r\nexport const TaskCards = () => {\r\n    const [taskCardsList, setTaskCardsList] = useState([]);\r\n\r\n    const reorder=(taskCardsList, startIndex, endIndex)=>{\r\n        const remove = taskCardsList.splice(startIndex, 1);\r\n        taskCardsList.splice(endIndex, 0, remove[0])\r\n        console.log(taskCardsList[0].taskList)\r\n    };\r\n\r\n\r\n    const handleDragEnd = (result) => {\r\n        reorder(taskCardsList, result.source.index, result.destination.index);\r\n        setTaskCardsList(taskCardsList);\r\n    };\r\n\r\n    const saveTask = () => {\r\n        if(window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")){\r\n          }\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"taskCardsArea\">\r\n        <Stack \r\n        sx={{height:60,width:\"100%\"}} \r\n        direction=\"row\"\r\n        >\r\n        <AddTaskCardButton\r\n            taskCardsList={taskCardsList}\r\n            setTaskCardsList={setTaskCardsList}\r\n        />\r\n        <Button \r\n            style={{marginLeft:\"auto\"}}\r\n            color=\"success\" \r\n            variant=\"contained\"\r\n            onClick={()=> saveTask()}>保存\r\n        </Button>\r\n       \r\n        </Stack>\r\n        \r\n       <DragDropContext onDragEnd={handleDragEnd}>\r\n           \r\n           <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n              {(provided) => (\r\n                <div \r\n                  {...provided.droppableProps} \r\n                  ref={provided.innerRef}\r\n                  >\r\n                 <Grid \r\n                    container \r\n                    columns={{sm: 12, md: 12, lg: 12 }}\r\n                    spacing={{sm: 4, md: 3, lg: 2 }} \r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                 >\r\n                {taskCardsList.map((taskCard, index) => (\r\n                  <Grid item  \r\n                    key={index}\r\n                    sm={12} md={6} lg={4}\r\n                    >\r\n                       <TaskCard\r\n                            key={taskCard.id}\r\n                            index={index}\r\n                            taskCardsList={taskCardsList}\r\n                            setTaskCardsList={setTaskCardsList}\r\n                            taskCard={taskCard}\r\n                        />\r\n                  </Grid>\r\n                  ))}\r\n\r\n                </Grid>\r\n                      \r\n              </div>\r\n              )}\r\n\r\n           </Droppable>\r\n        </DragDropContext>\r\n        </div>\r\n\r\n\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}