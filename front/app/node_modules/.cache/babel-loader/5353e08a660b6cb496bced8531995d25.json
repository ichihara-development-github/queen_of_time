{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.protocol = exports.Transport = exports.Socket = exports.uServer = exports.parser = exports.attach = exports.listen = exports.transports = exports.Server = void 0;\n\nvar http_1 = require(\"http\");\n\nvar server_1 = require(\"./server\");\n\nObject.defineProperty(exports, \"Server\", {\n  enumerable: true,\n  get: function get() {\n    return server_1.Server;\n  }\n});\n\nvar index_1 = require(\"./transports/index\");\n\nexports.transports = index_1.default;\n\nvar parser = require(\"engine.io-parser\");\n\nexports.parser = parser;\n\nvar userver_1 = require(\"./userver\");\n\nObject.defineProperty(exports, \"uServer\", {\n  enumerable: true,\n  get: function get() {\n    return userver_1.uServer;\n  }\n});\n\nvar socket_1 = require(\"./socket\");\n\nObject.defineProperty(exports, \"Socket\", {\n  enumerable: true,\n  get: function get() {\n    return socket_1.Socket;\n  }\n});\n\nvar transport_1 = require(\"./transport\");\n\nObject.defineProperty(exports, \"Transport\", {\n  enumerable: true,\n  get: function get() {\n    return transport_1.Transport;\n  }\n});\nexports.protocol = parser.protocol;\n/**\n * Creates an http.Server exclusively used for WS upgrades.\n *\n * @param {Number} port\n * @param {Function} callback\n * @param {Object} options\n * @return {Server} websocket.io server\n * @api public\n */\n\nfunction listen(port, options, fn) {\n  if (\"function\" === typeof options) {\n    fn = options;\n    options = {};\n  }\n\n  var server = (0, http_1.createServer)(function (req, res) {\n    res.writeHead(501);\n    res.end(\"Not Implemented\");\n  }); // create engine server\n\n  var engine = attach(server, options);\n  engine.httpServer = server;\n  server.listen(port, fn);\n  return engine;\n}\n\nexports.listen = listen;\n/**\n * Captures upgrade requests for a http.Server.\n *\n * @param {http.Server} server\n * @param {Object} options\n * @return {Server} engine server\n * @api public\n */\n\nfunction attach(server, options) {\n  var engine = new server_1.Server(options);\n  engine.attach(server, options);\n  return engine;\n}\n\nexports.attach = attach;","map":null,"metadata":{},"sourceType":"script"}