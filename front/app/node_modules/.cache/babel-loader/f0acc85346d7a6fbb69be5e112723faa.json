{"ast":null,"code":"import _objectSpread from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/chats/ChatTemplate.js\";\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport defaultChatMsgStyles from '@mui-treasury/styles/chatMsg/default';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport { IconButton } from '@mui/material';\nvar timeStyle = {\n  position: \"absolute\",\n  top: -20,\n  left: 0,\n  color: \"#808080\"\n};\nvar deleteStyle = {\n  position: \"absolute\",\n  top: 10,\n  left: -30,\n  color: \"#808080\"\n};\nvar ChatTemplate = withStyles(defaultChatMsgStyles, {\n  name: 'ChatMsg'\n})(function (props) {\n  var classes = props.classes,\n      avatar = props.avatar,\n      message = props.message,\n      roomId = props.roomId,\n      time = props.time,\n      cancelSend = props.cancelSend,\n      side = props.side,\n      GridContainerProps = props.GridContainerProps,\n      GridItemProps = props.GridItemProps,\n      AvatarProps = props.AvatarProps,\n      getTypographyProps = props.getTypographyProps;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      deletable = _useState2[0],\n      setDeletable = _useState2[1];\n\n  var attachClass = function attachClass(index) {\n    if (index === 0) {\n      return classes[\"\".concat(side, \"First\")];\n    }\n\n    if (index === [message.content].length - 1) {\n      return classes[\"\".concat(side, \"Last\")];\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    container: true,\n    spacing: 5,\n    style: {\n      justifyContent: side === 'right' ? 'flex-end' : 'flex-start'\n    }\n  }, GridContainerProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), side === 'left' && /*#__PURE__*/React.createElement(Grid, Object.assign({\n    item: true\n  }, GridItemProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, Object.assign({\n    src: avatar\n  }, AvatarProps, {\n    className: cx(classes.avatar, AvatarProps.className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, [message.content].map(function (msg, i) {\n    var TypographyProps = getTypographyProps(msg, i, props);\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"div\", {\n        key: i,\n        className: classes[\"\".concat(side, \"Row\")],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n        align: 'left'\n      }, TypographyProps, {\n        className: cx(classes.msg, classes[side], attachClass(i), TypographyProps.className),\n        onMouseOver: function onMouseOver() {\n          return setDeletable(true);\n        },\n        onMouseOut: function onMouseOut() {\n          return setDeletable(false);\n        },\n        style: {\n          position: \"relative\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }), msg, /*#__PURE__*/React.createElement(\"span\", {\n        style: timeStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, time), side === \"right\" && /*#__PURE__*/React.createElement(IconButton, {\n        style: _objectSpread({}, deleteStyle, {\n          display: deletable ? \"block\" : \"none\"\n        }),\n        onClick: function onClick() {\n          cancelSend(roomId, message.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(DeleteForeverOutlinedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }))))\n    );\n  })));\n});\nChatTemplate.propTypes = {\n  avatar: PropTypes.string,\n  messages: PropTypes.arrayOf(PropTypes.string),\n  time: PropTypes.string,\n  side: PropTypes.oneOf(['left', 'right']),\n  GridContainerProps: PropTypes.shape({}),\n  GridItemProps: PropTypes.shape({}),\n  AvatarProps: PropTypes.shape({}),\n  getTypographyProps: PropTypes.func\n};\nChatTemplate.defaultProps = {\n  avatar: '',\n  messages: [],\n  side: 'left',\n  GridContainerProps: {},\n  GridItemProps: {},\n  AvatarProps: {},\n  getTypographyProps: function getTypographyProps() {\n    return {};\n  }\n};\nexport default ChatTemplate;","map":{"version":3,"names":["React","useState","PropTypes","cx","Grid","Avatar","Typography","withStyles","defaultChatMsgStyles","DeleteForeverOutlinedIcon","IconButton","timeStyle","position","top","left","color","deleteStyle","ChatTemplate","name","props","classes","avatar","message","roomId","time","cancelSend","side","GridContainerProps","GridItemProps","AvatarProps","getTypographyProps","deletable","setDeletable","attachClass","index","content","length","justifyContent","className","map","msg","i","TypographyProps","display","id","propTypes","string","messages","arrayOf","oneOf","shape","func","defaultProps"],"sources":["/usr/src/app/app/src/components/chats/ChatTemplate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport defaultChatMsgStyles from '@mui-treasury/styles/chatMsg/default';\r\n\r\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\r\n\r\nimport { IconButton } from '@mui/material';\r\n\r\nconst timeStyle = {\r\n  position:\"absolute\",\r\n  top:-20, \r\n  left:0,\r\n  color:\"#808080\"\r\n}\r\n\r\nconst deleteStyle = {\r\n  position:\"absolute\",\r\n  top:10,\r\n  left:-30,\r\n  color:\"#808080\",\r\n}\r\n\r\n\r\n\r\nconst ChatTemplate = withStyles(defaultChatMsgStyles, { name: 'ChatMsg' })(props => {\r\n  const {\r\n    classes,\r\n    avatar,\r\n    message,\r\n    roomId,\r\n    time,\r\n    cancelSend,\r\n    side,\r\n    GridContainerProps,\r\n    GridItemProps,\r\n    AvatarProps,\r\n    getTypographyProps,\r\n  } = props;\r\n  \r\n  const [deletable, setDeletable] = useState(false);\r\n\r\n  const attachClass = index => {\r\n    if (index === 0) {\r\n      return classes[`${side}First`];\r\n    }\r\n    if (index === [message.content].length - 1) {\r\n      return classes[`${side}Last`];\r\n    }\r\n    return '';\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={5}\r\n      style={{justifyContent: side === 'right' ? 'flex-end' : 'flex-start'}}\r\n      {...GridContainerProps}\r\n    >\r\n      {side === 'left' && (\r\n        <Grid item {...GridItemProps}>\r\n          <Avatar\r\n            src={avatar}\r\n            {...AvatarProps}\r\n            className={cx(classes.avatar, AvatarProps.className)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={8}>\r\n\r\n        {[message.content].map((msg, i) => {\r\n          \r\n          const TypographyProps = getTypographyProps(msg, i, props);\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <div \r\n              key={i} \r\n              className={classes[`${side}Row`]}\r\n            >  \r\n              <Typography\r\n                align={'left'}\r\n                  {...TypographyProps}\r\n                  className={cx(\r\n                    classes.msg,\r\n                    classes[side],\r\n                    attachClass(i),\r\n                    TypographyProps.className\r\n                  )}\r\n                  onMouseOver={()=>setDeletable(true)}\r\n                  onMouseOut={()=>setDeletable(false)}\r\n                  style={{position: \"relative\"}}\r\n                >\r\n                  {msg}\r\n                  <span style={timeStyle}>\r\n                    {time}\r\n                  </span>\r\n                \r\n                {side===\"right\" && \r\n                  <IconButton \r\n                    style={{...deleteStyle, display: deletable ? \"block\" : \"none\"}}\r\n                    onClick={()=>{cancelSend(roomId, message.id)}}>\r\n                    <DeleteForeverOutlinedIcon />\r\n                  </IconButton>\r\n                }\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nChatTemplate.propTypes = {\r\n  avatar: PropTypes.string,\r\n  messages: PropTypes.arrayOf(PropTypes.string),\r\n  time: PropTypes.string,\r\n  side: PropTypes.oneOf(['left', 'right']),\r\n  GridContainerProps: PropTypes.shape({}),\r\n  GridItemProps: PropTypes.shape({}),\r\n  AvatarProps: PropTypes.shape({}),\r\n  getTypographyProps: PropTypes.func,\r\n};\r\nChatTemplate.defaultProps = {\r\n  avatar: '',\r\n  messages: [],\r\n  side: 'left',\r\n  GridContainerProps: {},\r\n  GridItemProps: {},\r\n  AvatarProps: {},\r\n  getTypographyProps: () => ({}),\r\n};\r\n\r\n\r\nexport default ChatTemplate;"],"mappings":"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"},"metadata":{},"sourceType":"module"}