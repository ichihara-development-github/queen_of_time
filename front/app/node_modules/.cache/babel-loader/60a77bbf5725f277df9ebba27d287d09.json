{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/tasks/TaskCards.jsx\";\n\nimport { Button, Grid, Stack } from \"@mui/material\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\nimport { TaskCard } from \"./TaskCard\"; // const reorder=(taskCardsList, startIndex, endIndex)=>{\n//     const remove = taskCardsList.splice(startIndex, 1);\n//     taskCardsList.splice(endIndex, 0, remove[0])\n// };\n\nexport var TaskCards = function TaskCards() {\n  var _useState = useState([{\n    id: \"0\",\n    draggableId: \"item0\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskCardsList = _useState2[0],\n      setTaskCardsList = _useState2[1];\n\n  var handleDragEnd = function handleDragEnd(result) {\n    var remove = taskCardsList.splice(result.source.index, 1);\n    taskCardsList.splice(result.destination.index, 0, remove[0]); // reorder(taskCardsList, result.source.index, result.destination.index);\n\n    setTaskCardsList(taskCardsList);\n  };\n\n  var saveTask = function saveTask() {\n    if (window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskCardsArea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    sx: {\n      height: 60,\n      width: \"100%\"\n    },\n    direction: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddTaskCardButton, {\n    taskCardsList: taskCardsList,\n    setTaskCardsList: setTaskCardsList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: \"auto\"\n    },\n    color: \"success\",\n    variant: \"contained\",\n    onClick: function onClick() {\n      return saveTask();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"\\u4FDD\\u5B58\")), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    direction: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }, function (provided) {\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: {\n        sm: 12,\n        md: 12,\n        lg: 12\n      },\n      spacing: {\n        sm: 4,\n        md: 3,\n        lg: 2\n      },\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    }, taskCardsList.map(function (taskCard, index) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: index,\n        sm: 12,\n        md: 6,\n        lg: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TaskCard, {\n        key: taskCard.id,\n        index: index,\n        taskCardsList: taskCardsList,\n        setTaskCardsList: setTaskCardsList,\n        taskCard: taskCard,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }));\n    }), provided.placeholder));\n  })));\n};","map":{"version":3,"names":["Button","Grid","Stack","React","useState","DragDropContext","Droppable","AddTaskCardButton","TaskCard","TaskCards","id","draggableId","taskCardsList","setTaskCardsList","handleDragEnd","result","remove","splice","source","index","destination","saveTask","window","confirm","height","width","marginLeft","provided","droppableProps","innerRef","sm","md","lg","map","taskCard","placeholder"],"sources":["/usr/src/app/app/src/components/tasks/TaskCards.jsx"],"sourcesContent":["import { Button, Grid, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\r\n\r\nimport {TaskCard} from \"./TaskCard\"\r\n\r\n// const reorder=(taskCardsList, startIndex, endIndex)=>{\r\n//     const remove = taskCardsList.splice(startIndex, 1);\r\n//     taskCardsList.splice(endIndex, 0, remove[0])\r\n// };\r\n\r\n\r\n\r\nexport const TaskCards = () => {\r\n    const [taskCardsList, setTaskCardsList] = useState([\r\n        {id: \"0\",\r\n    draggableId: \"item0\"}\r\n    ]);\r\n\r\n\r\n    const handleDragEnd = (result) => {\r\n        const remove = taskCardsList.splice(result.source.index, 1);\r\n        taskCardsList.splice(result.destination.index, 0, remove[0])\r\n        // reorder(taskCardsList, result.source.index, result.destination.index);\r\n        setTaskCardsList(taskCardsList);\r\n    };\r\n\r\n    const saveTask = () => {\r\n        if(window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")){\r\n          }\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"taskCardsArea\">\r\n        <Stack \r\n        sx={{height:60,width:\"100%\"}} \r\n        direction=\"row\"\r\n        >\r\n        <AddTaskCardButton\r\n            taskCardsList={taskCardsList}\r\n            setTaskCardsList={setTaskCardsList}\r\n        />\r\n        <Button \r\n            style={{marginLeft:\"auto\"}}\r\n            color=\"success\" \r\n            variant=\"contained\"\r\n            onClick={()=> saveTask()}>保存\r\n        </Button>\r\n       \r\n        </Stack>\r\n        \r\n       <DragDropContext onDragEnd={handleDragEnd}>\r\n           \r\n           <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n              {(provided) => (\r\n                <div \r\n                  {...provided.droppableProps} \r\n                  ref={provided.innerRef}\r\n                  >\r\n                 <Grid \r\n                    container \r\n                    columns={{sm: 12, md: 12, lg: 12 }}\r\n                    spacing={{sm: 4, md: 3, lg: 2 }} \r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                 >\r\n                    {taskCardsList.map((taskCard, index) => (\r\n                    <Grid item  \r\n                        key={index}\r\n                        sm={12} md={6} lg={4}\r\n                        >\r\n                        <TaskCard\r\n                                key={taskCard.id}\r\n                                index={index}\r\n                                taskCardsList={taskCardsList}\r\n                                setTaskCardsList={setTaskCardsList}\r\n                                taskCard={taskCard}\r\n                            />\r\n                    </Grid>\r\n                    ))}\r\n                   {provided.placeholder}\r\n\r\n                </Grid>\r\n                      \r\n              </div>\r\n              )}\r\n\r\n           </Droppable>\r\n        </DragDropContext>\r\n        </div>\r\n\r\n\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}