{"ast":null,"code":"import { stepButtonClasses } from '@mui/material';\nimport AWS from 'aws-sdk';\nexport var imageUploder = function imageUploder(image, key, sb) {\n  // aws setting\n  AWS.config.update({\n    accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY_ID,\n    secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY\n  });\n  var bucket = new AWS.S3({\n    params: {\n      Bucket: process.env.REACT_APP_S3_BUCKET\n    },\n    region: process.env.REACT_APP_S3_BUCKET_REGION\n  });\n  var params = {\n    Body: image,\n    Bucket: process.env.REACT_APP_S3_BUCKET,\n    Key: key\n  }; // setUpload(true)\n\n  bucket.putObject(params).promise().then(function (data) {\n    console.log('Success');\n    sb.setSnackBar({\n      open: true,\n      variant: \"success\",\n      content: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u753B\\u50CF\\u306E\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F\"\n    });\n    return true;\n  }).catch(function (err) {\n    sb.setSnackBar({\n      open: true,\n      variant: \"error\",\n      content: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u753B\\u50CF\\u306E\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F\"\n    });\n    console.log(err);\n    return false;\n  });\n};","map":{"version":3,"names":["stepButtonClasses","AWS","imageUploder","image","key","sb","config","update","accessKeyId","process","env","REACT_APP_S3_ACCESS_KEY_ID","secretAccessKey","REACT_APP_S3_SECRET_ACCESS_KEY","bucket","S3","params","Bucket","REACT_APP_S3_BUCKET","region","REACT_APP_S3_BUCKET_REGION","Body","Key","putObject","promise","then","data","console","log","setSnackBar","open","variant","content","catch","err"],"sources":["/usr/src/app/app/src/lib/imageUploader.js"],"sourcesContent":["import { stepButtonClasses } from '@mui/material';\r\nimport AWS from 'aws-sdk';\r\n\r\n\r\nexport const imageUploder = (image, key, sb) => {\r\n   \r\n    // aws setting\r\n    AWS.config.update({\r\n        accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY_ID,\r\n        secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY\r\n    })\r\n\r\n\r\n    const bucket = new AWS.S3({\r\n        params: {Bucket: process.env.REACT_APP_S3_BUCKET},\r\n        region: process.env.REACT_APP_S3_BUCKET_REGION\r\n    })\r\n\r\n  \r\n        const params = {\r\n            Body: image,\r\n            Bucket:  process.env.REACT_APP_S3_BUCKET,\r\n            Key: key\r\n        }\r\n        \r\n        // setUpload(true)\r\n        \r\n        bucket.putObject(params).promise()\r\n        .then(function(data) {\r\n            console.log('Success');\r\n            sb.setSnackBar({open: true, variant: \"success\", content: `プロフィール画像のアップロードに成功しました`})\r\n            return true\r\n          }).catch(function(err) {\r\n            sb.setSnackBar({open: true, variant: \"error\", content: `プロフィール画像のアップロードに失敗しました`})\r\n            console.log(err);\r\n            return false\r\n          });\r\n}\r\n    "],"mappings":"AAAA,SAASA,iBAAT,QAAkC,eAAlC;AACA,OAAOC,GAAP,MAAgB,SAAhB;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,GAAR,EAAaC,EAAb,EAAoB;EAE5C;EACAJ,GAAG,CAACK,MAAJ,CAAWC,MAAX,CAAkB;IACdC,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADX;IAEdC,eAAe,EAAEH,OAAO,CAACC,GAAR,CAAYG;EAFf,CAAlB;EAMA,IAAMC,MAAM,GAAG,IAAIb,GAAG,CAACc,EAAR,CAAW;IACtBC,MAAM,EAAE;MAACC,MAAM,EAAER,OAAO,CAACC,GAAR,CAAYQ;IAArB,CADc;IAEtBC,MAAM,EAAEV,OAAO,CAACC,GAAR,CAAYU;EAFE,CAAX,CAAf;EAMI,IAAMJ,MAAM,GAAG;IACXK,IAAI,EAAElB,KADK;IAEXc,MAAM,EAAGR,OAAO,CAACC,GAAR,CAAYQ,mBAFV;IAGXI,GAAG,EAAElB;EAHM,CAAf,CAfwC,CAqBxC;;EAEAU,MAAM,CAACS,SAAP,CAAiBP,MAAjB,EAAyBQ,OAAzB,GACCC,IADD,CACM,UAASC,IAAT,EAAe;IACjBC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACAvB,EAAE,CAACwB,WAAH,CAAe;MAACC,IAAI,EAAE,IAAP;MAAaC,OAAO,EAAE,SAAtB;MAAiCC,OAAO;IAAxC,CAAf;IACA,OAAO,IAAP;EACD,CALH,EAKKC,KALL,CAKW,UAASC,GAAT,EAAc;IACrB7B,EAAE,CAACwB,WAAH,CAAe;MAACC,IAAI,EAAE,IAAP;MAAaC,OAAO,EAAE,OAAtB;MAA+BC,OAAO;IAAtC,CAAf;IACAL,OAAO,CAACC,GAAR,CAAYM,GAAZ;IACA,OAAO,KAAP;EACD,CATH;AAUP,CAjCM"},"metadata":{},"sourceType":"module"}