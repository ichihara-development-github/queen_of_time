{"ast":null,"code":"import _defineProperty from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { textFieldClasses } from '@mui/material/TextField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getChildTypeFromChildName = function getChildTypeFromChildName(childName) {\n  if (childName.match(/^([A-Za-z]+)Range(Calendar|Clock)$/)) {\n    return 'multi-panel-UI-view';\n  }\n\n  if (childName.match(/^([A-Za-z]*)(DigitalClock)$/)) {\n    return 'Tall-UI-view';\n  }\n\n  if (childName.match(/^Static([A-Za-z]+)/) || childName.match(/^([A-Za-z]+)(Calendar|Clock)$/)) {\n    return 'UI-view';\n  }\n\n  if (childName.match(/^MultiInput([A-Za-z]+)RangeField$/) || childName.match(/^([A-Za-z]+)RangePicker$/)) {\n    return 'multi-input-range-field';\n  }\n\n  if (childName.match(/^SingleInput([A-Za-z]+)RangeField$/)) {\n    return 'single-input-range-field';\n  }\n\n  return 'single-input-field';\n};\n\nvar getSupportedSectionFromChildName = function getSupportedSectionFromChildName(childName) {\n  if (childName.includes('DateTime')) {\n    return 'date-time';\n  }\n\n  if (childName.includes('Date')) {\n    return 'date';\n  }\n\n  return 'time';\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\n\n\nexport function DemoItem(props) {\n  var label = props.label,\n      children = props.children,\n      component = props.component;\n  var spacing;\n  var sx;\n\n  if (component && getChildTypeFromChildName(component) === 'multi-input-range-field') {\n    spacing = 1.5;\n    sx = _defineProperty({}, \"& .\".concat(textFieldClasses.root), {\n      flexGrow: 1\n    });\n  } else {\n    spacing = 1;\n    sx = undefined;\n  }\n\n  return /*#__PURE__*/_jsxs(Stack, {\n    direction: \"column\",\n    alignItems: \"stretch\",\n    spacing: spacing,\n    sx: sx,\n    children: [label && /*#__PURE__*/_jsx(Typography, {\n      variant: \"body2\",\n      children: label\n    }), children]\n  });\n}\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\n\nexport function DemoContainer(props) {\n  var children = props.children,\n      components = props.components,\n      sxProp = props.sx;\n  var childrenTypes = new Set();\n  var childrenSupportedSections = new Set();\n  components.forEach(function (childName) {\n    childrenTypes.add(getChildTypeFromChildName(childName));\n    childrenSupportedSections.add(getSupportedSectionFromChildName(childName));\n  });\n\n  var getSpacing = function getSpacing(direction) {\n    if (direction === 'row') {\n      return childrenTypes.has('UI-view') || childrenTypes.has('Tall-UI-view') ? 3 : 2;\n    }\n\n    return childrenTypes.has('UI-view') ? 4 : 3;\n  };\n\n  var direction;\n  var spacing;\n\n  var sx = _extends({\n    overflow: 'auto',\n    // Add padding as overflow can hide the outline text field label.\n    pt: 1\n  }, sxProp);\n\n  if (components.length > 2 || childrenTypes.has('multi-input-range-field') || childrenTypes.has('single-input-range-field') || childrenTypes.has('multi-panel-UI-view') || childrenTypes.has('UI-view') || childrenSupportedSections.has('date-time')) {\n    direction = 'column';\n    spacing = getSpacing('column');\n  } else {\n    direction = {\n      xs: 'column',\n      lg: 'row'\n    };\n    spacing = {\n      xs: getSpacing('column'),\n      lg: getSpacing('row')\n    };\n  }\n\n  if (childrenTypes.has('UI-view')) {// noop\n  } else if (childrenTypes.has('single-input-range-field')) {\n    if (!childrenSupportedSections.has('date-time')) {\n      sx = _extends({}, sx, _defineProperty({}, \"& > .\".concat(textFieldClasses.root), {\n        minWidth: 300\n      }));\n    } else {\n      sx = _extends({}, sx, _defineProperty({}, \"& > .\".concat(textFieldClasses.root), {\n        minWidth: {\n          xs: 300,\n          md: 400\n        }\n      }));\n    }\n  } else if (childrenSupportedSections.has('date-time')) {\n    sx = _extends({}, sx, _defineProperty({}, \"& > .\".concat(textFieldClasses.root), {\n      minWidth: 270\n    }));\n  } else {\n    sx = _extends({}, sx, _defineProperty({}, \"& > .\".concat(textFieldClasses.root), {\n      minWidth: 200\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(Stack, {\n    direction: direction,\n    spacing: spacing,\n    sx: sx,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}