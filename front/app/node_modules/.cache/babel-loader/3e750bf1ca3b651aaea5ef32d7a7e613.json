{"ast":null,"code":"import _objectSpread from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/signin/OrganizationForm.jsx\";\n\nimport React, { useState } from 'react';\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\";\nimport { useForm } from 'react-hook-form';\nimport { GoogleMap, Marker, LoadScript } from \"@react-google-maps/api\";\nimport { createOrganization } from '../../apis/organization';\nexport var NewOrganizationForm = function NewOrganizationForm(_ref) {\n  var empParams = _ref.empParams,\n      setStepIndex = _ref.setStepIndex;\n  var geocoder = new window.google.maps.Geocoder();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validate = _useState2[0],\n      setValidate = _useState2[1];\n\n  var _useState3 = useState({\n    lat: 35.6815171,\n    lng: 139.7567439\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coords = _useState4[0],\n      setCoords = _useState4[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var handleBlur = function handleBlur(e) {\n    geocoder.geocode({\n      address: e.target.value\n    }, function (results, status) {\n      if (status == \"OK\") {\n        var position = results[0].geometry.location;\n        setCoords({\n          lat: position.lat(),\n          lng: position.lng()\n        }); // setValidate(true)\n      } else {\n        alert(\"位置情報の取得ができませんでした。\");\n      }\n    });\n  };\n\n  var sendOrgPrams = function sendOrgPrams(params) {\n    if (coords.lat && coords.lng) {\n      alert(\"位置情報が正しくありません\");\n      return false;\n    }\n\n    var orgParams = _objectSpread({}, params, {\n      lat: coords.lat,\n      lng: coords.lng\n    });\n\n    createOrganization({\n      orgParams: orgParams,\n      empParams: empParams\n    }).then(function (res) {\n      if (res.status == 200) {\n        console.log(res);\n        setStepIndex(2);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(sendOrgPrams),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 1,\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({}, register('name', {\n    required: \"※組織名が入力されてません\",\n    maxLength: {\n      value: 24,\n      message: \"最大文字数(24文字)を越えています。\"\n    }\n  }), {\n    label: \"\\u7D44\\u7E54\\u540D\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }\n  }, errors.name && errors.name.message), /*#__PURE__*/React.createElement(TextField, Object.assign({}, register('address', {\n    required: \"no address\"\n  }), {\n    label: \"\\u6240\\u5728\\u5730\",\n    defaultValue: \"東京\",\n    required: true,\n    onBlur: function onBlur(e) {\n      return handleBlur(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, errors.address && errors.address.message), /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"\\u203B\\u55B6\\u696D\\u6642\\u9593\\u30FB\\u6253\\u523B\\u53EF\\u80FD\\u7BC4\\u56F2 \\u7B49\\u306E\\u8A73\\u7D30\\u8A2D\\u5B9A\\u306F\\u7D44\\u7E54\\u4F5C\\u6210\\u5F8C\\u306B\\u7BA1\\u7406\\u753B\\u9762\\u304B\\u3089\\u884C\\u3046\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\")), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: {\n      height: 250\n    },\n    center: {\n      lat: coords.lat,\n      lng: coords.lng\n    },\n    zoom: 14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: coords.lat,\n      lng: coords.lng\n    },\n    zIndex: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"success\",\n    type: \"submit\" // disabled={!validate}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"\\u4F5C\\u6210\"))));\n};","map":{"version":3,"names":["React","useState","Box","TextField","Step","StepLabel","Stepper","Stack","Button","Typography","useForm","GoogleMap","Marker","LoadScript","createOrganization","NewOrganizationForm","empParams","setStepIndex","geocoder","window","google","maps","Geocoder","validate","setValidate","lat","lng","coords","setCoords","register","handleSubmit","errors","formState","handleBlur","e","geocode","address","target","value","results","status","position","geometry","location","alert","sendOrgPrams","params","orgParams","then","res","console","log","required","maxLength","message","color","name","height"],"sources":["/usr/src/app/app/src/components/signin/OrganizationForm.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\"\r\nimport { useForm } from 'react-hook-form';\r\nimport { GoogleMap, Marker, LoadScript } from \"@react-google-maps/api\";\r\nimport { createOrganization } from '../../apis/organization';\r\n\r\nexport const NewOrganizationForm = ({empParams,setStepIndex}) => {\r\n\r\n    const geocoder = new window.google.maps.Geocoder();\r\n    const [validate, setValidate] = useState(false);\r\n    const [coords, setCoords] = useState({lat: 35.6815171,lng: 139.7567439});\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n\r\n\r\n    const handleBlur = (e) => {\r\n        geocoder.geocode({address: e.target.value},function(results, status){\r\n            if(status == \"OK\"){\r\n                const position = results[0].geometry.location\r\n                setCoords({\r\n                    lat: position.lat(),\r\n                    lng: position.lng()\r\n                })\r\n                // setValidate(true)\r\n            }else{\r\n                alert(\"位置情報の取得ができませんでした。\")\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const sendOrgPrams = (params) => {\r\n        if(coords.lat && coords.lng){\r\n            alert(\"位置情報が正しくありません\")\r\n            return false\r\n        }\r\n        const orgParams = {...params,lat: coords.lat, lng: coords.lng}\r\n        createOrganization({\r\n            orgParams: orgParams,\r\n            empParams: empParams\r\n        })\r\n        .then((res) => {\r\n            if(res.status == 200){\r\n                console.log(res)\r\n                setStepIndex(2)\r\n            }\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <Box>\r\n           \r\n            <form onSubmit={handleSubmit(sendOrgPrams)}>\r\n                <Stack \r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <TextField \r\n                        {...register('name', { \r\n                            required: \"※組織名が入力されてません\",\r\n                            maxLength: {\r\n                                value:24,\r\n                                message: \"最大文字数(24文字)を越えています。\"\r\n                                }\r\n                            })}\r\n                        label=\"組織名\"\r\n                        required\r\n                    />\r\n                     <span style={{color: \"red\"}}>{errors.name && errors.name.message}</span>\r\n\r\n                    <TextField\r\n                        {...register('address',{required: \"no address\"})} \r\n                        label=\"所在地\"\r\n                        defaultValue={\"東京\"}\r\n                        required\r\n                        onBlur={e => handleBlur(e)}\r\n                    />\r\n                    {/* ?が使えない */}\r\n                    <span style={{color: \"red\"}}>{errors.address && errors.address.message}</span>\r\n                    <Box>\r\n                        <Typography variant=\"subtitle1\">\r\n                            ※営業時間・打刻可能範囲 等の詳細設定は組織作成後に管理画面から行うことができます。\r\n                        </Typography>\r\n                    </Box>\r\n                   \r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={{ height:250}}\r\n                        center={{lat: coords.lat, lng: coords.lng}}\r\n                        zoom={14}\r\n                    >\r\n                    \r\n                        <Marker position={{lat: coords.lat, lng: coords.lng}} zIndex={2} />\r\n                    </GoogleMap>\r\n                   \r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"success\"\r\n                        type=\"submit\"\r\n                        // disabled={!validate}\r\n                    >\r\n                        作成\r\n                    </Button>\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,OAA1C,EAAmDC,KAAnD,EAA0DC,MAA1D,EAAkEC,UAAlE,QAAoF,eAApF;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,QAA8C,wBAA9C;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA8B;EAAA,IAA5BC,SAA4B,QAA5BA,SAA4B;EAAA,IAAlBC,YAAkB,QAAlBA,YAAkB;EAE7D,IAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,QAAvB,EAAjB;;EAF6D,gBAG7BrB,QAAQ,CAAC,KAAD,CAHqB;EAAA;EAAA,IAGtDsB,QAHsD;EAAA,IAG5CC,WAH4C;;EAAA,iBAIjCvB,QAAQ,CAAC;IAACwB,GAAG,EAAE,UAAN;IAAiBC,GAAG,EAAE;EAAtB,CAAD,CAJyB;EAAA;EAAA,IAItDC,MAJsD;EAAA,IAI9CC,SAJ8C;;EAAA,eAKHlB,OAAO,EALJ;EAAA,IAKrDmB,QALqD,YAKrDA,QALqD;EAAA,IAK3CC,YAL2C,YAK3CA,YAL2C;EAAA,IAKhBC,MALgB,YAK7BC,SAL6B,CAKhBD,MALgB;;EAU7D,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;IACtBhB,QAAQ,CAACiB,OAAT,CAAiB;MAACC,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;IAAnB,CAAjB,EAA2C,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;MAChE,IAAGA,MAAM,IAAI,IAAb,EAAkB;QACd,IAAMC,QAAQ,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWG,QAAX,CAAoBC,QAArC;QACAf,SAAS,CAAC;UACNH,GAAG,EAAEgB,QAAQ,CAAChB,GAAT,EADC;UAENC,GAAG,EAAEe,QAAQ,CAACf,GAAT;QAFC,CAAD,CAAT,CAFc,CAMd;MACH,CAPD,MAOK;QACDkB,KAAK,CAAC,mBAAD,CAAL;MACH;IACJ,CAXD;EAYH,CAbD;;EAiBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;IAC7B,IAAGnB,MAAM,CAACF,GAAP,IAAcE,MAAM,CAACD,GAAxB,EAA4B;MACxBkB,KAAK,CAAC,eAAD,CAAL;MACA,OAAO,KAAP;IACH;;IACD,IAAMG,SAAS,qBAAOD,MAAP;MAAcrB,GAAG,EAAEE,MAAM,CAACF,GAA1B;MAA+BC,GAAG,EAAEC,MAAM,CAACD;IAA3C,EAAf;;IACAZ,kBAAkB,CAAC;MACfiC,SAAS,EAAEA,SADI;MAEf/B,SAAS,EAAEA;IAFI,CAAD,CAAlB,CAICgC,IAJD,CAIM,UAACC,GAAD,EAAS;MACX,IAAGA,GAAG,CAACT,MAAJ,IAAc,GAAjB,EAAqB;QACjBU,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACAhC,YAAY,CAAC,CAAD,CAAZ;MACH;IACR,CATG;EAUP,CAhBG;;EAmBA,oBACI,oBAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAM,QAAQ,EAAEa,YAAY,CAACe,YAAD,CAA5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,KAAD;IACI,OAAO,EAAE,CADb;IAEI,cAAc,EAAC,QAFnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAII,oBAAC,SAAD,oBACQhB,QAAQ,CAAC,MAAD,EAAS;IACjBuB,QAAQ,EAAE,eADO;IAEjBC,SAAS,EAAE;MACPf,KAAK,EAAC,EADC;MAEPgB,OAAO,EAAE;IAFF;EAFM,CAAT,CADhB;IAQI,KAAK,EAAC,oBARV;IASI,QAAQ,MATZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAJJ,eAeK;IAAM,KAAK,EAAE;MAACC,KAAK,EAAE;IAAR,CAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8BxB,MAAM,CAACyB,IAAP,IAAezB,MAAM,CAACyB,IAAP,CAAYF,OAAzD,CAfL,eAiBI,oBAAC,SAAD,oBACQzB,QAAQ,CAAC,SAAD,EAAW;IAACuB,QAAQ,EAAE;EAAX,CAAX,CADhB;IAEI,KAAK,EAAC,oBAFV;IAGI,YAAY,EAAE,IAHlB;IAII,QAAQ,MAJZ;IAKI,MAAM,EAAE,gBAAAlB,CAAC;MAAA,OAAID,UAAU,CAACC,CAAD,CAAd;IAAA,CALb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAjBJ,eAyBI;IAAM,KAAK,EAAE;MAACqB,KAAK,EAAE;IAAR,CAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8BxB,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,CAAekB,OAA/D,CAzBJ,eA0BI,oBAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,UAAD;IAAY,OAAO,EAAC,WAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6PADJ,CA1BJ,eAiCI,oBAAC,SAAD;IACI,iBAAiB,EAAE;MAAEG,MAAM,EAAC;IAAT,CADvB;IAEI,MAAM,EAAE;MAAChC,GAAG,EAAEE,MAAM,CAACF,GAAb;MAAkBC,GAAG,EAAEC,MAAM,CAACD;IAA9B,CAFZ;IAGI,IAAI,EAAE,EAHV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAMI,oBAAC,MAAD;IAAQ,QAAQ,EAAE;MAACD,GAAG,EAAEE,MAAM,CAACF,GAAb;MAAkBC,GAAG,EAAEC,MAAM,CAACD;IAA9B,CAAlB;IAAsD,MAAM,EAAE,CAA9D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANJ,CAjCJ,eA0CI,oBAAC,MAAD;IACI,OAAO,EAAC,WADZ;IAEI,KAAK,EAAC,SAFV;IAGI,IAAI,EAAC,QAHT,CAII;IAJJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBA1CJ,CADJ,CAFJ,CADJ;AA0DH,CAxGM"},"metadata":{},"sourceType":"module"}