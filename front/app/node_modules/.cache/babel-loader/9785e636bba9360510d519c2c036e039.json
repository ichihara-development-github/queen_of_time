{"ast":null,"code":"import _objectSpread from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/signin/OrganizationForm.jsx\";\n\nimport React, { useState } from 'react';\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\";\nimport { useForm } from 'react-hook-form';\nimport { GoogleMap, Marker, LoadScript } from \"@react-google-maps/api\";\nimport { createOrganization } from '../../apis/organization';\nexport var NewOrganizationForm = function NewOrganizationForm(_ref) {\n  var empParams = _ref.empParams;\n  geocoder = new google.maps.Geocoder(); // ③\n\n  var latlng = new google.maps.LatLng(53.3496, -6.3263);\n  console.log(latlng);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validate = _useState2[0],\n      setValidate = _useState2[1];\n\n  var _useState3 = useState({\n    lat: 35.6815171,\n    lng: 139.7567439\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coords = _useState4[0],\n      setCoords = _useState4[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var handleBlur = function handleBlur(e) {// geocoder.geocode({address: e.target.value},function(results, status){\n    //     if(status == \"OK\"){\n    //         const position = results[0].geometry.location\n    //         setCoords({\n    //             lat: position.lat(),\n    //             lng: position.lng()\n    //         })\n    //         // setValidate(true)\n    //     }else{\n    //         alert(\"位置情報の取得ができませんでした。\")\n    //     }\n    // })\n  };\n\n  var sendOrgPrams = function sendOrgPrams(params) {\n    var orgParams = _objectSpread({}, params, {\n      lat: coords.lat,\n      lng: coords.lng\n    });\n\n    createOrganization({\n      orgParams: orgParams,\n      empParams: empParams\n    }).then(function (res) {\n      return console.log(res);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    src: \"https://maps.googleapis.com/maps/api/js?key=\".concat(process.env.REACT_APP_GOOGLE_MAP_API_KEY, \"$&callback=initMap\"),\n    async: true,\n    defer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(sendOrgPrams),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    sx: {\n      width: 500,\n      margin: \"32px auto\",\n      maxwidth: \"80%\"\n    },\n    spacing: 1,\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({}, register('name', {\n    required: \"※組織名が入力されてません\",\n    maxLength: {\n      value: 24,\n      message: \"最大文字数(24文字)を越えています。\"\n    }\n  }), {\n    label: \"\\u7D44\\u7E54\\u540D\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }\n  }, errors.name && errors.name.message), /*#__PURE__*/React.createElement(TextField, Object.assign({}, register('address', {\n    required: \"no address\"\n  }), {\n    label: \"\\u6240\\u5728\\u5730\",\n    defaultValue: \"東京\",\n    required: true,\n    onBlur: function onBlur(e) {\n      return handleBlur(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, errors.address && errors.address.message), /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"\\u203B\\u55B6\\u696D\\u6642\\u9593\\u30FB\\u6253\\u523B\\u53EF\\u80FD\\u7BC4\\u56F2 \\u7B49\\u306E\\u8A73\\u7D30\\u8A2D\\u5B9A\\u306F\\u7D44\\u7E54\\u4F5C\\u6210\\u5F8C\\u306B\\u7BA1\\u7406\\u753B\\u9762\\u304B\\u3089\\u884C\\u3046\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\")), /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD04AgryIup6eyJkkSvS3nXtf23xNMxG8s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: {\n      height: 250\n    },\n    center: {\n      lat: coords.lat,\n      lng: coords.lng\n    },\n    zoom: 14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: coords.lat,\n      lng: coords.lng\n    },\n    zIndex: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"success\",\n    type: \"submit\" // disabled={!validate}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"\\u4F5C\\u6210\"))));\n};","map":{"version":3,"names":["React","useState","Box","TextField","Step","StepLabel","Stepper","Stack","Button","Typography","useForm","GoogleMap","Marker","LoadScript","createOrganization","NewOrganizationForm","empParams","geocoder","google","maps","Geocoder","latlng","LatLng","console","log","validate","setValidate","lat","lng","coords","setCoords","register","handleSubmit","errors","formState","handleBlur","e","sendOrgPrams","params","orgParams","then","res","process","env","REACT_APP_GOOGLE_MAP_API_KEY","width","margin","maxwidth","required","maxLength","value","message","color","name","address","height"],"sources":["/usr/src/app/app/src/components/signin/OrganizationForm.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\"\r\nimport { useForm } from 'react-hook-form';\r\nimport { GoogleMap, Marker, LoadScript } from \"@react-google-maps/api\";\r\nimport { createOrganization } from '../../apis/organization';\r\n\r\nexport const NewOrganizationForm = ({empParams}) => {\r\n    geocoder = new google.maps.Geocoder();   // ③\r\n\r\n    var latlng = new google.maps.LatLng(53.3496, -6.3263);\r\n    console.log(latlng)\r\n    const [validate, setValidate] = useState(false);\r\n    const [coords, setCoords] = useState({lat: 35.6815171,lng: 139.7567439});\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n    const handleBlur = (e) => {\r\n        // geocoder.geocode({address: e.target.value},function(results, status){\r\n        //     if(status == \"OK\"){\r\n        //         const position = results[0].geometry.location\r\n        //         setCoords({\r\n        //             lat: position.lat(),\r\n        //             lng: position.lng()\r\n        //         })\r\n        //         // setValidate(true)\r\n        //     }else{\r\n        //         alert(\"位置情報の取得ができませんでした。\")\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    \r\n\r\n    const sendOrgPrams = (params) => {\r\n        const orgParams = {...params,lat: coords.lat, lng: coords.lng}\r\n        createOrganization({\r\n            orgParams: orgParams,\r\n            empParams: empParams\r\n        })\r\n        .then((res) => console.log(res))\r\n    }\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <script src={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAP_API_KEY}$&callback=initMap`} async defer></script>\r\n            <form onSubmit={handleSubmit(sendOrgPrams)}>\r\n                <Stack \r\n                    sx={{width:500, margin:\"32px auto\", maxwidth:\"80%\"}}\r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <TextField \r\n                        {...register('name', { \r\n                            required: \"※組織名が入力されてません\",\r\n                            maxLength: {\r\n                                value:24,\r\n                                message: \"最大文字数(24文字)を越えています。\"\r\n                                }\r\n                            })}\r\n                        label=\"組織名\"\r\n                        required\r\n                    />\r\n                     <span style={{color: \"red\"}}>{errors.name && errors.name.message}</span>\r\n\r\n                    <TextField\r\n                        {...register('address',{required: \"no address\"})} \r\n                        label=\"所在地\"\r\n                        defaultValue={\"東京\"}\r\n                        required\r\n                        onBlur={e => handleBlur(e)}\r\n                    />\r\n                    {/* ?が使えない */}\r\n                    <span style={{color: \"red\"}}>{errors.address && errors.address.message}</span>\r\n                    <Box>\r\n                        <Typography variant=\"subtitle1\">\r\n                            ※営業時間・打刻可能範囲 等の詳細設定は組織作成後に管理画面から行うことができます。\r\n                        </Typography>\r\n                    </Box>\r\n                     <LoadScript googleMapsApiKey=\"AIzaSyD04AgryIup6eyJkkSvS3nXtf23xNMxG8s\">\r\n\r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={{ height:250}}\r\n                        center={{lat: coords.lat, lng: coords.lng}}\r\n                        zoom={14}\r\n                    >\r\n                    \r\n                        <Marker position={{lat: coords.lat, lng: coords.lng}} zIndex={2} />\r\n                    </GoogleMap>\r\n                    </LoadScript> \r\n\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"success\"\r\n                        type=\"submit\"\r\n                        // disabled={!validate}\r\n                    >\r\n                        作成\r\n                    </Button>\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}