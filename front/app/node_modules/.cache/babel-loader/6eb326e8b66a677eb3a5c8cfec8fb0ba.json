{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSONP = void 0;\n\nvar polling_1 = require(\"./polling\");\n\nvar qs = require(\"querystring\");\n\nvar rDoubleSlashes = /\\\\\\\\n/g;\nvar rSlashes = /(\\\\)?\\\\n/g;\n\nvar JSONP = /*#__PURE__*/function (_polling_1$Polling) {\n  _inherits(JSONP, _polling_1$Polling);\n\n  /**\n   * JSON-P polling transport.\n   *\n   * @api public\n   */\n  function JSONP(req) {\n    var _this;\n\n    _classCallCheck(this, JSONP);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JSONP).call(this, req));\n    _this.head = \"___eio[\" + (req._query.j || \"\").replace(/[^0-9]/g, \"\") + \"](\";\n    _this.foot = \");\";\n    return _this;\n  }\n  /**\n   * Handles incoming data.\n   * Due to a bug in \\n handling by browsers, we expect a escaped string.\n   *\n   * @api private\n   */\n\n\n  _createClass(JSONP, [{\n    key: \"onData\",\n    value: function onData(data) {\n      // we leverage the qs module so that we get built-in DoS protection\n      // and the fast alternative to decodeURIComponent\n      data = qs.parse(data).d;\n\n      if (\"string\" === typeof data) {\n        // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n        // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n        data = data.replace(rSlashes, function (match, slashes) {\n          return slashes ? match : \"\\n\";\n        });\n\n        _get(_getPrototypeOf(JSONP.prototype), \"onData\", this).call(this, data.replace(rDoubleSlashes, \"\\\\n\"));\n      }\n    }\n    /**\n     * Performs the write.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, options, callback) {\n      // we must output valid javascript, not valid json\n      // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n      var js = JSON.stringify(data).replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\"); // prepare response\n\n      data = this.head + js + this.foot;\n\n      _get(_getPrototypeOf(JSONP.prototype), \"doWrite\", this).call(this, data, options, callback);\n    }\n  }]);\n\n  return JSONP;\n}(polling_1.Polling);\n\nexports.JSONP = JSONP;","map":null,"metadata":{},"sourceType":"script"}