{"ast":null,"code":"'use strict';\n/**\n * Month-Picker\n *\n * Properties:\n * @years:\n *  - array: [2013, 2015, 2016]\n *  - number: 5 (last 4 years and this year)\n *  - object: {min: 2013, max: 2016} (from 2013 to 2016); {min: 2013} (from 2013 to this year); {max: 2015} (5 years to 2015)\n * @value: default value for picking\n *  1: a single month: e.g. { year: 2015: month: 11 }\n *  2: several months: e.g. [ { year: 2015: month: 9 }, { year: 2015: month: 11 } { year: 2016: month: 3 } ]\n *  3: a span of months, e.g. { from: {year: 2014: month: 7}, to: {year: 2015: month: 11} }\n * @lang: language texts\n *  - array: array of months' texts, e.g. ['Jan', 'Feb', 'Mar', 'Spr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n *  - object: including array of months' texts and other display texts\n *      e.g. {from: \"From:\", to: \"To:\", months: [...]}\n * @theme: theme setting of month-picker; 2 options (light/dark); default theme is light\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactTapper = _interopRequireDefault(require(\"react-tapper\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nvar __MIN_VALID_YEAR = 1000;\nvar _SINGLE_KEYS = ['year', 'month'];\nvar _RANGE_KEYS = ['from', 'to'];\n\nvar __YEAR = new Date().getFullYear();\n\nfunction mapToArray(num, callback) {\n  var arr = [];\n\n  for (var i = 0; i < num; i++) {\n    arr.push(callback(i));\n  }\n\n  return arr;\n}\n\nfunction getYearMon(year, min, max) {\n  var ym = _typeof(year) === 'object' && year.year ? {\n    year: year.year,\n    month: year.month\n  } : typeof year === 'number' ? {\n    year: year\n  } : {\n    __YEAR: __YEAR\n  };\n  ym.min = min || 1;\n  ym.max = max || 12;\n  return ym;\n}\n\nfunction getYearsByNum(n, minYear) {\n  var maxYear = __YEAR; // n is count of years\n\n  if (n && n > 0 && n < 100) {\n    minYear = minYear || maxYear - n + 1;\n  } //\n  else {\n    // n is max year\n    if (n && n >= __MIN_VALID_YEAR) maxYear = n;\n\n    if (minYear) {\n      n = maxYear - minYear + 1;\n    } else {\n      n = 5;\n      minYear = maxYear - n + 1;\n    }\n  }\n\n  return mapToArray(n, function (i) {\n    return getYearMon(minYear + i);\n  });\n}\n\nfunction getYearArray(years) {\n  if (Array.isArray(years)) {\n    return years.map(function (y, i) {\n      return getYearMon(y);\n    }).sort(function (a, b) {\n      return a.year - b.year;\n    });\n  }\n\n  if (_typeof(years) === 'object') {\n    var n = 0,\n        min = 0;\n    var ymin = getYearMon(years.min),\n        ymax = getYearMon(years.max);\n    if (ymin.year > __MIN_VALID_YEAR) min = ymin.year;\n    if (ymax.year >= min) n = ymax.year;\n    var arr = getYearsByNum(n, min);\n    var last = arr.length - 1;\n\n    if (last >= 0) {\n      arr[0].min = ymin.month || arr[0].min;\n      arr[last].max = ymax.month || arr[last].max;\n    }\n\n    return arr;\n  } else if (typeof years === 'number' && years > 0) return getYearsByNum(years);else return getYearsByNum(5);\n}\n\nfunction validate(d, years, idx, yearIndexes) {\n  var ym;\n\n  if (d && typeof d.year === 'number' && d.year > __MIN_VALID_YEAR && typeof d.month === 'number' && d.month >= 1 && d.month <= 12) {\n    ym = d;\n  }\n\n  var foundThisYear;\n\n  for (var i = 0; i < years.length; i++) {\n    if (ym && years[i].year === ym.year) {\n      yearIndexes[idx] = i;\n      return ym;\n    } else if (years[i].year === __YEAR) {\n      foundThisYear = i;\n    }\n  }\n\n  if (typeof foundThisYear === 'number') {\n    yearIndexes[idx] = foundThisYear;\n    return {\n      year: __YEAR\n    };\n  }\n\n  var last = yearIndexes[idx] = years.length - 1;\n  var y = years[last];\n  return {\n    year: y.year,\n    month: Math.floor((y.max - y.min) / 2)\n  };\n}\n\nfunction validValue(value, years, yearIndexes) {\n  value = value || {};\n\n  if (typeof value.year === 'number') {\n    var _validate = validate(value, years, 0, yearIndexes),\n        year = _validate.year,\n        month = _validate.month;\n\n    return {\n      type: 'single',\n      pads: 1,\n      year: year,\n      month: month\n    };\n  } else if (Array.isArray(value) && value.length > 0) {\n    return {\n      type: 'multiple',\n      pads: 1,\n      choices: value.map(function (v, i) {\n        return validate(v, years, 0, i === 0 ? yearIndexes : [0]);\n      })\n    };\n  } else if (value.from && value.to) {\n    var from = validate(value.from, years, 0, yearIndexes),\n        to = validate(value.to, years, 1, yearIndexes);\n\n    if (from.year > to.year || from.year === to.year && from.month > to.month) {\n      from.year = to.year;\n      from.month = to.month;\n\n      if (from.month < 1) {\n        from.year--;\n        from.month += 12;\n      }\n    }\n\n    return {\n      type: 'range',\n      pads: 2,\n      from: from,\n      to: to\n    };\n  }\n\n  return {\n    pads: 0\n  };\n} // function valueChanged (v1, v2) {\n//     if (v1.type !== v2.type) return true\n//     const keys = _SINGLE_KEYS\n//     const items = keys.concat([ 'choice', ..._RANGE_KEYS, ])\n//     for (const i of items) {\n//         const x1 = v1[i], x2 = v2[i]\n//         if (!x1) continue\n//         if (typeof x1 === 'number' && x1 !== x2) return true\n//         if (Array.isArray(x1)) {\n//             if (!Array.isArray(x2)) return true\n//             if (x1.length !== x2.length) return true\n//             for (let j = 0; j < x1.length; j++) {\n//                 for (const k of keys) {\n//                     if (x1[j][k] !== x2[j][k]) return true\n//                 }\n//             }\n//         }\n//         if (typeof x1 === 'object' && typeof x2 === 'object') {\n//             for (const k of keys) {\n//                 if (x1[k] !== x2[k]) return true\n//             }\n//         }\n//     }\n//     return false\n// }\n//\n// function cloneValue (v) {\n//     if (!v) return v\n//     const { year, month, } = v\n//     return { year, month, }\n// }\n//\n// function cloneRange (r) {\n//     if (!r) return r\n//     const { from, to, } = r\n//     return {\n//         from: cloneValue(from),\n//         to: cloneValue(to),\n//     }\n// }\n\n\nfunction validateAutoRange(n) {\n  if (n <= 0) return 0;\n  return Math.floor(n);\n}\n\nfunction compareYM(ym1, ym2) {\n  var d = ym1.year - ym2.year;\n  return d === 0 ? ym1.month - ym2.month : d;\n}\n\nvar TypeYM = _propTypes[\"default\"].shape({\n  year: _propTypes[\"default\"].number,\n  month: _propTypes[\"default\"].number\n});\n\nvar MonthPicker = /*#__PURE__*/function (_Component) {\n  _inherits(MonthPicker, _Component);\n\n  var _super = _createSuper(MonthPicker);\n\n  function MonthPicker(props, context) {\n    var _this;\n\n    _classCallCheck(this, MonthPicker);\n\n    if (props.range) {\n      console.warn('Property \"range\" is deprecated, and use property \"value\" instead');\n    }\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleOverlayTouchTap\", function (e) {\n      if (_this.state.closeable) {\n        _this._onDismiss();\n\n        _this.props.onClickAway && _this.props.onClickAway(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleClickMonth\", function (e) {\n      if (_this.state.showed) {\n        var refid = _this.getDID(e).split(':');\n\n        var idx = parseInt(refid[0], 10);\n        var month = parseInt(refid[1], 10);\n        var year = _this.state.years[_this.state.yearIndexes[idx]].year;\n        var rawValue = Object.assign({}, _this.state.rawValue);\n        var update = {\n          rawValue: rawValue\n        };\n\n        if (rawValue.type === 'single') {\n          Object.assign(rawValue, {\n            year: year,\n            month: month\n          });\n        } else if (rawValue.type === 'multiple') {\n          Object.assign(rawValue, {\n            choices: rawValue.choices.concat()\n          });\n          var existIndex = rawValue.choices.findIndex(function (c) {\n            return c.year === year && c.month === month;\n          });\n\n          if (existIndex < 0) {\n            rawValue.choices.push({\n              year: year,\n              month: month\n            });\n            rawValue.choices.sort(function (a, b) {\n              return a.year === b.year ? a.month - b.month : a.year - b.year;\n            });\n          } else {\n            rawValue.choices.splice(existIndex, 1);\n          }\n        } else if (rawValue.type === 'range') {\n          var keys = _RANGE_KEYS;\n          var thisKey = keys[idx],\n              otherKey = keys[1 - idx];\n          var pick = {\n            year: year,\n            month: month\n          };\n          Object.assign(rawValue, _defineProperty({}, thisKey, pick));\n          var d = compareYM(pick, rawValue[otherKey]);\n\n          if (thisKey === 'from' && d > 0 || thisKey === 'to' && d < 0) {\n            var n = Math.sign(d) * _this.state.autoRange;\n\n            var otherV = _this.getAvailable(n, {\n              year: year,\n              month: month\n            });\n\n            if (otherV) {\n              Object.assign(rawValue, _defineProperty({}, otherKey, otherV));\n              var _this$state = _this.state,\n                  yearIndexes = _this$state.yearIndexes,\n                  years = _this$state.years;\n\n              for (var i = 0, l = years.length; i < l; i++) {\n                if (years[i].year === otherV.year) {\n                  update.yearIndexes = yearIndexes.concat();\n                  update.yearIndexes[1 - idx] = i;\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _this.setState(update);\n\n        _this.props.onChange(year, month, idx);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_goPrevYear\", function (e) {\n      var idx = parseInt(_this.getDID(e), 10);\n\n      if (_this.state.yearIndexes[idx] > 0) {\n        _this.setYear(idx, -1);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_goNextYear\", function (e) {\n      var idx = parseInt(_this.getDID(e), 10);\n\n      if (_this.state.yearIndexes[idx] < _this.state.years.length - 1) {\n        _this.setYear(idx, 1);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_keyDown\", function (e) {\n      if (!_this.state.showed) return;\n      var _this$state$rawValue = _this.state.rawValue,\n          type = _this$state$rawValue.type,\n          pads = _this$state$rawValue.pads,\n          year = _this$state$rawValue.year,\n          month = _this$state$rawValue.month,\n          choices = _this$state$rawValue.choices;\n\n      if (e.key === 'Escape') {\n        _this._onDismiss(_this._reset());\n\n        e.stopPropagation();\n      } else if (e.key === 'Enter') {\n        _this._onDismiss();\n\n        e.stopPropagation();\n      } else if (pads === 1) {//console.log(e.key, e.keyCode)\n        // let month = value.month\n        // if (e.key === 'ArrowLeft') {\n        //     month--\n        // }\n        // else if (e.key === 'ArrowRight') {\n        //     month++\n        // }\n        // else if (e.key === 'ArrowUp') {\n        //     month -= 3\n        // }\n        // else if (e.key === 'ArrowDown') {\n        //     month += 3\n        // }\n        // if (month > 0 && month < 13 && month !== value.month) {\n        //     this.setState({ rawValue: { type, year, month } }) //TODO\n        //     this.props.onChange(year, month, 0)\n        //     e.stopPropagation()\n        // }\n      }\n    });\n\n    var yearArr = getYearArray(_this.props.years);\n    var _yearIndexes = [0];\n\n    var _rawValue = validValue(_this.props.value, yearArr, _yearIndexes);\n\n    if (!_rawValue.type) {\n      throw new Error('invalid value of property \"value\" in month-picker');\n    }\n\n    _this.state = {\n      age: _this.props.age,\n      autoRange: validateAutoRange(_this.props.autoRange),\n      years: yearArr,\n      rawValue: _rawValue,\n      yearIndexes: _yearIndexes,\n      showed: false,\n      closeable: false\n    };\n    return _this;\n  }\n\n  _createClass(MonthPicker, [{\n    key: \"value\",\n    value: function value() {\n      var _this$state$rawValue2 = this.state.rawValue,\n          year = _this$state$rawValue2.year,\n          month = _this$state$rawValue2.month,\n          choices = _this$state$rawValue2.choices,\n          from = _this$state$rawValue2.from,\n          to = _this$state$rawValue2.to;\n      if (from && to) return {\n        from: from,\n        to: to\n      };else if (choices && choices.length > 0) return choices;else if (year && month) return {\n        year: year,\n        month: month\n      };\n      return null;\n    } // getSnapshotBeforeUpdate(prevProps, prevState) {\n    //     // ...\n    // }\n    // componentDidUpdate(prevProps, prevState) {\n    // }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (isBrowser) {\n        document.addEventListener('keydown', this._keyDown);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (isBrowser) {\n        document.removeEventListener('keydown', this._keyDown);\n      }\n    }\n  }, {\n    key: \"optionPad\",\n    value: function optionPad(padIndex) {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          ymArr = _this$state2.years,\n          rawValue = _this$state2.rawValue,\n          yearIndexes = _this$state2.yearIndexes,\n          autoRange = _this$state2.autoRange;\n      var yearIdx = yearIndexes[padIndex];\n      var labelYear = ymArr[yearIdx].year;\n      var values = [];\n      var isRange = false;\n\n      if (rawValue.type === 'single') {\n        if (rawValue.year === labelYear) {\n          rawValue.month && values.push(rawValue.month);\n        }\n      } else if (rawValue.type === 'multiple') {\n        var choices = rawValue.choices;\n        choices.forEach(function (c) {\n          if (labelYear === c.year) {\n            c.month && values.push(c.month);\n          }\n        });\n      } else if (rawValue.type === 'range') {\n        isRange = true;\n        var from = rawValue.from,\n            to = rawValue.to;\n        var startM = labelYear === from.year ? from.month : 1;\n        var endM = labelYear === to.year ? to.month : 12;\n\n        for (var i = startM; i <= endM; i++) {\n          values.push(i);\n        }\n      }\n\n      var lang = this.props.lang || [];\n      var months = Array.isArray(lang) ? lang : Array.isArray(lang.months) ? lang.months : [];\n      var prevCss = '',\n          nextCss = '';\n      var yearMaxIdx = ymArr.length - 1;\n      var atMinYear = labelYear === ymArr[0].year;\n      var atMaxYear = labelYear === ymArr[yearMaxIdx].year;\n      var otherValue = {\n        year: 0,\n        month: 0\n      },\n          labelPreText;\n\n      if (isRange) {\n        otherValue = rawValue[_RANGE_KEYS[1 - padIndex]];\n        labelPreText = /*#__PURE__*/_react[\"default\"].createElement(\"b\", null, this.props.lang[_RANGE_KEYS[padIndex]]);\n      }\n\n      if (yearIdx === 0) prevCss = 'disable';\n      if (yearIdx === yearMaxIdx) nextCss = 'disable';\n\n      if (autoRange === 0) {\n        if (padIndex === 1 && otherValue.year === labelYear) prevCss = 'disable';\n        if (padIndex === 0 && otherValue.year === labelYear) nextCss = 'disable';\n      }\n\n      var prevHandler = prevCss === 'disable' ? undefined : this._goPrevYear;\n      var nextHandler = nextCss === 'disable' ? undefined : this._goNextYear;\n      var valOffset = 0;\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"rmp-pad\",\n        key: padIndex\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"label\", null, labelPreText, labelYear), /*#__PURE__*/_react[\"default\"].createElement(\"i\", {\n        className: [\"rmp-tab\", \"rmp-btn\", \"prev\", prevCss].join(' '),\n        \"data-id\": padIndex,\n        onClick: prevHandler\n      }, '<'), /*#__PURE__*/_react[\"default\"].createElement(\"i\", {\n        className: [\"rmp-tab\", \"rmp-btn\", \"next\", nextCss].join(' '),\n        \"data-id\": padIndex,\n        onClick: nextHandler\n      }, '>')), /*#__PURE__*/_react[\"default\"].createElement(\"ul\", null, mapToArray(12, function (i) {\n        var m = i + 1;\n        var css = '';\n\n        if (atMinYear && m < ymArr[0].min) {\n          css = 'disable';\n        } else if (atMaxYear && m > ymArr[yearMaxIdx].max) {\n          css = 'disable';\n        } else {\n          var _from = rawValue.from,\n              _to = rawValue.to;\n\n          for (var _i = valOffset, last = values.length - 1; _i <= last; _i++) {\n            var v = values[_i];\n\n            if (v === m) {\n              valOffset++;\n\n              if (!isRange || _from.year === labelYear && padIndex === 0 && _i === 0 || _to.year === labelYear && padIndex === 1 && _i === last) {\n                css = 'active';\n              } else if (labelYear >= _from.year && labelYear <= _to.year) {\n                css = 'select';\n              }\n            }\n          }\n\n          if (_this2.state.autoRange === 0) {\n            var otherM = otherValue.month;\n\n            if (otherM) {\n              if (padIndex === 0 && nextCss === 'disable' && m > otherM || padIndex === 1 && prevCss === 'disable' && m < otherM) {\n                css = 'disable';\n              }\n            }\n          }\n        }\n\n        var clickHandler = css !== 'disable' ? _this2._handleClickMonth : undefined;\n        return /*#__PURE__*/_react[\"default\"].createElement(\"li\", {\n          key: i,\n          className: [\"rmp-btn\", rawValue.type, css].join(' '),\n          \"data-id\": padIndex + ':' + (i + 1),\n          onClick: clickHandler\n        }, months.length > i ? months[i] : i);\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pads = [];\n      var popupClass = '';\n\n      if (this.state.rawValue.type === 'range') {\n        pads.push(this.optionPad(0), this.optionPad(1));\n        popupClass = 'range';\n      } else {\n        pads.push(this.optionPad(0));\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: [\"month-picker\", this.props.className].join(' ')\n      }, this.props.children, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: [\"rmp-container\", \"rmp-table\", this.props.className, this.state.showed ? \"show\" : ''].join(' ')\n      }, /*#__PURE__*/_react[\"default\"].createElement(_reactTapper[\"default\"], {\n        className: \"rmp-overlay\",\n        onTap: this._handleOverlayTouchTap\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"rmp-cell\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: [\"rmp-popup\", popupClass, this.props.theme, this.state.showed ? \"show\" : ''].join(' ')\n      }, pads))));\n    }\n  }, {\n    key: \"dismiss\",\n    value: function dismiss() {\n      if (this.state.closeable) {\n        this._onDismiss();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      // prevent rapid show/hide\n      this._onShow();\n    }\n  }, {\n    key: \"_onShow\",\n    value: function _onShow() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        _this3.state.closeable = true;\n      }, 250);\n      this.setState({\n        showed: true\n      });\n      this.props.onShow && this.props.onShow();\n    }\n  }, {\n    key: \"_onDismiss\",\n    value: function _onDismiss(s) {\n      this.setState(Object.assign({\n        showed: false,\n        loading: false\n      }, s));\n      this.props.onDismiss && this.props.onDismiss(this.value());\n    }\n  }, {\n    key: \"getAvailable\",\n    value: function getAvailable(n, _ref) {\n      var year = _ref.year,\n          month = _ref.month;\n      if (n === 0) return null;\n      month += n - 1;\n\n      while (month > 12 || month < 1) {\n        if (month > 12) {\n          month -= 12;\n          year += 1;\n        } else {\n          month += 12;\n          year -= 1;\n        }\n      }\n\n      var years = this.state.years;\n\n      if (n > 0) {\n        var y = years[years.length - 1];\n        var last = {\n          year: y.year,\n          month: y.max\n        };\n        var d = compareYM({\n          year: year,\n          month: month\n        }, last);\n        if (d > 0) return last;\n      } else {\n        var _y = years[0];\n        var first = {\n          year: _y.year,\n          month: _y.min\n        };\n\n        var _d = compareYM({\n          year: year,\n          month: month\n        }, first);\n\n        if (_d < 0) return first;\n      }\n\n      return {\n        year: year,\n        month: month\n      };\n    }\n  }, {\n    key: \"setYear\",\n    value: function setYear(idx, step) {\n      var yearIndexes = this.state.yearIndexes.concat();\n      yearIndexes[idx] += step;\n      this.setState({\n        yearIndexes: yearIndexes\n      });\n      var theYear = this.state.years[yearIndexes[idx]].year;\n      this.props.onYearChange && this.props.onYearChange(theYear);\n    }\n  }, {\n    key: \"getDID\",\n    value: function getDID(e) {\n      var el = e.target;\n      return el.dataset ? el.dataset.id : el.getAttribute('data-id');\n    } // hasStyleClass(e, name) {\n    //     const el = e.target\n    //     const styleClass = el.getAttribute('class').split(' ')\n    //     return styleClass.includes(name)\n    // }\n\n  }, {\n    key: \"_reset\",\n    value: function _reset() {\n      var rawValue = validValue(this.props.value, this.state.years, this.state.yearIndexes);\n      return {\n        rawValue: rawValue\n      };\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.age > state.age) {\n        var yearArr = getYearArray(props.years);\n        var yearIndexes = [0];\n        var rawValue = validValue(props.value, yearArr, yearIndexes);\n        return {\n          age: props.age,\n          autoRange: validateAutoRange(props.autoRange),\n          years: yearArr,\n          rawValue: rawValue,\n          yearIndexes: yearIndexes\n        };\n      } // No state update necessary\n\n\n      return null;\n    }\n  }]);\n\n  return MonthPicker;\n}(_react.Component);\n\nexports[\"default\"] = MonthPicker;\n\n_defineProperty(MonthPicker, \"propTypes\", {\n  age: _propTypes[\"default\"].number,\n  autoRange: _propTypes[\"default\"].number,\n  years: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, // exact number of a year\n  _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].number), // array of specific years: [2008, 2011, 2012, 2014, 2016]\n  _propTypes[\"default\"].shape({\n    // { min: 2013 } | { min: {year: 2013, month: 4} } | { min: {year: 2013, month: 4}, max: {year: 2016, month: 9} }\n    min: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, TypeYM]),\n    max: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, TypeYM])\n  })]),\n  value: _propTypes[\"default\"].oneOfType([TypeYM, _propTypes[\"default\"].arrayOf(TypeYM), _propTypes[\"default\"].shape({\n    from: TypeYM,\n    to: TypeYM\n  })]),\n  lang: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string), // lang texts for months: ['Jan', 'Feb', 'Mar', 'Apr', ... ]\n  _propTypes[\"default\"].shape({\n    months: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string),\n    from: _propTypes[\"default\"].string,\n    // lang text for 'from'\n    to: _propTypes[\"default\"].string // lang text for 'to'\n\n  })]),\n  onChange: _propTypes[\"default\"].func,\n  onYearChange: _propTypes[\"default\"].func,\n  onShow: _propTypes[\"default\"].func,\n  onDismiss: _propTypes[\"default\"].func,\n  onClickAway: _propTypes[\"default\"].func,\n  theme: _propTypes[\"default\"].string\n});\n\n_defineProperty(MonthPicker, \"defaultProps\", {\n  age: 0,\n  autoRange: 0,\n  years: getYearsByNum(5),\n  onChange: function onChange(year, month, idx) {},\n  theme: 'light'\n});","map":null,"metadata":{},"sourceType":"script"}