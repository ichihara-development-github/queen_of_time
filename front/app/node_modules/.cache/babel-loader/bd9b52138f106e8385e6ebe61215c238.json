{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/chats/AddChatRoom.jsx\";\n\nimport { IconButton, Input, Modal, Select, Skeleton, SnackbarContent, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Avatar from '@mui/material/Avatar';\nimport { Button, Divider, List, ListItemAvatar, ListItemButton, ListItemText } from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\nimport AddCommentOutlinedIcon from '@mui/icons-material/AddCommentOutlined';\nimport { SnackbarContext } from '../../contexts/snackBar';\nimport { createRoom } from '../../apis/room';\nimport { NewRoomForm } from './NewRoomForm';\nvar style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  maxWidth: \"95%\",\n  bgcolor: 'white',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 2\n};\nexport var AddChatRoom = function AddChatRoom(_ref) {\n  var setRooms = _ref.setRooms;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var sb = useContext(SnackbarContext);\n\n  var sendRoomParams = function sendRoomParams(params) {\n    createRoom(params).then(function (res) {\n      if (!res.status === 201) {\n        return false;\n      }\n\n      setRooms(res.data.rooms);\n      setLoading(false);\n      setOpen(false);\n      sb.setSnackBar({\n        open: true,\n        variant: \"success\",\n        content: \"新しいチャットを作成しました。\"\n      });\n    });\n  };\n\n  var content = /*#__PURE__*/React.createElement(NewRoomForm, {\n    sendRoomParams: sendRoomParams,\n    loading: loading,\n    setLoading: setLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddCommentOutlinedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: function onClose() {\n      return setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, content)));\n};","map":{"version":3,"names":["IconButton","Input","Modal","Select","Skeleton","SnackbarContent","TextField","Typography","Box","Avatar","Button","Divider","List","ListItemAvatar","ListItemButton","ListItemText","React","useContext","useState","PersonAddAlt1OutlinedIcon","AddCommentOutlinedIcon","SnackbarContext","createRoom","NewRoomForm","style","position","top","left","transform","width","maxWidth","bgcolor","border","boxShadow","p","AddChatRoom","setRooms","open","setOpen","loading","setLoading","sb","sendRoomParams","params","then","res","status","data","rooms","setSnackBar","variant","content"],"sources":["/usr/src/app/app/src/components/chats/AddChatRoom.jsx"],"sourcesContent":["import { IconButton, Input, Modal, Select, Skeleton, SnackbarContent, TextField, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { Button, Divider, List, ListItemAvatar, ListItemButton, ListItemText } from \"@mui/material\"\r\nimport React, { useContext, useState } from \"react\"\r\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\r\nimport AddCommentOutlinedIcon from '@mui/icons-material/AddCommentOutlined';\r\nimport { SnackbarContext } from '../../contexts/snackBar';\r\nimport { createRoom } from '../../apis/room';\r\nimport { NewRoomForm } from './NewRoomForm';\r\n\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  maxWidth: \"95%\",\r\n  bgcolor: 'white',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 2,\r\n};\r\n\r\n\r\nexport const AddChatRoom  = ({setRooms}) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const sb = useContext(SnackbarContext);\r\n\r\n    const sendRoomParams = (params) => {\r\n     \r\n      createRoom(params)\r\n      .then(res => {\r\n        if(!res.status === 201){\r\n          return false\r\n        }\r\n        setRooms(res.data.rooms)\r\n        setLoading(false)\r\n        setOpen(false)\r\n        sb.setSnackBar({open: true, variant:\"success\",content:\"新しいチャットを作成しました。\"})\r\n      })\r\n\r\n    }\r\n    \r\n    \r\n\r\n    const content = (\r\n       <NewRoomForm\r\n        sendRoomParams={sendRoomParams}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n       />\r\n       \r\n    )\r\n\r\n    return(\r\n        <>\r\n        <IconButton onClick={()=> setOpen(true)}>\r\n          <AddCommentOutlinedIcon />\r\n        </IconButton>\r\n        <Modal\r\n          open={open}\r\n          onClose={()=> setOpen(false)}\r\n          >\r\n        <Box sx={style}>\r\n            {content}\r\n        </Box>\r\n          </Modal>\r\n        </>\r\n        \r\n    )\r\n   \r\n}"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,MAAnC,EAA2CC,QAA3C,EAAqDC,eAArD,EAAsEC,SAAtE,EAAiFC,UAAjF,QAAmG,eAAnG;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,cAAhC,EAAgDC,cAAhD,EAAgEC,YAAhE,QAAoF,eAApF;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,yBAAP,MAAsC,2CAAtC;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAIA,IAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE,UADE;EAEZC,GAAG,EAAE,KAFO;EAGZC,IAAI,EAAE,KAHM;EAIZC,SAAS,EAAE,uBAJC;EAKZC,KAAK,EAAE,GALK;EAMZC,QAAQ,EAAE,KANE;EAOZC,OAAO,EAAE,OAPG;EAQZC,MAAM,EAAE,gBARI;EASZC,SAAS,EAAE,EATC;EAUZC,CAAC,EAAE;AAVS,CAAd;AAcA,OAAO,IAAMC,WAAW,GAAI,SAAfA,WAAe,OAAgB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EAAA,gBAEhBlB,QAAQ,CAAC,KAAD,CAFQ;EAAA;EAAA,IAEjCmB,IAFiC;EAAA,IAE3BC,OAF2B;;EAAA,iBAGVpB,QAAQ,CAAC,KAAD,CAHE;EAAA;EAAA,IAGjCqB,OAHiC;EAAA,IAGxBC,UAHwB;;EAKxC,IAAMC,EAAE,GAAGxB,UAAU,CAACI,eAAD,CAArB;;EAEA,IAAMqB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;IAEjCrB,UAAU,CAACqB,MAAD,CAAV,CACCC,IADD,CACM,UAAAC,GAAG,EAAI;MACX,IAAG,CAACA,GAAG,CAACC,MAAL,KAAgB,GAAnB,EAAuB;QACrB,OAAO,KAAP;MACD;;MACDV,QAAQ,CAACS,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAR;MACAR,UAAU,CAAC,KAAD,CAAV;MACAF,OAAO,CAAC,KAAD,CAAP;MACAG,EAAE,CAACQ,WAAH,CAAe;QAACZ,IAAI,EAAE,IAAP;QAAaa,OAAO,EAAC,SAArB;QAA+BC,OAAO,EAAC;MAAvC,CAAf;IACD,CATD;EAWD,CAbD;;EAiBA,IAAMA,OAAO,gBACV,oBAAC,WAAD;IACC,cAAc,EAAET,cADjB;IAEC,OAAO,EAAEH,OAFV;IAGC,UAAU,EAAEC,UAHb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADH;EASA,oBACI,uDACA,oBAAC,UAAD;IAAY,OAAO,EAAE;MAAA,OAAKF,OAAO,CAAC,IAAD,CAAZ;IAAA,CAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,sBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADA,eAIA,oBAAC,KAAD;IACE,IAAI,EAAED,IADR;IAEE,OAAO,EAAE;MAAA,OAAKC,OAAO,CAAC,KAAD,CAAZ;IAAA,CAFX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAIA,oBAAC,GAAD;IAAK,EAAE,EAAEd,KAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACK2B,OADL,CAJA,CAJA,CADJ;AAiBH,CAlDM"},"metadata":{},"sourceType":"module"}