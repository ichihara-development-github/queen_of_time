{"ast":null,"code":"import _objectSpread from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/signin/OrganizationForm.jsx\";\n\nimport React, { useContext, useState } from 'react';\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\";\nimport { useForm } from 'react-hook-form';\nimport { GoogleMap, Marker, LoadScript } from \"@react-google-maps/api\";\nimport { createOrganization } from '../../apis/organization';\nimport { AuthContext } from '../../contexts/auth';\nimport { imageUploder } from '../../lib/imageUploader';\nimport { SnackbarContext } from '../../contexts/snackBar';\nimport { v4 as uuid } from \"uuid\";\nexport var NewOrganizationForm = function NewOrganizationForm(_ref) {\n  var empParams = _ref.empParams,\n      setStepIndex = _ref.setStepIndex;\n  var sb = useContext(SnackbarContext);\n  var geocoder = new window.google.maps.Geocoder();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validate = _useState2[0],\n      setValidate = _useState2[1];\n\n  var _useState3 = useState({\n    lat: 35.6815171,\n    lng: 139.7567439\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coords = _useState4[0],\n      setCoords = _useState4[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var auth = useContext(AuthContext);\n  var imageUrl = uuid() + new Date().toString();\n\n  var handleBlur = function handleBlur(e) {\n    geocoder.geocode({\n      address: e.target.value\n    }, function (results, status) {\n      if (status == \"OK\") {\n        var position = results[0].geometry.location;\n        setCoords({\n          lat: position.lat(),\n          lng: position.lng()\n        });\n        setValidate(true);\n      } else {\n        alert(\"位置情報の取得ができませんでした。\");\n      }\n    });\n  };\n\n  var sendOrgPrams = function sendOrgPrams(params) {\n    var orgParams = _objectSpread({}, params, {\n      lat: coords.lat,\n      lng: coords.lng\n    });\n\n    console.log(orgParams);\n    createOrganization({\n      organizations: orgParams,\n      employees: empParams\n    }).then(function (res) {\n      console.log(empParams);\n\n      if (res.status == 200) {\n        imageUploder(empParams.image[0], imageUrl, sb);\n        auth.login({\n          \"email\": empParams.email,\n          \"password\": empParams.password\n        });\n        setStepIndex(2);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(sendOrgPrams),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 1,\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({}, register('name', {\n    required: \"※組織名が入力されてません\",\n    maxLength: {\n      value: 24,\n      message: \"最大文字数(24文字)を越えています。\"\n    }\n  }), {\n    label: \"\\u7D44\\u7E54\\u540D\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 22\n    }\n  }, errors.name && errors.name.message), /*#__PURE__*/React.createElement(TextField, Object.assign({}, register('address', {\n    required: \"no address\"\n  }), {\n    label: \"\\u6240\\u5728\\u5730\",\n    defaultValue: \"東京\",\n    required: true,\n    onBlur: function onBlur(e) {\n      return handleBlur(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, errors.address && errors.address.message), /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"\\u203B\\u55B6\\u696D\\u6642\\u9593\\u30FB\\u6253\\u523B\\u53EF\\u80FD\\u7BC4\\u56F2 \\u7B49\\u306E\\u8A73\\u7D30\\u8A2D\\u5B9A\\u306F\\u7D44\\u7E54\\u4F5C\\u6210\\u5F8C\\u306B\\u7BA1\\u7406\\u753B\\u9762\\u304B\\u3089\\u884C\\u3046\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\")), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: {\n      height: 250\n    },\n    center: {\n      lat: coords.lat,\n      lng: coords.lng\n    },\n    zoom: 14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: coords.lat,\n      lng: coords.lng\n    },\n    zIndex: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"success\",\n    type: \"submit\",\n    disabled: !validate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"\\u4F5C\\u6210\"))));\n};","map":{"version":3,"names":["React","useContext","useState","Box","TextField","Step","StepLabel","Stepper","Stack","Button","Typography","useForm","GoogleMap","Marker","LoadScript","createOrganization","AuthContext","imageUploder","SnackbarContext","v4","uuid","NewOrganizationForm","empParams","setStepIndex","sb","geocoder","window","google","maps","Geocoder","validate","setValidate","lat","lng","coords","setCoords","register","handleSubmit","errors","formState","auth","imageUrl","Date","toString","handleBlur","e","geocode","address","target","value","results","status","position","geometry","location","alert","sendOrgPrams","params","orgParams","console","log","organizations","employees","then","res","image","login","email","password","required","maxLength","message","color","name","height"],"sources":["/usr/src/app/app/src/components/signin/OrganizationForm.jsx"],"sourcesContent":["\r\nimport React, { useContext, useState } from 'react';\r\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\"\r\nimport { useForm } from 'react-hook-form';\r\nimport { GoogleMap, Marker, LoadScript } from \"@react-google-maps/api\";\r\nimport { createOrganization } from '../../apis/organization';\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport { imageUploder } from '../../lib/imageUploader';\r\nimport { SnackbarContext } from '../../contexts/snackBar';\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n\r\nexport const NewOrganizationForm = ({empParams,setStepIndex}) => {\r\n    \r\n    const sb = useContext(SnackbarContext)\r\n\r\n    const geocoder = new window.google.maps.Geocoder();\r\n    const [validate, setValidate] = useState(false);\r\n    const [coords, setCoords] = useState({lat: 35.6815171,lng: 139.7567439});\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const auth = useContext(AuthContext)\r\n\r\n    const imageUrl = uuid() + (new Date()).toString();\r\n\r\n\r\n    const handleBlur = (e) => {\r\n        geocoder.geocode({address: e.target.value},function(results, status){\r\n            \r\n            if(status == \"OK\"){\r\n                const position = results[0].geometry.location\r\n                setCoords({\r\n                    lat: position.lat(),\r\n                    lng: position.lng()\r\n                })\r\n                setValidate(true)\r\n            }else{\r\n                alert(\"位置情報の取得ができませんでした。\")\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const sendOrgPrams = (params) => {\r\n    \r\n        const orgParams = {...params,lat: coords.lat, lng: coords.lng}\r\n        console.log(orgParams)\r\n        createOrganization({\r\n            organizations: orgParams,\r\n            employees: empParams\r\n        })\r\n        .then((res) => {\r\n            console.log(empParams)\r\n            if(res.status == 200){\r\n                imageUploder(empParams.image[0], imageUrl, sb)\r\n                auth.login({\r\n                    \"email\":empParams.email,\r\n                    \"password\":empParams.password\r\n                })\r\n                setStepIndex(2)\r\n            }\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <form onSubmit={handleSubmit(sendOrgPrams)}>\r\n                <Stack \r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <TextField \r\n                        {...register('name', { \r\n                            required: \"※組織名が入力されてません\",\r\n                            maxLength: {\r\n                                value:24,\r\n                                message: \"最大文字数(24文字)を越えています。\"\r\n                                }\r\n                            })}\r\n                        label=\"組織名\"\r\n                        required\r\n                    />\r\n                     <span style={{color: \"red\"}}>{errors.name && errors.name.message}</span>\r\n\r\n                    <TextField\r\n                        {...register('address',{required: \"no address\"})} \r\n                        label=\"所在地\"\r\n                        defaultValue={\"東京\"}\r\n                        required\r\n                        onBlur={e => handleBlur(e)}\r\n                    />\r\n                    <span style={{color: \"red\"}}>{errors.address && errors.address.message}</span>\r\n                    <Box>\r\n                        <Typography variant=\"subtitle1\">\r\n                            ※営業時間・打刻可能範囲 等の詳細設定は組織作成後に管理画面から行うことができます。\r\n                        </Typography>\r\n                    </Box>\r\n                   \r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={{ height:250}}\r\n                        center={{lat: coords.lat, lng: coords.lng}}\r\n                        zoom={14}\r\n                    >\r\n                    \r\n                        <Marker position={{lat: coords.lat, lng: coords.lng}} zIndex={2} />\r\n                    </GoogleMap>\r\n                   \r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"success\"\r\n                        type=\"submit\"\r\n                        disabled={!validate}\r\n                    >\r\n                        作成\r\n                    </Button>\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}