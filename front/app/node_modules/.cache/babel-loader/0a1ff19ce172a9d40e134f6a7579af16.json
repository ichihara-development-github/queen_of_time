{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar GOOGLE_URL = 'https://maps.google.com/maps/api/geocode/json';\n\nfunction geocodeRequest(url, headers) {\n  var res, json;\n  return _regenerator.default.async(function geocodeRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regenerator.default.awrap(fetch(url, {\n            headers: headers\n          }));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regenerator.default.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n\n          if (!(!json.results || json.status !== 'OK')) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(\"Google Maps Error: [\" + json.status + \"] \" + json.error_message);\n\n        case 8:\n          return _context.abrupt(\"return\", json.results.map(format));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction format(raw) {\n  var geocodeObj = {\n    position: {},\n    formattedAddress: raw.formatted_address || '',\n    feature: null,\n    streetNumber: null,\n    streetName: null,\n    postalCode: null,\n    locality: null,\n    country: null,\n    countryCode: null,\n    adminArea: null,\n    subAdminArea: null,\n    subLocality: null\n  };\n\n  if (raw.geometry && raw.geometry.location) {\n    geocodeObj.position = {\n      lat: raw.geometry.location.lat,\n      lng: raw.geometry.location.lng\n    };\n  }\n\n  raw.address_components.forEach(function (component) {\n    if (component.types.indexOf('route') !== -1) {\n      geocodeObj.streetName = component.long_name;\n    } else if (component.types.indexOf('street_number') !== -1) {\n      geocodeObj.streetNumber = component.long_name;\n    } else if (component.types.indexOf('country') !== -1) {\n      geocodeObj.country = component.long_name;\n      geocodeObj.countryCode = component.short_name;\n    } else if (component.types.indexOf('locality') !== -1) {\n      geocodeObj.locality = component.long_name;\n    } else if (component.types.indexOf('postal_code') !== -1) {\n      geocodeObj.postalCode = component.long_name;\n    } else if (component.types.indexOf('administrative_area_level_1') !== -1) {\n      geocodeObj.adminArea = component.long_name;\n    } else if (component.types.indexOf('administrative_area_level_2') !== -1) {\n      geocodeObj.subAdminArea = component.long_name;\n    } else if (component.types.indexOf('sublocality') !== -1 || component.types.indexOf('sublocality_level_1') !== -1) {\n      geocodeObj.subLocality = component.long_name;\n    } else if (component.types.indexOf('point_of_interest') !== -1 || component.types.indexOf('colloquial_area') !== -1) {\n      geocodeObj.feature = component.long_name;\n    }\n  });\n  return geocodeObj;\n}\n\nvar _default = {\n  geocodePosition: function geocodePosition(apiKey, position, language, headers) {\n    return geocodeRequest(GOOGLE_URL + \"?key=\" + apiKey + \"&latlng=\" + position.lat + \",\" + position.lng + \"&language=\" + language, headers);\n  },\n  geocodeAddress: function geocodeAddress(apiKey, address, language, headers) {\n    return geocodeRequest(GOOGLE_URL + \"?key=\" + apiKey + \"&address=\" + encodeURI(address) + \"&language=\" + language, headers);\n  },\n  geocodeAddressWithBounds: function geocodeAddressWithBounds(apiKey, address, bounds, language, headers) {\n    var sw = bounds.sw,\n        ne = bounds.ne;\n    return geocodeRequest(GOOGLE_URL + \"?key=\" + apiKey + \"&address=\" + encodeURI(address) + (\"&bounds=\" + sw.lat + \",\" + sw.lng + \"|\" + ne.lat + \",\" + ne.lng + \"&language=\" + language), headers);\n  }\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}