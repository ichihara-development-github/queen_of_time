{"ast":null,"code":"// サーバー定義\nvar express = require(\"express\");\n\nvar socket = require(\"socket.io\");\n\nvar port = 5000;\nvar app = express();\nvar server = app.listen(port, function () {\n  console.log(\"server is running\");\n});\nvar io = socket(server); // ソケット定義\n// const io = new Server(server);\n\nvar ENDPOINT1 = process.env.REACT_APP_SOCKET_ENDPOINT1; // const ENDPOINT2 =  process.env.REACT_APP_SOCKET_ENDPOINT2\n// let joinedSocket = new WebSocket(ENDPOINT2)\n\nvar currentJoinRoom = io.of(\"/current\"); // const joinedRoom = io.of(\"/joined\");\n//-----------------------------------\n\nio.on(\"connection\", function (socket) {\n  // ブラウザから接続されたときの処理\n  console.log(\"a user connected\");\n  socket.on(\"disconnect\", function () {\n    // ブラウザが切断したときの処理\n    console.log(\"user disconnected\");\n  });\n});\ncurrentJoinRoom.on(\"connect\", function (socket) {\n  console.log(\"connected current room\");\n  socket.on(\"join\", function (roomId) {\n    socket.join(\"room_\".concat(roomId));\n  });\n  socket.on(\"leave\", function (roomId) {\n    socket.leave(\"room_\".concat(roomId));\n  });\n  socket.on(\"SEND_MESSAGE\", function (message) {\n    console.log(\"send\");\n    io.of('/current').in(\"room_\".concat(message.room_id)).emit(\"RECIEVE_MESSAGE\", message);\n  });\n  socket.on(\"CANCEL_MESSAGE\", function (roomId, id) {\n    console.log(\"cancel send\");\n    io.of('/current').in(\"room_\".concat(roomId)).emit(\"REMOVE_MESSAGE\", id);\n  });\n  socket.on(\"disconnect\", function () {\n    console.log(\"disconnected\");\n  });\n}); // joinedRoom.on(\"connection\", function(socket){\n//     socket.emit(\"getJoinedIds\")\n//     console.log(\"joined\")\n//     socket.on(\"reConnect\", function(ids){\n//         ids.map(id => socket.join(`room_${id}`))\n//         console.log(socket.rooms)\n//     })\n//     socket.on(\"join\",function(roomId){\n//         socket.join(`room_${roomId}`);\n//         console.log(socket.rooms)\n//     })\n//     socket.on(\"SEND_PUSH\",function(message){\n//         console.log(\"push\")\n//         console.log(socket.rooms)\n//         socket.broadcast.to(`room_${message.room_id}`).emit(\"PUSH_MESSAGE\", message)\n//     })\n// })","map":{"version":3,"names":["express","require","socket","port","app","server","listen","console","log","io","ENDPOINT1","process","env","REACT_APP_SOCKET_ENDPOINT1","currentJoinRoom","of","on","roomId","join","leave","message","in","room_id","emit","id"],"sources":["/usr/src/app/app/src/server/server.js"],"sourcesContent":["// サーバー定義\r\nconst express = require(\"express\");\r\nconst socket = require(\"socket.io\")\r\nconst port = 5000;\r\n\r\nvar app = express()\r\n\r\nvar server = app.listen(port, function(){\r\n    console.log(\"server is running\")\r\n})\r\nvar io = socket(server)\r\n\r\n// ソケット定義\r\n// const io = new Server(server);\r\n\r\nconst ENDPOINT1 = process.env.REACT_APP_SOCKET_ENDPOINT1\r\n// const ENDPOINT2 =  process.env.REACT_APP_SOCKET_ENDPOINT2\r\n// let joinedSocket = new WebSocket(ENDPOINT2)\r\n\r\nconst currentJoinRoom = io.of(\"/current\");\r\n// const joinedRoom = io.of(\"/joined\");\r\n\r\n//-----------------------------------\r\n\r\nio.on(\"connection\", (socket) => { // ブラウザから接続されたときの処理\r\n    console.log(\"a user connected\");\r\n    socket.on(\"disconnect\", () => { // ブラウザが切断したときの処理\r\n        console.log(\"user disconnected\");\r\n    });\r\n});\r\n\r\ncurrentJoinRoom.on(\"connect\", function(socket){\r\n    console.log(\"connected current room\")\r\n\r\n    socket.on(\"join\",function(roomId){\r\n        socket.join(`room_${roomId}`);\r\n    });\r\n\r\n    socket.on(\"leave\",function(roomId){\r\n        socket.leave(`room_${roomId}`)\r\n    });\r\n    \r\n    socket.on(\"SEND_MESSAGE\",function(message){\r\n        console.log(\"send\")\r\n        io.of('/current').in(`room_${message.room_id}`).emit(\"RECIEVE_MESSAGE\", message)\r\n    });\r\n\r\n    \r\n    socket.on(\"CANCEL_MESSAGE\",function(roomId,id){\r\n        console.log(\"cancel send\")\r\n        io.of('/current').in(`room_${roomId}`).emit(\"REMOVE_MESSAGE\", id)\r\n    });\r\n\r\n    socket.on(\"disconnect\", function(){\r\n        console.log(\"disconnected\");\r\n    });\r\n})\r\n\r\n\r\n// joinedRoom.on(\"connection\", function(socket){\r\n//     socket.emit(\"getJoinedIds\")\r\n//     console.log(\"joined\")\r\n\r\n//     socket.on(\"reConnect\", function(ids){\r\n//         ids.map(id => socket.join(`room_${id}`))\r\n//         console.log(socket.rooms)\r\n//     })\r\n   \r\n//     socket.on(\"join\",function(roomId){\r\n//         socket.join(`room_${roomId}`);\r\n//         console.log(socket.rooms)\r\n      \r\n//     })\r\n\r\n//     socket.on(\"SEND_PUSH\",function(message){\r\n//         console.log(\"push\")\r\n//         console.log(socket.rooms)\r\n//         socket.broadcast.to(`room_${message.room_id}`).emit(\"PUSH_MESSAGE\", message)\r\n//     })\r\n\r\n// })\r\n\r\n"],"mappings":"AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAME,IAAI,GAAG,IAAb;AAEA,IAAIC,GAAG,GAAGJ,OAAO,EAAjB;AAEA,IAAIK,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAWH,IAAX,EAAiB,YAAU;EACpCI,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,CAFY,CAAb;AAGA,IAAIC,EAAE,GAAGP,MAAM,CAACG,MAAD,CAAf,C,CAEA;AACA;;AAEA,IAAMK,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAA9B,C,CACA;AACA;;AAEA,IAAMC,eAAe,GAAGL,EAAE,CAACM,EAAH,CAAM,UAAN,CAAxB,C,CACA;AAEA;;AAEAN,EAAE,CAACO,EAAH,CAAM,YAAN,EAAoB,UAACd,MAAD,EAAY;EAAE;EAC9BK,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACAN,MAAM,CAACc,EAAP,CAAU,YAAV,EAAwB,YAAM;IAAE;IAC5BT,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACH,CAFD;AAGH,CALD;AAOAM,eAAe,CAACE,EAAhB,CAAmB,SAAnB,EAA8B,UAASd,MAAT,EAAgB;EAC1CK,OAAO,CAACC,GAAR,CAAY,wBAAZ;EAEAN,MAAM,CAACc,EAAP,CAAU,MAAV,EAAiB,UAASC,MAAT,EAAgB;IAC7Bf,MAAM,CAACgB,IAAP,gBAAoBD,MAApB;EACH,CAFD;EAIAf,MAAM,CAACc,EAAP,CAAU,OAAV,EAAkB,UAASC,MAAT,EAAgB;IAC9Bf,MAAM,CAACiB,KAAP,gBAAqBF,MAArB;EACH,CAFD;EAIAf,MAAM,CAACc,EAAP,CAAU,cAAV,EAAyB,UAASI,OAAT,EAAiB;IACtCb,OAAO,CAACC,GAAR,CAAY,MAAZ;IACAC,EAAE,CAACM,EAAH,CAAM,UAAN,EAAkBM,EAAlB,gBAA6BD,OAAO,CAACE,OAArC,GAAgDC,IAAhD,CAAqD,iBAArD,EAAwEH,OAAxE;EACH,CAHD;EAMAlB,MAAM,CAACc,EAAP,CAAU,gBAAV,EAA2B,UAASC,MAAT,EAAgBO,EAAhB,EAAmB;IAC1CjB,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAC,EAAE,CAACM,EAAH,CAAM,UAAN,EAAkBM,EAAlB,gBAA6BJ,MAA7B,GAAuCM,IAAvC,CAA4C,gBAA5C,EAA8DC,EAA9D;EACH,CAHD;EAKAtB,MAAM,CAACc,EAAP,CAAU,YAAV,EAAwB,YAAU;IAC9BT,OAAO,CAACC,GAAR,CAAY,cAAZ;EACH,CAFD;AAGH,CAzBD,E,CA4BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}