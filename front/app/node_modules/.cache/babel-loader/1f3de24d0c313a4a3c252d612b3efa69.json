{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/tasks/TaskCards.jsx\";\n\nimport { Button, Grid, Stack } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\nimport { TaskCard } from \"./TaskCard\";\n\nvar reorder = function reorder(taskCardsList, startIndex, endIndex) {\n  var remove = taskCardsList.splice(startIndex, 1);\n  taskCardsList.splice(endIndex, 0, remove[0]);\n};\n\nexport var TaskCards = function TaskCards() {\n  var _useState = useState([{\n    id: \"0\",\n    draggableId: \"item0\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskCardsList = _useState2[0],\n      setTaskCardsList = _useState2[1];\n\n  var handleDragEnd = function handleDragEnd(result) {\n    reorder(taskCardsList, result.source.index, result.destination.index);\n    setTaskCardsList(taskCardsList);\n  };\n\n  var saveTask = function saveTask() {\n    if (window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")) {}\n  };\n\n  return useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskCardsArea\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      sx: {\n        height: 60,\n        width: \"100%\"\n      },\n      direction: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddTaskCardButton, {\n      taskCardsList: taskCardsList,\n      setTaskCardsList: setTaskCardsList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: \"auto\"\n      },\n      color: \"success\",\n      variant: \"contained\",\n      onClick: function onClick() {\n        return saveTask();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"\\u4FDD\\u5B58\")), /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      direction: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    }, function (provided) {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 18\n        }\n      }, taskCardsList.map(function (taskCard, index) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TaskCard, {\n          key: taskCard.id,\n          index: index,\n          taskCardsList: taskCardsList,\n          setTaskCardsList: setTaskCardsList,\n          taskCard: taskCard,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }));\n      }), provided.placeholder));\n    })));\n  }, [taskCardsList]);\n};","map":{"version":3,"names":["Button","Grid","Stack","Box","React","useMemo","useState","DragDropContext","Droppable","AddTaskCardButton","TaskCard","reorder","taskCardsList","startIndex","endIndex","remove","splice","TaskCards","id","draggableId","setTaskCardsList","handleDragEnd","result","source","index","destination","saveTask","window","confirm","height","width","marginLeft","provided","droppableProps","innerRef","map","taskCard","placeholder"],"sources":["/usr/src/app/app/src/components/tasks/TaskCards.jsx"],"sourcesContent":["import { Button, Grid, Stack } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\r\n\r\nimport {TaskCard} from \"./TaskCard\"\r\n\r\nconst reorder=(taskCardsList, startIndex, endIndex)=>{\r\n    const remove = taskCardsList.splice(startIndex, 1);\r\n    taskCardsList.splice(endIndex, 0, remove[0])\r\n};\r\n\r\n\r\n\r\nexport const TaskCards = () => {\r\n    const [taskCardsList, setTaskCardsList] = useState([\r\n        {id: \"0\",\r\n    draggableId: \"item0\"}\r\n    ]);\r\n\r\n\r\n    const handleDragEnd = (result) => {\r\n        reorder(taskCardsList, result.source.index, result.destination.index);\r\n        setTaskCardsList(taskCardsList);\r\n    };\r\n\r\n    const saveTask = () => {\r\n        if(window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")){\r\n          }\r\n    }\r\n\r\n\r\n    return useMemo(()=> {\r\n\r\n    return (\r\n    <div className=\"taskCardsArea\">\r\n        <Stack \r\n        sx={{height:60,width:\"100%\"}} \r\n        direction=\"row\"\r\n        >\r\n        <AddTaskCardButton\r\n            taskCardsList={taskCardsList}\r\n            setTaskCardsList={setTaskCardsList}\r\n        />\r\n        <Button \r\n            style={{marginLeft:\"auto\"}}\r\n            color=\"success\" \r\n            variant=\"contained\"\r\n            onClick={()=> saveTask()}>保存\r\n        </Button>\r\n       \r\n        </Stack>\r\n        \r\n       <DragDropContext onDragEnd={handleDragEnd}>\r\n           \r\n           <Droppable \r\n           droppableId=\"droppable\" \r\n           direction=\"horizontal\"\r\n           >\r\n              {(provided) => (\r\n                <div \r\n                  {...provided.droppableProps} \r\n                  ref={provided.innerRef}\r\n                  style={{width:\"100%\",height:\"100%\"}}\r\n                  >\r\n                  \r\n                 <Grid \r\n                    container \r\n                    spacing={2} \r\n                    justifyContent=\"center\"\r\n                    alignItems=\"flex-end\"\r\n                 >\r\n                    {taskCardsList.map((taskCard, index) => (\r\n                        <Grid item xs={12}md={6}lg={3} key={index}>\r\n\r\n                      \r\n                        <TaskCard\r\n                                key={taskCard.id}\r\n                                index={index}\r\n                                taskCardsList={taskCardsList}\r\n                                setTaskCardsList={setTaskCardsList}\r\n                                taskCard={taskCard}\r\n                            />\r\n                        </Grid>\r\n                          \r\n                   \r\n                       \r\n                    ))}\r\n                   {provided.placeholder}\r\n                  \r\n\r\n                </Grid>\r\n                      \r\n              </div>\r\n              )}\r\n\r\n           </Droppable>\r\n        </DragDropContext>\r\n        </div>\r\n\r\n\r\n    )\r\n},[taskCardsList])\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}