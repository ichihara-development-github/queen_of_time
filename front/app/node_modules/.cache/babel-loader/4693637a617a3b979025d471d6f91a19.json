{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/app/src/components/tasks/TaskCards.jsx\";\n\nimport { Button, Grid, SnackbarContent, Stack } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useContext, useEffect, useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { fetchTask, sendTask } from \"../../apis/task\";\nimport { SnackbarContext } from \"../../contexts/snackBar\";\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\nimport { TaskCard } from \"./TaskCard\";\n\nvar reorder = function reorder(taskCardsList, startIndex, endIndex) {\n  var remove = taskCardsList.splice(startIndex, 1);\n  taskCardsList.splice(endIndex, 0, remove[0]);\n};\n\nexport var TaskCards = function TaskCards() {\n  var sb = useContext(SnackbarContext);\n\n  var _useState = useState([{\n    id: \"0\",\n    draggableId: \"item0\",\n    title: \"test\",\n    tasks: []\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskCardsList = _useState2[0],\n      setTaskCardsList = _useState2[1];\n\n  var handleDragEnd = function handleDragEnd(result) {\n    reorder(taskCardsList, result.source.index, result.destination.index);\n    setTaskCardsList(taskCardsList);\n  };\n\n  var saveTask = function saveTask() {\n    if (window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")) {\n      sendTask(taskCardsList).then(function (res) {\n        if (res.status !== 200) {\n          sb.setSnackBar({\n            variant: \"error\",\n            open: true,\n            content: \"タスクを保存できませんでした\"\n          });\n          return;\n        }\n\n        sb.setSnackBar({\n          variant: \"success\",\n          open: true,\n          content: \"タスクを保存しました\"\n        });\n      });\n    }\n  };\n\n  useEffect(function () {\n    fetchTask().then(function (res) {\n      setTaskCardsList(res.data.task_cards);\n    });\n  }, []);\n  return useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskCardsArea\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      sx: {\n        height: 60,\n        width: \"100%\"\n      },\n      direction: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddTaskCardButton, {\n      taskCardsList: taskCardsList,\n      setTaskCardsList: setTaskCardsList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: \"auto\"\n      },\n      color: \"success\",\n      variant: \"contained\",\n      onClick: function onClick() {\n        return saveTask();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"\\u4FDD\\u5B58\")), /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      direction: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, function (provided) {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          width: \"100%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 18\n        }\n      }, taskCardsList.map(function (taskCard, index) {\n        return /*#__PURE__*/React.createElement(TaskCard, {\n          key: taskCard.id,\n          index: index,\n          taskCard: taskCard,\n          taskCardsList: taskCardsList,\n          setTaskCardsList: setTaskCardsList,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }\n        });\n      }), provided.placeholder));\n    })));\n  }, []);\n};","map":{"version":3,"names":["Button","Grid","SnackbarContent","Stack","Box","React","useContext","useEffect","useMemo","useState","DragDropContext","Droppable","fetchTask","sendTask","SnackbarContext","AddTaskCardButton","TaskCard","reorder","taskCardsList","startIndex","endIndex","remove","splice","TaskCards","sb","id","draggableId","title","tasks","setTaskCardsList","handleDragEnd","result","source","index","destination","saveTask","window","confirm","then","res","status","setSnackBar","variant","open","content","data","task_cards","height","width","marginLeft","provided","droppableProps","innerRef","map","taskCard","placeholder"],"sources":["/usr/src/app/app/src/components/tasks/TaskCards.jsx"],"sourcesContent":["import { Button, Grid, SnackbarContent, Stack } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useContext, useEffect, useMemo } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { fetchTask, sendTask } from \"../../apis/task\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\r\n\r\nimport {TaskCard} from \"./TaskCard\"\r\n\r\nconst reorder=(taskCardsList, startIndex, endIndex)=>{\r\n    const remove = taskCardsList.splice(startIndex, 1);\r\n    taskCardsList.splice(endIndex, 0, remove[0])\r\n};\r\n\r\n\r\nexport const TaskCards = () => {\r\n\r\n    const sb = useContext(SnackbarContext)\r\n\r\n    const [taskCardsList, setTaskCardsList] = useState([{id: \"0\",draggableId: \"item0\",title: \"test\",tasks:[]}]);\r\n    \r\n    const handleDragEnd = (result) => {\r\n        reorder(taskCardsList, result.source.index, result.destination.index);\r\n        setTaskCardsList(taskCardsList);\r\n    };\r\n\r\n    const saveTask = () => {\r\n        if(window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")){\r\n            sendTask(taskCardsList)\r\n            .then(res => {\r\n                if(res.status !== 200){\r\n                    sb.setSnackBar({variant:\"error\", open:true, content:\"タスクを保存できませんでした\"})\r\n                    return\r\n                }\r\n                sb.setSnackBar({variant:\"success\", open:true, content:\"タスクを保存しました\"})\r\n            })\r\n          }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetchTask()\r\n        .then((res) => {\r\n            setTaskCardsList(res.data.task_cards)\r\n        })\r\n    },[])\r\n\r\n    return useMemo(() => {\r\n\r\n    return (\r\n    <div className=\"taskCardsArea\">\r\n        <Stack \r\n        sx={{height:60,width:\"100%\"}} \r\n        direction=\"row\"\r\n        >\r\n        <AddTaskCardButton\r\n            taskCardsList={taskCardsList}\r\n            setTaskCardsList={setTaskCardsList}\r\n        />\r\n        <Button \r\n            style={{marginLeft:\"auto\"}}\r\n            color=\"success\" \r\n            variant=\"contained\"\r\n            onClick={()=> saveTask()}>保存\r\n        </Button>\r\n       \r\n        </Stack>\r\n        \r\n       <DragDropContext onDragEnd={handleDragEnd}>\r\n           \r\n           <Droppable \r\n            droppableId=\"droppable\" \r\n            direction=\"horizontal\"\r\n           >\r\n              {(provided) => (\r\n                <div \r\n                  {...provided.droppableProps} \r\n                  ref={provided.innerRef}\r\n                  style={{width:\"100%\"}}\r\n                  >\r\n                  \r\n                 <Grid \r\n                    container \r\n                    spacing={2} \r\n                    justifyContent=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                 >\r\n                    {taskCardsList.map((taskCard, index) => (\r\n                           \r\n                        <TaskCard\r\n                                key={taskCard.id}\r\n                                index={index}\r\n                                taskCard={taskCard}\r\n                                taskCardsList={taskCardsList}\r\n                                setTaskCardsList={setTaskCardsList}\r\n                        />     \r\n                   \r\n                    ))}\r\n                   {provided.placeholder}\r\n                  \r\n                </Grid>\r\n                      \r\n              </div>\r\n              )}\r\n\r\n           </Droppable>\r\n        </DragDropContext>\r\n        </div>\r\n\r\n\r\n    )\r\n},[])\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}