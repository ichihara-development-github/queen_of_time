{"version":3,"sources":["urls/urlList.js","apis/employees.js","components/const.js","reducers/empoyees.js","components/shared/SharedSnackbar.jsx","contexts/snackBar.js","contexts/config.js","lib/axios.js","components/shared/commonPatrs.js","contexts/badge.js","components/signin/initialLoading.js","contexts/auth.js","apis/session.js","components/employees/NewEmployeeForm.jsx","customeHooks/hooks.js","components/chats/SelectMember.jsx","apis/shifts.js","lib/calcDate.js","components/shifts/NewShiftForm.jsx","apis/room.js","components/chats/NewRoomForm.jsx","lib/imageUploader.js","containers/NewEmployeeModal.jsx","containers/Employees.jsx","components/tasks/AddTaskCardButton.jsx","components/tasks/TaskCardTitle.jsx","components/tasks/TaskInputForm.jsx","components/tasks/Task.jsx","components/tasks/Tasks.jsx","components/tasks/TaskCard.jsx","components/tasks/TaskCards.jsx","apis/task.js","components/calendars/CalendarModal.jsx","apis/calendar.js","components/calendars/CalendarEventTypes.jsx","containers/CalendarForm.jsx","lib/calc.js","components/calendars/CalendarShifts.jsx","containers/Calendar.jsx","components/shared/DefaultModal.jsx","components/shared/SelectDate.jsx","components/shared/YearPicker.jsx","containers/Shift.jsx","reducers/attendances.js","lib/calcTimes.js","components/attendances/irregularTime.js","components/attendances/DetailModal.jsx","components/attendances/AttendanceGraph.jsx","containers/ManageAttendance.jsx","apis/attendance.js","components/notifications/Feed.jsx","apis/notification.js","reducers/notifications.js","containers/Notification.jsx","containers/Setting.jsx","apis/config.js","containers/Management.jsx","components/timestamps/Clock.jsx","components/timestamps/TimestampMap.jsx","components/timestamps/AttendanceButton.jsx","apis/timestamp.js","components/timestamps/LeavingButton.jsx","containers/employeeSide/TimeStamp.jsx","lib/calcDistance.js","containers/employeeSide/RequestForm.jsx","containers/employeeSide/RequestModal.jsx","components/attendances/AttendanceIndex.jsx","components/shared/SelectMonth.jsx","containers/employeeSide/EmployeeAttendance.jsx","reducers/shift.js","components/shifts/SubmitFeed.jsx","components/shifts/NewSubmitShifts.jsx","containers/employeeSide/EmployeeShift.jsx","containers/employeeSide/Profile.jsx","containers/employeeSide/Top.jsx","components/signin/Login.jsx","components/signin/OrganizationForm.jsx","apis/organization.js","components/signin/SignUp.jsx","components/chats/ChatTemplate.js","components/chats/ChatMessages.jsx","components/chats/ChatInput.jsx","apis/chat.js","reducers/chat.js","components/chats/AddChatRoom.jsx","containers/Chat.jsx","components/shared/Top.jsx","App.js","reportWebVitals.js","index.js","images/employee-default.jpg","images/icon.png","components/notifications/mountain.jpg","images/offices-buildings-svgrepo-com.svg","images/desc_image1.jpg","images/desc_image2.jpg","images/employees.png","images/shift.png","images/manage.png","images/timestamp.png","images/calendar.png","images/chat.png"],"names":["DEFAULT_API_HOST","concat","console","log","process","employeesList","shiftPath","calendarList","manageAttendance","attendanceList","notificationList","allNotifications","timestampStandby","roomList","inviteEmployees","messageList","room_id","newProfile","taskList","newSession","newEmployee","newOrganization","newCalendar","newShifts","submitShifts","newTimestamp","assign","modulateTimestamp","approveTimestamp","updateNotification","determineShift","updateProfile","updateOrgConfig","updateTask","removeSession","currentSession","deleteEmployee","id","axios","delete","Id","then","res","catch","e","REQUEST_STATUS","SliderScales","value","label","dayOfWeek","BUSSINESS_HOUR","open","close","early_time","mid_time","late_time","BASE_STYLE","backgroundColor","color","STYLE_2","imageSrc","elm","image","DefaultImage","initialState","fetchState","employeeList","employeesReducer","state","action","type","Object","objectSpread","fechState","payload","Error","SharedSnackbar","_ref","handleClose","variant","content","Alert","React","forwardRef","props","ref","react_default","a","createElement","Alert_Alert","elevation","Stack","spacing","sx","zIndex","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width","SnackbarContext","createContext","SnackbarProvider","children","_useState","useState","_useState2","slicedToArray","snackbar","setSnackBar","Provider","SharedSnackbar_SharedSnackbar","ConfigContext","ConfigProvider","params","setParams","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","circleStyle","position","height","top","left","MainLogo","react_router_dom","to","direction","alignItems","style","src","icon","Typography","PageLoadingCircle","CircularProgress","BadgeContext","chat","notification","shift","calendar","task","BadgeProvider","badge","setBadge","iconArea","maxWidth","maxHeight","margin","padding","border","borderRadius","InitialLoading","animation","className","AuthContext","loading","loggedIn","chief","name","AuthProvider","setState","history","useHistory","useContext","orgConfig","sessionForbidden","sessionStorage","clear","alert","switchLogin","data","initialSetting","push","config","orgName","orgAddress","badges","useEffect","get","response","status","SwitchRender","commonPatrs_PageLoadingCircle","initialLoading_InitialLoading","login","post","session","createSession","logout","NewEmployeeForm","sendParams","requestStatus","_ref$profile","profile","_useForm","useForm","register","handleSubmit","setError","clearErrors","errors","formState","visible","setVisible","_useState3","_useState4","age","setAge","_useState5","_useState6","setValidates","_useState7","password","passwordConfirm","_useState8","setPassword","auth","uploadImage","useRef","ageList","toConsumableArray","Array","map","_","i","handleChange","defineProperty","target","message","onSubmit","Input","display","accept","onChange","img","files","current","title","reader","FileReader","onload","event","setAttribute","result","readAsDataURL","handleUpload","defaultValue","TextField","required","disabled","loggedin","size","telephone","tel","Box","FormControl","fullWidth","InputLabel","Select","v","MenuItem","key","maxLength","email","my","OutlinedInput","minLength","pattern","endAdornment","InputAdornment","IconButton","onClick","edge","VisibilityOff_default","Visibility_default","Button","endIcon","Send_default","useTextFilter","param","text","filtered","setFiltered","newList","filter","m","toLowerCase","indexOf","overflow","transform","bgcolor","boxShadow","p","avatarColor","hash","length","charCodeAt","toString","slice","SelectMember","fetch","setOpen","member","setMember","setValue","Fragment","component","employees","PersonAddAlt1Outlined_default","Modal","Box_Box","List","ListItem","placeholder","ListItemButton","selected","ListItemAvatar","Avatar","alt","ListItemText","primary","Divider","keys","Skeleton","fetchSubmittedShifts","period","submittedShiftList","fetchMyShifts","myShifts","fetchAssignMember","date","assignMember","assignShift","shifts","deleteShift","getMonAndDate","separater","arguments","undefined","getMonth","getDate","formattedTime","Date","hour","getHours","minute","getMinutes","padStart","formattedDate","getFullYear","renderMonth","days","year","month","lastDay","targetDay","dow","getDay","minWidth","attendance_time","leaving_time","comment","confirmed","rest","NewShiftForm","sendShiftParams","preventDefault","SelectMember_SelectMember","Slider","newValue","marks","valueLabelDisplay","min","max","step","multiline","rows","fetchInviteEmployees","createRoom","rooms","NewRoomForm","sendRoomParams","setLoading","sb","imageUploder","AWS","update","accessKeyId","secretAccessKey","Body","Bucket","Key","S3","region","putObject","promise","err","steps","NewEmployeeModal","dispatch","selectedDate","setDate","stepIndex","setStepIndex","stepComponents","NewEmployeeForm_NewEmployeeForm","imageUrl","getTime","sendEmployeeParams","FETCH_STATE","float","react_datepicker_min_default","customInput","DateRangeOutlined_default","dateFormat","NewShiftForm_NewShiftForm","NewRoomForm_NewRoomForm","marginLeft","PersonAddAltOutlined_default","Stepper","activeStep","alternativeLabel","index","Step","StepLabel","noSelectedStyle","textAlign","backButtonStyle","postion","bottom","displayIconStyle","Employees","_useReducer","useReducer","_useReducer2","setSelected","SetIndex","setText","list","ShowImageList","Paper","ImageList","cols","ButtonBase","ImageListItem","ImageListItemBar","ShowList","InformationDisplay","attendances","absent","shift_submit_rate","recent_shift","created","window","confirm","l","marginTop","px","ImageOutlined_default","Switch","checked","ListOutlined_default","TextField_TextField","NewEmployeeModal_NewEmployeeModal","ArrowCircleLeft_default","AddTaskCardButton","taskCardsList","setTaskCardsList","taskCardId","uuid","draggableId","tasks","Add_default","TaskCardTitle","taskCard","isClick","setIsClick","inputText","setInputText","change","find","TaskAddInput","taskId","Task","handleDelete","react_beautiful_dnd_esm","provided","innerRef","draggableProps","dragHandleProps","Cancel_default","Tasks","onDragEnd","startIndex","endIndex","remove","splice","reorder","source","destination","droppableId","droppableProps","Task_Task","TaskCard","t","handleDeleteCard","right","Delete_default","TaskCardTitle_TaskCardTitle","TaskInputForm_TaskAddInput","Tasks_Tasks","TaskCards","handleDragEnd","saveTask","patch","setTimeout","task_count","task_cards","useMemo","AddTaskCardButton_AddTaskCardButton","Grid","container","justifyContent","TaskCard_TaskCard","CalendarModal","_ref$open","_ref$handleClose","_ref$content","updateCalendarEvent","eventId","calendars","deleteCalendarEvent","CalendarEventTypes","colors","red","royalblue","green","orange","esm_Box_Box","FormControl_FormControl","RadioGroup","row","FormControlLabel","control","Radio","&.Mui-checked","CalendarForm","initialParams","setEvents","setInitial","SelectEventType","CalendarEventTypes_CalendarEventTypes","start","minDate","description","events","createCalendarEvent","calcAssignCount","time","count","early","mid","late","forEach","st","Math","ceil","en","Number","some","el","includes","countToEvent","CalendarShifts","setOpenState","setPeriod","s","Tooltip","arrow","Chip","AccountCircle_default","Calendar","initial","setShift","_useState9","_useState10","overlay","setOverlay","end","FormLabel","main","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","initialView","headerToolbar","center","locale","contentHeight","eventClick","ev","extendedProps","toLocaleString","timeZone","CalendarShifts_CalendarShifts","CalendarForm_CalendarForm","dateClick","dateStr","CalendarModal_CalendarModal","modalStyle","DefaultModal","inputStyle","Modal_Modal","SelectDate","setList","_ref$setDate","setSelectedDate","sort","k","useDateFilter","handleChangeDate","ArrowBackIosNew_default","ArrowForwardIos_default","justify-content","align-items","thisYear","years","from","Item","styled","theme","palette","mode","typography","body2","secondary","box-shadow","background-color","YearPicker","_ref2","flexGrow","xs","md","columns","sm","item","DefaultModal_DefaultModal","shiftTerms","today","initialPeriod","Shift","objectDestructuringEmpty","selectedShift","setSelectedShift","unapproved","setUnapproved","_useState11","_useState12","setDays","_useState13","_useState14","shiftParams","at","lv","con","unsubmitted","repeat","attend","handleSelectMonth","floor","next","copy","handleDetermine","ago","shiftClick","newShiftParams","employee_id","shiftCount","Stack_Stack","activeThumb","isArray","min_work_time","handleValue","unassignShift","YearPicker_YearPicker","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","column","TableBody","ids","Set","collectShift","employee","renderShift","findIndex","term","background","attendanceData","AttendanceReducer","timeConvert","IrregularTime","overtime","midnight_time","midnight_overtime","DetailModal","py","divider","orientation","flexItem","rest_time","fontWeight","working_time","irregularTime_IrregularTime","Graph","span","_templateObject","taggedTemplateLiteral","bgColor","AttendanceGraph","handleCheck","attendanceGraph","calc","overTime","timeToGraph","space","field","headerName","renderCell","FormGroup","Checkbox","updated_attendance_time","updated_leaving_time","updated_rest_time","DetailModal_DetailModal","DataGrid","pageSize","rowsPerPageOptions","localeText","jaJP","components","MuiDataGrid","defaultProps","ManageAttendance","setChecked","setFilter","approveTimecard","approveRequest","SelectDate_SelectDate","AttendanceGraph_AttendanceGraph","NotificationFeed","read","setRead","created_at","handleClick","button","ListItemIcon","Image","notificationsInitialState","notificationsList","notificationsReducer","Notification","viewAll","notifications","sortByRead","b","react","Drawer","anchor","role","Feed_NotificationFeed","Setting","initialDate","submittable_start","submittable_end","hours","setEvent","sendOrgParams","varinat","NativeSelect","n","shift_start_day","stampable_distance","c","Management","openState","mobileOpen","setMobileOpen","handleDrawerToggle","drawer","Toolbar","PersonOutlineOutlined_default","Badge","badgeContent","ChatOutlined_default","BadgeOutlined_default","attendance","AccessTimeOutlined_default","TaskOutlined_default","SettingsOutlined_default","CssBaseline","AppBar","ml","mr","szpshim","Menu_default","flexShrink","ModalProps","keepMounted","& .MuiDrawer-paper","boxSizing","Shift_Shift","ManageAttendance_ManageAttendance","Calendar_Calendar","TaskCards_TaskCards","Notification_Notification","Setting_Setting","switchRender","Clock","tick","setInterval","gutterBottom","toLocaleTimeString","containerStyle","circleOptions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","radius","TimestampMap","officePosition","myPosition","esm","googleMapsApiKey","GOOGLE_MAP_API","mapContainerStyle","zoom","url","Icon","scale","options","AttendanceButton","checkDistance","buttonState","setButtonState","setContent","enableHightAccuracy","timeout","dynamicStyle","success","coords","lat","latitude","lng","longitude","timestamp","timestamps","TimestampMap_TimestampMap","error","code","navigator","geolocation","getCurrentPosition","LeavingButton","onLine","buttonStyle","lineHeight","fontSize","fontFamily","opacity","cursor","transitionDuration","TimeStamp","setPosition","lat1","lon1","lat2","lon2","rad","deg","PI","dy","abs","dx","rx","ave","eccentricity","sqrt","pow","w2","sin","meridianRadius","boyuLine","cos","hubenyDistance","positions","Clock_Clock","AttendanceButton_AttendanceButton","LeavingButton_LeavingButton","RequestForm","minutes","initialFeed","at_hour","at_minute","lv_hour","lv_minute","feed","setFeed","submitParams","parse","classList","add","RequestModal","RequestForm_RequestForm","AttendanceIndex","workDate","totalWorkTime","over_time","midnight_over_time","reduce","sum","totalWorkingTime","totalingTimes","TableContainer_TableContainer","Table_Table","TableHead_TableHead","TableRow_TableRow","TableCell_TableCell","align","TableBody_TableBody","marginBottom","SelectMonth","setMonth","useMonthFilter","EmployeeAttendance","setSbParams","SelectMonth_SelectMonth","AttendanceIndex_AttendanceIndex","RequestModal_RequestModal","shiftList","orgParams","address","ShiftReducer","myshifts","wholeShift","SubmitFeed","times","thisDate","setThisDate","setComment","SelectTimes","placeHolder","onBlur","NotInterestedOutlined_default","checkedIcon","handleRest","InsertCommentOutlined_default","chipStyle","NewSubmitShifts","sendNewShifts","NewShifts","SubmitFeed_SubmitFeed","AddBoxOutlined_default","EmployeeShifts","overray","setOverray","aspectRatio","Business_default","LocationOn_default","LocalPhone_default","NewSubmitShifts_NewSubmitShifts","j","Profile","setProfile","sendProfile","EmployeeTop","actions","ListAlt_default","Logout_default","react_router","EmployeeShift_EmployeeShifts","EmployeeAttendance_EmployeeAttendance","TimeStamp_TimeStamp","Profile_Profile","SpeedDial","ariaLabel","SpeedDialIcon","openIcon","ModeEdit_default","SpeedDialAction","tooltipTitle","Login","fulWidth","NewOrganizationForm","empParams","geocoder","google","maps","Geocoder","validate","setValidate","setCoords","organizations","createOrganization","geocode","results","geometry","location","handleBlur","SignUp","setEmpParams","OrganizationForm_NewOrganizationForm","react_router_dom_min","timeStyle","deleteStyle","ChatTemplate","withStyles","defaultChatMsgStyles","classes","avatar","roomId","cancelSend","side","GridContainerProps","GridItemProps","AvatarProps","getTypographyProps","deletable","setDeletable","Grid_Grid","Avatar_Avatar","cx","msg","TypographyProps","Typography_Typography","onMouseOver","onMouseOut","DeleteForeverOutlined_default","messages","document","documentElement","clientHeight","ChatMessages","tempId","currentDate","baseTime","messageDate","chats_ChatTemplate","ChatInput","sendMessage","getElementById","deleteMessage","removeMessage","ChatReducer","AddChatRoom","setRooms","AddCommentOutlined_default","welcomeStyle","responsiveWidth","innerWidth","socket","Chat","openSearch","setOpenSearch","notice","setNotice","setTempid","SERVER","handleSelect","fetchMessages","emit","companion","handleTransition","path","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","io","on","stop","paddingLeft","FormControlLabel_FormControlLabel","labelPlacement","SearchOutlined_default","handleSearch","AddChatRoom_AddChatRoom","room","MainImage","ChatMessages_ChatMessages","setMessage","scrollHeight","scrollTo","behavior","ChatInput_ChatInput","createMessage","gridContentStyle","gridIconStyle","descContent","descImage","icons","employeesIcon","desc","timestampIcon","calendarIcon","chatIcon","shiftIcon","manageIcon","Top","commonPatrs_MainLogo","descImage1","descImage2","PrivateRoute","Component","objectWithoutProperties","render","AuthenticatedRoute","App","exact","badge_BadgeProvider","config_ConfigProvider","auth_AuthProvider","snackBar_SnackbarProvider","App_AuthenticatedRoute","App_PrivateRoute","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App_0","module","exports"],"mappings":"kMAGMA,EAAgB,GAAAC,OAFgE,gCAEhE,WACtBC,QAAQC,IAAIC,cAGL,IAAMC,EAAa,GAAAJ,OACvBD,EADuB,cAMbM,EAAS,GAAAL,OAAMD,EAAN,qBAeTO,GARgB,GAAAN,OAC1BD,EAD0B,8CAQJ,GAAAC,OACtBD,EADsB,6BAIZQ,EAAgB,GAAAP,OAC1BD,EAD0B,oCAIhBS,EAAc,GAAAR,OACxBD,EADwB,yBAIdU,EAAgB,GAAAT,OAC1BD,EAD0B,4BAQhBW,GAJoB,GAAAV,OAC9BD,EAD8B,oCAIJ,GAAAC,OAC1BD,EAD0B,+CAKhBY,EAAgB,GAAAX,OAC1BD,EAD0B,6BAIhBa,EAAQ,GAAAZ,OAClBD,EADkB,UAIRc,EAAe,GAAAb,OACzBD,EADyB,2BAIfe,EAAc,SAACC,GAAD,SAAAf,OACxBD,EADwB,WAAAC,OACEe,EADF,cAIdC,EAAU,GAAAhB,OACpBD,EADoB,oBASVkB,GALY,GAAAjB,OACtBD,EADsB,uBAKJ,GAAAC,OAClBD,EADkB,yBASRmB,EAAU,GAAAlB,OACpBD,EADoB,UAIVoB,EAAW,GAAAnB,OACrBD,EADqB,cAGXqB,EAAe,GAAApB,OACzBD,EADyB,kBAGfsB,EAAW,GAAArB,OACrBD,EADqB,4BAGXuB,EAAS,GAAAtB,OACnBD,EADmB,yBAGTwB,EAAY,GAAAvB,OACtBD,EADsB,mCAKZyB,EAAY,GAAAxB,OACtBD,EADsB,yBAYZ0B,GARe,GAAAzB,OACzBD,EADyB,4BAIL,GAAAC,OACpBD,EADoB,aAIJ,GAAAC,OAChBD,EADgB,6BAQN2B,EAAiB,GAAA1B,OAC3BD,EAD2B,6CAIjB4B,EAAgB,GAAA3B,OAC1BD,EAD0B,uBAOhB6B,EAAkB,GAAA5B,OAC5BD,EAD4B,qDAIlB8B,EAAc,GAAA7B,OACxBD,EADwB,sCAId+B,EAAa,GAAA9B,OACvBD,EADuB,mBAIbgC,EAAe,GAAA/B,OACzBD,EADyB,sBAIfiC,EAAU,GAAAhC,OACpBD,EADoB,qCAaVkC,EAAa,GAAAjC,OACvBD,EADuB,WAqBbmC,EAAc,GAAAlC,OACxBD,EADwB,kBC/JdoC,EAAiB,SAACC,GAC3B,OAAOC,IAAMC,QDoIcC,ECpIQH,EDoIT,GAAApC,OAC3BD,EAD2B,eAAAC,OACGuC,KCpI5BC,KAAK,SAAAC,GACF,OAAOA,IAETC,MAAM,SAACC,GAAO,OAAOA,IDgIG,IAACJ,6BEhKlBK,EACF,QADEA,EAEA,UAFAA,EAGH,OAHGA,EAIL,KAIKC,EAAe,CACxB,CACIC,MAAO,EACPC,MAAO,WAEX,CACID,MAAO,GACPC,MAAO,YAEX,CACID,MAAO,GACPC,MAAO,YAEX,CACID,MAAO,GACPC,MAAO,YAEX,CACID,MAAO,GACPC,MAAO,aAIFC,EAAY,CAAE,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAE5CC,EAAiB,SAACC,EAAKC,GAAN,MAC5B,CACEC,WAAY,CAACF,EAAK,GAClBG,SAAU,CAAC,GAAI,IACfC,UAAW,CAAC,GAAGH,KAQNI,GAAa,CACtBC,gBAAiB,YACjBC,MAAO,SAEEC,GAAU,CACnBF,gBAAiB,SASRG,GAAW,SAACC,GAAD,OACpBA,IAAQA,EAAIC,MAHS,sDAGYD,EAAIC,MAASC,MC5DrCC,GAAe,CACxBC,WAAYpB,EACZqB,aAAc,IAGLC,GAAmB,SAACC,EAAOC,GAEpC,OAAOA,EAAOC,MAEV,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,UAAW5B,IAEnB,IAAK,OACD,OAAO0B,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,UAAW5B,IAEnB,IAAK,YACD,MAAO,CACHoB,WAAYpB,EACZqB,aAAcG,EAAOK,SAG7B,QACI,MAAM,IAAIC,+FCvBTC,GAAiB,SAAAC,GAA0C,IAAxC1B,EAAwC0B,EAAxC1B,KAAK2B,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,QAErDC,EAAQC,IAAMC,WAAW,SAAeC,EAAOC,GACnD,OAAOC,EAAAC,EAAAC,cAACC,GAAA,EAADlB,OAAA7C,OAAA,CAAUgE,UAAW,EAAGL,IAAKA,EAAKN,QAAQ,UAAaK,MAG9D,OACEE,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,OAAO,IAC9BR,EAAAC,EAAAC,cAACO,GAAA,EAAD,CACE5C,KAAMA,EACN6C,iBAAkB,IAClBC,QAAS,kBAAKnB,KACdoB,aAAe,CAACC,SAAU,SAASC,WAAY,SAE/Cd,EAAAC,EAAAC,cAACP,EAAD,CAAQoB,SAAUtB,EAASc,GAAI,CAAES,MAAO,SACrCtB,MCjBEuB,GAAkBC,0BAEzBxC,GAAe,CACnBb,MAAM,EACN4B,QAAS,GACTC,QAAS,IAIEyB,GAAmB,SAAA5B,GAAgB,IAAd6B,EAAc7B,EAAd6B,SAAcC,EAEdC,mBAAS5C,IAFK6C,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEvCI,EAFuCF,EAAA,GAE7BG,EAF6BH,EAAA,GAS9C,OACIvB,EAAAC,EAAAC,cAACe,GAAgBU,SAAjB,CAA0BlE,MAAO,CAC7BiE,YAAaA,IAEZN,EACDpB,EAAAC,EAAAC,cAAC0B,GAAD,CACA/D,KAAM4D,EAAS5D,KACf2B,YAXY,WAClBkC,EAAYzC,OAAAC,EAAA,EAAAD,CAAA,GAAIwC,EAAL,CAAc5D,MAAM,MAWzB4B,QAASgC,EAAShC,QAClBC,QAAS+B,EAAS/B,iFC7BfmC,GAAgBX,0BAGhBY,GAAiB,SAAAvC,GAAgB,IAAd6B,EAAc7B,EAAd6B,SAAcC,EAEhBC,mBAAS,CAACzD,KAAK,EAAEC,MAAM,KAFPyD,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAErCU,EAFqCR,EAAA,GAE7BS,EAF6BT,EAAA,GAK5C,OACIvB,EAAAC,EAAAC,cAAC2B,GAAcF,SAAf,CAAwBlE,MAAO,CAC3BsE,OAAQA,EACRC,UAAWA,IAEVZ,4LCbXpE,IAAMiF,SAASC,eAAiB,aAChClF,IAAMiF,SAASE,eAAiB,eAChCnF,IAAMiF,SAASG,iBAAkB,EAElBpF,YAAf,0CCAMqF,GAAc,CAChBC,SAAU,WACVC,OAAQ,GACRvB,MAAO,GACPwB,IAAM,mBACNC,KAAM,mBACNrE,MAAO,QAGEsE,GAAW,kBACpB1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,KACL5C,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACAwC,UAAU,MACVC,WAAW,WACXxC,QAAS,GAELN,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAAC/B,MAAM,GAAIuB,OAAO,IAAKS,IAAKC,OACxCjD,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CACIH,MAAO,CAAC3E,MNgCE,oBM/BVqB,QAAQ,MNvBA,oBM+BlB0D,GAAoB,kBACtBnD,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CACIL,MAAOV,GACPjE,MAAM,aClCDiF,GAAenC,0BAEtBxC,GAAe,CACnB4E,KAAM,EACNC,aAAc,EACdC,MAAO,EACPC,SAAU,EACVC,KAAM,GAMKC,GAAgB,SAAApE,GAAgB,IAAd6B,EAAc7B,EAAd6B,SAAcC,EAEjBC,mBAAS5C,IAFQ6C,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEpCuC,EAFoCrC,EAAA,GAE7BsC,EAF6BtC,EAAA,GAK3C,OACIvB,EAAAC,EAAAC,cAACmD,GAAa1B,SAAd,CAAuBlE,MAAO,CAC1BmG,QACAC,SAAUA,IAETzC,ICnBL0C,GAAW,CAChBtB,IAAG,eAAA7H,OAFa,GAEb,SACHoJ,SAAU,IACVC,UAAU,IACVC,OAAQ,OACRC,QAAS,IACTC,OAAQ,wBACRC,aAAc,GAGFC,GAAiB,kBAE5BrE,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAACmB,QAAQ,KACrBlE,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAO0C,MAAK9D,OAAAC,EAAA,EAAAD,CAAA,GAAM6E,GAAazF,IAAUiC,QAAS,EAAGwC,WAAW,UAChE9C,EAAAC,EAAAC,cAAA,OACC6C,MAAO,CAACuB,UAAW,wBACnBtB,IAAKC,KAAMjC,MAjBG,GAiBcuB,OAjBd,KAmBdvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,cACPiD,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,eACjCvE,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,eACjCvE,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,eACjCvE,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,eACjCvE,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,eACjCvE,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,eACjCvE,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,eACjCvE,EAAAC,EAAAC,cAAA,OAAKnD,GAAG,eAAewH,UAAU,iBAGnCvE,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,iCC1BW+E,GAActD,0BAErBxC,GAAe,CACnB+F,QAAS,UACTC,UAAU,EACVC,OAAO,EACPC,KAAM,IAcKC,GAAe,SAAAtF,GAAgB,IAAd6B,EAAc7B,EAAd6B,SAAcC,EAEhBC,mBAAS5C,IAFO6C,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEnCvC,EAFmCyC,EAAA,GAE5BuD,EAF4BvD,EAAA,GAGpCwD,EAAUC,wBAEVpB,EAAQqB,qBAAW5B,IACnB6B,EAAYD,qBAAWpD,IA6CrBsD,EAAmB,WACvBL,EAAS,CACPJ,UAAS,EACTD,QAAS,QACXW,eAAeC,QACfC,MAAM,yFAGFC,EAAc,SAACC,GAChBA,EAAKb,OACNc,EAAeD,GACfT,EAAQW,KAAK,gBAEbZ,EAAS,CACPL,QAAS,MACTC,UAAU,EACVE,KAAMY,EAAKZ,KACXD,MAAOa,EAAKb,QACdI,EAAQW,KAAK,wBAKXD,EAAiB,SAACD,GACtBV,EAAS7F,OAAAC,EAAA,EAAAD,CAAA,GAAIH,EAAL,CACN2F,QAAS,MACTC,UAAU,EACVE,KAAMY,EAAKZ,KACXD,MAAOa,EAAKb,SAEVa,EAAKb,QACTO,EAAUlD,UAAV/C,OAAAC,EAAA,EAAAD,CAAA,GACKuG,EAAKG,OADV,CAEEC,QAASJ,EAAKI,QACdC,WAAYL,EAAKK,cAEnBjC,EAAMC,SAAS2B,EAAKM,UAKxBC,oBAAU,WCpGD/I,GAAMgJ,IAAInJ,GAChBM,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GACJ,MAAMA,IDiGTH,KAAK,SAAAC,GACJqI,EAAerI,EAAIoI,QAEpBnI,MAAM,SAACC,GACN,GAAgB,iBAANA,EAAV,CAEA,GADA1C,QAAQC,IAAIyC,GACc,MAAtBA,EAAE2I,SAASC,OAGb,MAAM5I,EAFP6H,QAKH,IAEF,IAAMgB,EAAe,WACnB,OAAOrH,EAAM2F,SACX,IAAK,UACH,OAAOzE,EAAAC,EAAAC,cAACkG,GAAD,MACT,IAAK,MACJ,OAAOhF,EACR,IAAK,iBACH,OAAOpB,EAAAC,EAAAC,cAACmG,GAAD,QAIX,OACErG,EAAAC,EAAAC,cAACsE,GAAY7C,SAAb,CAAsBlE,MAAO,CAC3BqB,MAAOA,EACPgG,SAAUA,EACVwB,MAnHU,SAACvE,GACX+C,EAAS,CAACL,QAAS,mBCnCE,SAAC1C,GAE1B,OAAO/E,GAAMuJ,KAAK1K,EAAY,CAAC2K,QAASzE,IACvC5E,KAAK,SAAAC,GAAG,OAAIA,IACZC,MAAM,SAACC,GAAS,MAAMA,IDgCnBmJ,CAAc1E,GACb5E,KAAK,SAAAC,GACHmI,EAAYnI,EAAIoI,QAGlBnI,MAAM,SAACC,GAEN,OADA1C,QAAQC,IAAIyC,GACLA,EAAE2I,SAASC,QAClB,KAAK,IACHnB,EAAQW,KAAK,UACbJ,MAAM,kIACN,MACF,KAAK,IACHP,EAAQW,KAAK,UACbJ,MAAM,gEACN,MACF,KAAK,IACHP,EAAQW,KAAK,UACbJ,MAAM,wFAGRR,EAAS,CAACL,QAAS,WA6FrBiC,OAxFY,WCnDT1J,GAAMC,OAAOL,GACnBO,KAAK,SAAAC,GAAG,OAAIA,IACZC,MAAM,SAAAC,GAAC,OAAI1C,QAAQC,IAAIyC,KDmDnBH,KAAK,SAAAC,GACa,KAAdA,EAAI8I,SAELnB,EAAQW,KAAK,UACbZ,EAAS,CACPJ,UAAU,EACVD,QAAS,QACXW,eAAeC,YAgFnBF,iBAAkBA,IAElBnF,EAAAC,EAAAC,cAACiG,EAAD,QEzIKQ,GAAkB,SAAApH,GAIzB,IAHFqH,EAGErH,EAHFqH,WACAC,EAEEtH,EAFFsH,cAEEC,EAAAvH,EADFwH,eACE,IAAAD,EADM,CAACC,QAAQ,IACfD,EAAAE,EAG4EC,eAAxEC,EAHJF,EAGIE,SAAUC,EAHdH,EAGcG,aAAaC,EAH3BJ,EAG2BI,SAASC,EAHpCL,EAGoCK,YAA2BC,EAH/DN,EAGkDO,UAAaD,OAH/DjG,EAK0BC,oBAAS,GALnCC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAKGmG,EALHjG,EAAA,GAKYkG,EALZlG,EAAA,GAAAmG,EAMkBpG,mBAAS,IAN3BqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAMGE,EANHD,EAAA,GAMQE,EANRF,EAAA,GAAAG,EAO6BxG,oBAAS,GAPtCyG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAOaE,GAPbD,EAAA,GAAAA,EAAA,IAAAE,EAQ4B3G,mBAAS,CAAC4G,SAAS,GAAGC,gBAAgB,KARlEC,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAQGC,EARHE,EAAA,GAQaC,EARbD,EAAA,GAUEE,EAAOrD,qBAAWT,IAElB+D,EAAcC,mBAGdC,EAAUxJ,OAAAyJ,GAAA,EAAAzJ,CAAI0J,MAAM,KAAKC,IAAI,SAACC,EAAGC,GAAJ,OAAWA,EAAI,KAE5CC,EAAe,SAACzL,GACpB+K,EAAYpJ,OAAAC,EAAA,EAAAD,CAAA,GAAIiJ,EAALjJ,OAAA+J,GAAA,EAAA/J,CAAA,GAAe3B,EAAE2L,OAAOrE,KAAOtH,EAAE2L,OAAOxL,UA4BvD,OAbEsI,oBAAU,WACNmC,EAASA,WAAaA,EAASC,iBAChCH,GAAa,GACbZ,EAAS,WAAa,CAAEpI,KAAM,WAAYkK,QAAS,qFAEnD7B,EAAY,YACZW,GAAa,KAGhB,CAACE,IAMClI,EAAAC,EAAAC,cAAA,QAAMiJ,SAAUhC,EAAaP,IAC7B5G,EAAAC,EAAAC,cAACG,GAAA,EAAD,KACAL,EAAAC,EAAAC,cAAA,SAAO6C,MAAO,CAACkB,OAAO,SACdjE,EAAAC,EAAAC,cAACkJ,GAAA,EAADnK,OAAA7C,OAAA,GACQ8K,EAAS,SADjB,CAEInE,MAAO,CAACsG,QAAS,QACjBC,OAAO,UACPtK,KAAK,OACLuK,SAAU,SAAAjM,GAAC,OAnCL,SAACA,GACjB,IAAMkM,EAAMlM,EAAE2L,OAAOQ,MAAM,GAC3BvC,EAAS,SAASqC,SAASjM,GAC3BiL,EAAYmB,QAAQC,MAAQH,EAAI5E,KAChC,IAAMgF,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACfxB,EAAYmB,QAAQM,aAAa,MAAOD,EAAMd,OAAOgB,SAEvDL,EAAOM,cAAcV,GA2BGW,CAAa7M,OAG/B0C,EAAAC,EAAAC,cAAA,OACI6C,MAAO,CAACR,OAAQ,IAAKvB,MAAM,KAC3BjB,IAAKwI,EACLvF,IAAK1E,GAASyI,MAG1B/G,EAAAC,EAAAC,cAAA,QAAAjB,OAAA7C,OAAA,GACM8K,EAAS,YADf,CAEEzJ,MAAOsJ,EAAQvI,MACfQ,KAAK,SACLoL,aAAcrD,EAAQA,SAAWA,EAAQA,QAAQvI,SAGnDwB,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACO8K,EAAS,OAAO,CAAEoD,SAAU,6EADnC,CAEIA,UAAQ,EACRC,UAAWjC,EAAKxJ,MAAM6F,OAAS2D,EAAKxJ,MAAM0L,SAC1C9M,MAAM,eACN0M,aAAcrD,GAAWA,EAAQnC,KACjCL,UAAU,YACVkG,KAAK,QACLxG,OAAO,YAETjE,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAO1C,MAAQ0C,EAAO1C,KAAKsE,SAEzDlJ,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMvC,QAAS,GAEhCN,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACK8K,EAAS,YAAY,CAAEoD,SAAU,yFADtC,CAEEA,UAAQ,EACR5M,MAAM,2BACN0M,aAAcrD,GAAWA,EAAQA,QAAQ2D,UACzCnG,UAAU,YACV9E,QAAQ,YAETO,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAOqD,KAAOrD,EAAOqD,IAAIzB,SAExDlJ,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAKrK,GAAI,CAACS,MAAM,UAChBhB,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAaC,WAAS,GACtB9K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,qBACA/K,EAAAC,EAAAC,cAAC8K,GAAA,EAAD/L,OAAA7C,OAAA,GACO8K,EAAS,MAAM,CAAEoD,SAAU,6EADlC,CAEG5M,MAAM,MACN0M,aAAcrD,GAAWA,EAAQA,QAAQa,IACzCrD,UAAU,YACV9G,MAAOmK,IAGNa,EAAQG,IAAI,SAAAqC,GAAC,OACXjL,EAAAC,EAAAC,cAACgL,GAAA,EAAD,CACEC,IAAKF,EACLxN,MAAOwN,EACP1B,SAAU,SAAAjM,GAAC,OAAIuK,EAAOvK,EAAE2L,OAAOxL,SAC7BwN,MAIVjL,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAOM,KAAON,EAAOM,IAAIsB,YAOvDlJ,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACK8K,EAAS,QAAQ,CAClBoD,SAAU,yGACVc,UAAW,CACT3N,MAAM,GACNyL,QAAS,oGALf,CAOEuB,KAAK,QAELzL,KAAK,QACLS,QAAQ,WACR/B,MAAM,6CACN0M,aAAcrD,EAAQA,SAAWA,EAAQA,QAAQsE,MACjD9G,UAAU,YACVN,OAAO,YAETjE,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAO+D,OAAS/D,EAAO+D,MAAMnC,SAE3DlJ,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMvC,QAAS,EAAGwC,WAAW,UAC9C9C,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAActK,GAAI,CAAC+K,GAAG,IACtBtL,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,uCACA/K,EAAAC,EAAAC,cAACqL,GAAA,EAADtM,OAAA7C,OAAA,GACO8K,EAAS,WAAW,CACtBoD,SAAU,6FACRkB,UAAW,CACT/N,MAAM,EACNyL,QAAS,iHACVuC,QAAS,CACThO,MAAO,0BACPyL,QAAS,4GARjB,CAWIxL,MAAM,iCACN6G,UAAU,YAEVvF,KAAMwI,EAAU,OAAS,WACzB+B,SAAUR,EACV2C,aACE1L,EAAAC,EAAAC,cAACyL,GAAA,EAAD,CAAgBrJ,SAAS,OACvBtC,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CACEC,QAAS,kBAAIpE,GAAYD,IACzBsE,KAAK,OAEJtE,EAAUxH,EAAAC,EAAAC,cAAC6L,GAAA9L,EAAD,MAAoBD,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,YAMvCD,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,KACA7K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,qDACC/K,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CACC3G,KAAK,kBACLlH,MAAM,+CACN6G,UAAU,YAEVvF,KAAMwI,EAAU,OAAS,WACzB+B,SAAUR,IAEZ/I,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAOY,UAAYZ,EAAOY,SAASgB,WAOrElJ,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACE1L,GAAI,CAAC+K,GAAG,GAERtM,KAAK,SACLS,QAAQ,YACRrB,MAAM,UACN8N,QAAUrF,GAAiBtJ,EACzByC,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkB7C,GAAI,CAACS,MAAO,SAAUuB,OAAO,UAAWnE,MAAM,YAEhE4B,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,OATJ,kJCjNEmM,GAAgB,SAACtN,EAAMuN,EAAMC,GAAS,IAAAjL,EAEZC,mBAAS,IAFGC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAErCkL,EAFqChL,EAAA,GAE3BiL,EAF2BjL,EAAA,GAWxC,OAPFwE,oBAAU,WACR,GAAKjH,EAAL,CACA,IAAM2N,EAAU3N,EAAM4N,OAAO,SAACC,GAC5B,OAAiD,IAA1CA,EAAEN,GAAOO,cAAcC,QAAQP,KAExCE,EAAYC,KACX,CAACH,IACKC,GCPLxJ,GAAS,CACbT,SAAU,WACVE,IAAK,MACLC,KAAM,MACNqK,SAAS,SACTvK,OAAO,IACPvB,MAAM,IACN+L,UAAW,uBACXC,QAAS,QACT7I,OAAQ,iBACR8I,UAAW,GACXC,EAAG,GAKCC,GAAc,SAACvI,GACjB,IAEIkE,EAFA1K,EAAQ,IACRgP,EAAO,EAEX,IAAKtE,EAAI,EAAGA,EAAIlE,EAAKyI,OAAQvE,GAAK,EAChCsE,EAAOxI,EAAK0I,WAAWxE,KAAOsE,GAAQ,GAAKA,GAG7C,IAAKtE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEzB1K,GAAS,KAAAzD,QADMyS,GAAa,EAAJtE,EAAU,KACdyE,SAAS,KAAMC,OAAO,GAG5C,OAAOpP,GAIEqP,GAAe,SAAAlO,GAMtB,IAJFwC,EAIExC,EAJFwC,OACAC,EAGEzC,EAHFyC,UACA0L,EAEEnO,EAFFmO,MAEErM,EAEsBC,oBAAS,GAF/BC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEKxD,EAFL0D,EAAA,GAEWoM,EAFXpM,EAAA,GAAAmG,EAG0BpG,qBAH1BqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGKkG,EAHLjG,EAAA,GAGakG,EAHblG,EAAA,GAAAG,EAKwBxG,qBALxByG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAKKrK,EALLsK,EAAA,GAKY+F,EALZ/F,EAAA,GAiBEwE,EAAWH,GAAcwB,EAAOnQ,GAYpC,OACGuC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACC/N,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CACMoC,UAAU,OACVnC,QAAS,kBAvBf6B,IAAQvQ,KAAK,SAAAC,GACO,MAAfA,EAAI8I,QAAgB2H,EAAUzQ,EAAIoI,KAAKyI,kBAEhDN,GAAQ,KAsBA3N,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,OAEED,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CAAOtQ,KAAMA,GAChBmC,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAM7N,GAAIwC,IACP/C,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACInB,WAAS,EACTrL,QAAQ,OACRoM,QAAS,kBAAI8B,GAAQ,KAHzB,sBAOMC,EACF5N,EAAAC,EAAAC,cAACmO,GAAA,EAAD,KACErO,EAAAC,EAAAC,cAACoO,GAAA,EAAD,KACEtO,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACAS,WAAS,EACTyD,YAAY,eACZhF,SAAU,SAACjM,GAAD,OAAMwQ,EAASxQ,EAAE2L,OAAOxL,WAGrC8O,EAASc,OAAS,EAEjBd,EAAS3D,IAAI,SAAA+D,GAAC,OACd3M,EAAAC,EAAAC,cAAA,OAAKiL,IAAKwB,EAAE5P,IACZiD,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CACKC,SAAW1M,EAAOhF,KAAK4P,EAAE5P,GACzB8O,QAAS,WACN7J,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CAAYhF,GAAG4P,EAAE5P,GAAI6H,KAAK+H,EAAE/H,UAG7C5E,EAAAC,EAAAC,cAACwO,GAAA,EAAD,KACE1O,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAQC,IAAKjC,EAAE/H,KAAOrE,GAAI,CAAEyM,QAASG,GAAYR,EAAE/H,QAChD+H,EAAE/H,KAAK4I,MAAM,EAAE,KAIpBxN,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAASnC,EAAE/H,QAEzB5E,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAAStP,QAAQ,QAAQuO,UAAU,UAKrChO,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACCtQ,GAASuC,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAArB,sEAERwP,EAAOhF,IAAI,SAAA+D,GAAC,OACV3M,EAAAC,EAAAC,cAAA,OAAKiL,IAAKwB,EAAE5P,IACZiD,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CACKC,SAAW1M,EAAOhF,KAAK4P,EAAE5P,GACzB8O,QAAS,WACN7J,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CAAYhF,GAAG4P,EAAE5P,GAAI6H,KAAK+H,EAAE/H,UAG7C5E,EAAAC,EAAAC,cAACwO,GAAA,EAAD,KACE1O,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAQC,IAAKjC,EAAE/H,KAAOrE,GAAI,CAAEyM,QAASG,GAAYR,EAAE/H,QAChD+H,EAAE/H,KAAK4I,MAAM,EAAE,KAIpBxN,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAASnC,EAAE/H,QAEzB5E,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAAStP,QAAQ,QAAQuO,UAAU,YAWvC/O,OAAAyJ,GAAA,EAAAzJ,CAAI0J,MAAM,GAAGqG,QAAQpG,IAAI,SAAAE,GAAC,OACxB9I,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAKjD,IAAKrC,EAAGvI,GAAI,CAAEgC,OAAO,KACtBvC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMvC,QAAS,GAChCN,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAUxP,QAAQ,WAAWuB,MAAO,GAAIuB,OAAQ,KAChDvC,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAAC/B,MAAK,eAAArG,OAAiB,GAAjB,SAClBqF,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAUxP,QAAQ,SAClBO,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAUxP,QAAQ,kBC9J7ByP,GAAuB,SAACC,GACjC,OAAOnS,IAAMgJ,IhBMiB,SAACmJ,GAAD,SAAAxU,OAC/BD,EAD+B,6CAAAC,OAC6BwU,EAAO,GADpC,cAAAxU,OACmDwU,EAAO,IgBPvEC,CAAmBD,IACnChS,KAAK,SAAAC,GACF,OAAOA,KAIFiS,GAAgB,SAACF,GAC1B,OAAOnS,IAAMgJ,IhBIO,SAACmJ,GAAD,SAAAxU,OACrBD,EADqB,+BAAAC,OACyBwU,EAAO,GADhC,cAAAxU,OAC+CwU,EAAO,IgBLzDG,CAASH,IACzBhS,KAAK,SAAAC,GACF,OAAOA,KAaFmS,GAAoB,SAACC,GAC9B,OAAOxS,IAAMgJ,IhBHW,SAACwJ,GAAD,SAAA7U,OACzBD,EADyB,oCAAAC,OAC0B6U,GgBEjCC,CAAaD,IAC7BrS,KAAK,SAAAC,GACF,OAAOA,IAETC,MAAM,SAACC,GAAO,OAAOA,KAgCdoS,GAAc,SAAC3N,GACxB,OAAO/E,IAAMuJ,KAAKnK,EAAO,CAACuT,OAAQ5N,IACjC5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAO,OAAOA,KAabsS,GAAc,SAAC7S,GACxB,OAAOC,IAAMC,QhB8FWC,EgB9FQH,EhB8FT,GAAApC,OACxBD,EADwB,sBAAAC,OACauC,KgB9FnCC,KAAK,SAAAC,GACF,OAAOA,IACTC,MAAM,SAACC,GAAO,OAAOA,IhB2FA,IAACJ,GiB9KtB2S,GAAgB,SAACL,GAAwB,IAAlBM,EAAkBC,UAAA1C,OAAA,QAAA2C,IAAAD,UAAA,GAAAA,UAAA,GAAR,IACrC,SAAApV,OAAU6U,EAAKS,WAAa,GAA5BtV,OAAgCmV,GAAhCnV,OAA4C6U,EAAKU,YAG7CC,GAAgB,SAAC9D,EAAOC,GAC5B,IAAKD,EAAO,OAAO,KAEnB,IAAImD,EAAO,IAAIY,KAAa,IAAR/D,GAChBgE,EAAOb,EAAKc,WACZC,EAASf,EAAKgB,aAElB,SAAA7V,OAAW2R,GAAQ,IAAnB3R,OAAwB0V,EAAK9C,WAAWkD,SAAS,EAAE,KAAnD,KAAA9V,OAA2D4V,EAAOhD,WAAWkD,SAAS,EAAE,OAGpFC,GAAgB,SAAClB,GAAD,SAAA7U,OACnB6U,EAAKmB,cADc,KAAAhW,QACI6U,EAAKS,WAAa,GAAG1C,WAAWkD,SAAS,EAAE,KAD/C,KAAA9V,OACuD6U,EAAKU,UAAU3C,WAAWkD,SAAS,EAAE,OAE5GG,GAAc,SAACzB,GAMnB,IALA,IAAM0B,EAAO,GACPC,EAAO3B,EAAO,GAChB4B,EAAQ5B,EAAO,GAAG,EAChB6B,EAAU,IAAIZ,KAAKU,EAAMC,EAAM,GAE7BjI,EAAE,EAAEA,GAAGkI,EAAQd,UAAUpH,IAAI,CACnC,IAAMmI,EAAY,IAAIb,KAAKU,EAAMC,EAAMjI,GAEvC+H,EAAKnL,KACH,CAAC3I,GAAI+L,EACJ0G,KAAMyB,EACNC,IAAG,IAAAvW,OAAKgD,EAAUsT,EAAUE,UAAzB,KACHC,SAAU,MAKf,OAAOP,GC3BHnS,GAAe,CACjB3B,GAAG,GACH6H,KAAK,iFACLyM,gBAAiB,EACjBC,aAAc,GACdC,QAAS,GACTC,WAAW,EACXC,MAAM,GAMJ1O,GAAQ,CACVT,SAAU,WACVE,IAAK,MACLC,KAAM,MACNsK,UAAW,wBACX/L,MAAO,IACP+C,SAAU,MACV5F,gBAAiB,QACjBgG,OAAQ,iBACR8I,UAAW,GACXC,EAAG,GAIMwE,GAAe,SAAAnS,GAKtB,IAJFoS,EAIEpS,EAJFoS,gBACAnC,EAGEjQ,EAHFiQ,KACA/K,EAEElF,EAFFkF,QAEEpD,EAE0BC,mBAAS5C,IAFnC6C,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEKU,EAFLR,EAAA,GAEaS,EAFbT,EAAA,GAgBI2D,EAAYD,qBAAWpD,IAK7B,OAHAkE,oBAAU,kBAAM/D,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CAAayN,KAAMA,MAAO,CAACA,IAIhDxP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAAA,QAAMiJ,SAbW,SAAC7L,GAClB0E,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CAAayN,KAAMA,KAC5BlS,EAAEsU,iBACFD,EAAgB5P,KAWhB/B,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAO0C,MAAO,CAAC/B,MAAM,MAAOiD,OAAO,QAAS3D,QAAS,GACjDN,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAC2R,GAAD,CACA9O,MAAOA,GACPhB,OAAQA,EACRC,UAAWA,EACX0L,MAAO,kBAAI6B,GAAkBC,OAI/BxP,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MACjBsC,EAAO6C,MAEX5E,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAChBoQ,GAAcL,EAAK,MAGxBxP,EAAAC,EAAAC,cAAC4R,GAAA,EAAD,CACIrU,MAAO,CAACsE,EAAOsP,gBAAiBtP,EAAOuP,cACvC/H,SAvCa,SAACjM,EAAGyU,GACrB/P,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CACLsP,gBAAiBU,EAAS,GAC1BT,aAAcS,EAAS,OAqCvBC,MAAOxU,EACPyU,kBAAkB,OAClBC,IAAKhN,EAAUnD,OAAOlE,KACtBsU,IAAKjN,EAAUnD,OAAOjE,MACtBsU,KAAM,KAGVpS,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACIpG,OAAO,SACP6G,WAAS,EACTV,aAAa,eACbiI,WAAS,EACTC,KAAM,EACN/I,SAAU,SAACjM,GAAD,OAAK0E,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CAAYwP,QAASjU,EAAE2L,OAAOxL,YAG1DuC,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACInB,WAAS,EACTP,SAAuB,KAAbxI,EAAOhF,GACjBiC,KAAK,SACLS,QAAQ,YACRrB,MAAM,UACN8N,QAASzH,EACLzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkBL,MAAO,CAAC/B,MAAM,SAAUuB,OAAQ,YACjD,IART,wDC1FKgQ,GAAuB,WAChC,OAAOvV,IAAMgJ,IAAIxK,GAChB2B,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KAKdkV,GAAa,SAACzQ,GACvB,OAAO/E,IAAMuJ,KAAKhL,EAAS,CAACkX,MAAO1Q,IAClC5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KCpBrBoB,GAAe,CAAC3B,GAAI,IAEb2V,GAAc,SAAAnT,GAIrB,IAHFoT,EAGEpT,EAHFoT,eACAlO,EAEElF,EAFFkF,QACAmO,EACErT,EADFqT,WACEvR,EAE0BC,mBAAS5C,IAFnC6C,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEKU,EAFLR,EAAA,GAEaS,EAFbT,EAAA,GAGIsR,EAAK5N,qBAAWhE,IAgBtB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACC/N,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAO0C,MAAO,CAAC/B,MAAM,MAAOuB,OAAQ,OAAO0B,OAAO,UAAW3D,QAAS,GACvEN,EAAAC,EAAAC,cAAA,QAAMiJ,SAhBW,SAAC7L,GAGlB,GAFAA,EAAEsU,iBACFgB,GAAW,IACN7Q,EAAOhF,GAGV,OAFA8V,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,mFACpDkT,GAAW,IACJ,EAETD,EAAe5Q,GACfC,EAAUtD,MAQRsB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,YAApB,kFAGFO,EAAAC,EAAAC,cAAA,UAAK6B,EAAO6C,KAAM7C,EAAO6C,KAAO,wCAEhC5E,EAAAC,EAAAC,cAAC2R,GAAD,CACI9P,OAAQA,EACRC,UAAWA,EACX0L,MAAO6E,KAITvS,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACEnB,WAAS,EACT1M,MAAM,UACNqB,QAAQ,YACRT,KAAK,SACLyF,QAASA,GALX,0EC5CGqO,GAAe,SAACtU,EAAO2M,EAAK0H,GAGrCE,KAAIpN,OAAOqN,OAAO,CACdC,YAAanY,uBACboY,gBAAiBpY,6CAIrB,IAMUiH,EAAS,CACXoR,KAAM3U,EACN4U,OAAStY,aACTuY,IAAKlI,GATE,IAAI4H,KAAIO,GAAG,CACtBvR,OAAQ,CAACqR,OAAQtY,cACjByY,OAAQzY,kBAYD0Y,UAAUzR,GAAQ0R,UACxBtW,KAAK,SAASqI,GACXqN,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAS,UAAWC,QAAO,2IAEtDrC,MAAM,SAASqW,GAChBb,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAS,QAASC,QAAO,yIACrD9E,QAAQC,IAAI6Y,MCZlBC,GAAQ,CACZ,iCACA,iCACA,0DAKI5Q,GAAQ,CACZT,SAAU,WACVE,IAAK,MACLC,KAAM,MACNsK,UAAW,wBACX/L,MAAO,MACP+C,SAAU,IACViJ,QAAS,QACT7I,OAAQ,iBACR8I,UAAW,GACXC,EAAG,GAIQ0G,GAAmB,SAAArU,GAAsB,IAApBT,EAAoBS,EAApBT,MAAO+U,EAAatU,EAAbsU,SAAaxS,EAG5BC,oBAAS,GAHmBC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAG7CxD,EAH6C0D,EAAA,GAGvCoM,EAHuCpM,EAAA,GAAAmG,EAItBpG,oBAAS,GAJaqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAI7CjD,EAJ6CkD,EAAA,GAIpCiL,EAJoCjL,EAAA,GAAAG,EAKpBxG,mBAAS,IAAI8O,MALOrI,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAK7CgM,EAL6C/L,EAAA,GAK/BgM,EAL+BhM,EAAA,GAAAE,EAMnB3G,mBAAS,GANU8G,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAM7C+L,EAN6C5L,EAAA,GAMlC6L,EANkC7L,EAAA,GAQ9CyK,EAAK5N,qBAAWhE,IA4GlBiT,EAAiB,CAzCrBlU,EAAAC,EAAAC,cAACiU,GAAD,CACAvN,WAlEqB,SAAC7E,GAClB,IACE,GAAGA,EAAOvD,MAAM,CACd,IAAM4V,EAAWrS,EAAO6C,KAAO,KAAM,IAAIwL,MAAQiE,UAC7CvB,GAAa/Q,EAAOvD,MAAM,GAAI4V,EAAUvB,IAC1CA,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAASC,QAAS,yIAGxDqC,EAAOvD,MAAO4V,GrBjDU,SAACrS,GAC/B,OAAO/E,IAAMuJ,KAAKzK,EAAY,CAACmS,UAAWlM,IACzC5E,KAAK,SAAAC,GACF,OAAOA,IAETC,MAAM,SAACC,GAAO,OAAOA,KqB+CnBgX,CAAmBvS,GAClB5E,KAAK,SAAAC,GACJ,GAAkB,MAAfA,EAAI8I,OAYP2N,EAAS,CACP7U,KAAM,YACNI,QAAQhC,EAAIoI,KAAKyI,YAEnB4E,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAWC,QAAS,iEACxDuU,EAAaD,EAAY,QAhBvB,OAAO5W,EAAI8I,QACT,KAAK,IACH2M,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,uHACpD,MACF,KAAK,IACHmT,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,4FAc9D,MAAMpC,GAAG1C,QAAQC,IAAIyC,EAAE4L,WAkC3BrC,cAAe/H,EAAMyV,YACrBR,SAAO,IAKL/T,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACA5K,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAarL,GAAI,CAACiU,MAAM,UACxBxU,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACEyU,YACM1U,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,MAEN2U,WAAW,aACXnG,SAAUqF,EACVvK,SAAU,SAACiG,GAAD,OAASuE,EAAQvE,OAG7BxP,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACE5K,EAAAC,EAAAC,cAAC2U,GAAD,CACAlD,gBAlDsB,SAAC5P,GACvB6Q,GAAW,GACXlD,GAAY3N,GACX5E,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAI8I,OAGH,OAFA2M,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,4EACpDiO,GAAQ,GAGZkF,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAUC,QAAQ,uEACtDuU,EAAaD,EAAY,MAyC7BxE,KAAMsE,EACNrP,QAASA,KAGXzE,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACAnB,WAAS,EACTe,QAAS,WAAKoI,EAAaD,EAAY,KAFvC,6BAOAhU,EAAAC,EAAAC,cAAC4U,GAAD,CACEnC,eAhDmB,SAAC5Q,GAEtByQ,GAAWzQ,GACV5E,KAAK,SAAAC,GACJ,GAAmB,OAAfA,EAAI8I,OACN,OAAO,EAET0M,GAAW,GACXC,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAUC,QAAQ,kGAyCtD+E,QAASA,EACTmO,WAAYA,KASd,OACE5S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KAEG/N,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACClJ,MAAO,CAACgS,WAAY,QACpBtV,QAAQ,YACRrB,MAAM,UACN8N,QAASlM,EAAAC,EAAAC,cAAC8U,GAAA/U,EAAD,MACT4L,QAAS,WAAO8B,GAAQ,KALzB,4BASA3N,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CACCtQ,KAAMA,EACN8C,QAAS,kBAAKgN,GAAQ,KAEpB3N,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAKrK,GAAIwC,IAET/C,EAAAC,EAAAC,cAAC+U,GAAA,EAAD,CAASC,WAAYlB,EAAWmB,kBAAgB,GAC7CxB,GAAM/K,IAAI,SAAClL,EAAO0X,GAAR,OACTpV,EAAAC,EAAAC,cAACmV,GAAA,EAAD,CAAMlK,IAAKiK,GACTpV,EAAAC,EAAAC,cAACoV,GAAA,EAAD,KACK5X,OAKVwW,EAAeF,mJCvJtBuB,GAAkB,CACtBvU,MAAM,OACNwU,UAAW,UAGPC,GAAkB,CACtBC,QAAS,WACTC,OAAQ,GACRlT,KAAM,GACNjC,OAAQ,KAGJoV,GAAmB,CACvB5U,MAAM,IACNuB,OAAO,KAKIsT,GAAY,WAAM,IAAAC,EAGLC,qBAAWlX,GAAkBH,IAHxBsX,EAAA/W,OAAAuC,EAAA,EAAAvC,CAAA6W,EAAA,GAGxBhX,EAHwBkX,EAAA,GAGjBnC,EAHiBmC,EAAA,GAAA3U,EAICC,qBAJDC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAIxBoN,EAJwBlN,EAAA,GAId0U,EAJc1U,EAAA,GAAAmG,EAKLpG,oBAAS,GALJqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAKxB0N,EALwBzN,EAAA,GAKjBuO,EALiBvO,EAAA,GAAAG,EAMPxG,qBANOyG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAMxBwE,EANwBvE,EAAA,GAMlBoO,EANkBpO,EAAA,GAQzBwE,EAAWH,GAActN,EAAMF,aAAc,OAAO0N,GACpD8J,EAAO7J,EAASc,OAAS,EAAGd,EAAWzN,EAAMF,aAqB7CyX,EAAgB,kBACpBrW,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAQ/V,GAAI,CAAES,MAAO,QAEnBhB,EAAAC,EAAAC,cAACqW,GAAA,EAAD,CAAWC,KAAM,GAEdJ,EAAKxN,IAAI,SAACrK,EAAI6W,GAAL,OAERpV,EAAAC,EAAAC,cAACuW,GAAA,EAAD,CAAYtL,IAAKiK,GACjBpV,EAAAC,EAAAC,cAACwW,GAAA,EAAD,CAAe7K,QAAS,kBAAIoK,EAAY1X,KACxCyB,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CACI5L,MAAO,CAAC/B,MAAO,IAAIuB,OAAO,KAC1BS,IAAK1E,GAASC,KAEpByB,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CACEhN,MAAOpL,EAAIqG,cAYbgS,EAAW,kBACf5W,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAMtL,MAAO,CAAE/B,MAAO,MAAM8L,SAAS,WACjCsJ,EAAKxN,IAAI,SAACrK,EAAI6W,GAAL,OACTpV,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CACQrD,IAAKiK,EACL7U,GAAI,CAACS,MAAO,KACZyN,SAAUA,GAAalQ,EAAIxB,KAAO0R,EAAS1R,GAC3C8O,QAAS,kBAAKoK,EAAY1X,KAEhCyB,EAAAC,EAAAC,cAACwO,GAAA,EAAD,KACE1O,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CACApO,GAAI,CAACS,MAAM,GAAGuB,OAAO,IAAKS,IAAK1E,GAASC,GAAMqQ,IAAKrQ,EAAIqG,QAGzD5E,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAASvQ,EAAIqG,YAQ7BiS,EAAqB,kBAEvBpI,EACAzO,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACE/N,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAACS,MAAO,OACZV,QAAS,EACTwC,WAAW,UAEb9C,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CACM5L,MAAO6S,GACPnW,QAAQ,SACRuD,IAAK1E,GAASmQ,KAEdzO,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY3C,GAAI,CAAC+K,GAAG,GAAI7L,QAAQ,MAAMgP,EAAS7J,MAC/C5E,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,OAEF/O,EAAAC,EAAAC,cAACkO,GAAA,EAAD,KACEpO,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY8K,UAAU,MAAtB,6CAAmCS,EAASqI,aAC5C9W,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY8K,UAAU,MAAtB,iCAAiCS,EAASsI,QAE1C/W,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY8K,UAAU,MAAtB,mDAAoCS,EAASuI,mBAC7ChX,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY8K,UAAU,MAAtB,6CAAmCS,EAASwI,cAAgB,gBAC5DjX,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY8K,UAAU,MAAtB,yDAAqCS,EAASyI,UAGrDlX,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAACT,SAAU,WAAYqT,OAAO,IAG1C3V,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACE7N,MAAM,QACNqB,QAAQ,YACRgL,KAAK,QACLoB,QAAS,WAnGVsL,OAAOC,QAdU,uMAiBnBta,EAAe2R,EAAS1R,IACvBI,KAAK,SAAAC,GACc,MAAfA,EAAI8I,SAEP+P,EAAY,MACZpC,EAAS,CACP7U,KAAM,YACNI,QAASgX,EAAK1J,OAAO,SAAA2K,GAAC,OAAIA,EAAEta,KAAO0R,EAAS1R,WA0F7CwN,UAAWkE,EAAS1R,IAAM0R,EAAS9J,OALrC,kBAcD3E,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAKrL,MAAOwS,IACVvV,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO,CAACuU,UAAW,KAAM7X,QAAQ,MAA7C,oFAyBF,OAnBAsG,oBAAU,WAER,IACE8N,EAAS,CAAC7U,KAAM,atBzLbhC,IAAMgJ,IAAIjL,GAChBoC,KAAK,SAAAC,GACF,OAAOA,IAETC,MAAM,SAACC,GAAO,OAAOA,IsBuLlBH,KAAK,SAAAC,GACNyW,EAAS,CACP7U,KAAM,YACNI,QAAUhC,EAAIoI,KAAKyI,cAItB,MAAO3Q,GACN1C,QAAQC,IAAIyC,EAAE4L,WAGhB,IAIElJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACF/N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAI,CAACgX,GAAG,EAAGhV,OAAQ,MAEtBvC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOE,GAAI,CAAC+K,GAAG,GAAIzI,UAAU,MAAMvC,QAAS,GAC1CN,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMC,WAAW,UAClC9C,EAAAC,EAAAC,cAACsX,GAAAvX,EAAD,MACED,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACEC,QAAStC,EACT7L,SAAU,kBAAK2M,GAAUd,MAE3BpV,EAAAC,EAAAC,cAACyX,GAAA1X,EAAD,OAEJD,EAAAC,EAAAC,cAAC0X,GAAA,EAAD,CACEnY,QAAQ,WACR8O,YAAY,eACZhF,SAAU,SAAAjM,GAAC,OAAI6Y,EAAQ7Y,EAAE2L,OAAOxL,UAEpCuC,EAAAC,EAAAC,cAAC2X,GAAD,CACI/Y,MAAOA,EACP+U,SAAUA,KAMPvH,GAAQC,EAASc,OAAS,GAC3BrN,EAAAC,EAAAC,cAAA,MAAI6C,MAAO,CAAC3E,MAAO,QAAnB,sEAGJ4B,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAACgC,OAAQ,KACbM,UAAU,MACVvC,QAAS,GAERxB,EAAMH,aAAepB,EAClB6X,EACApV,EAAAC,EAAAC,cAAC0W,EAAD,MAEA5W,EAAAC,EAAAC,cAACmW,EAAD,MAEFrW,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAUxP,QAAQ,cAAc8C,OAAQ,OAAOvB,MAAM,QAEzDhB,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CACE/V,GAAEtB,OAAAC,EAAA,EAAAD,CAAA,CAAGqD,SAAS,WAAW4K,EAAE,EAAGlM,MAAO,MAAM+C,SAAS,KAAQ1F,IAC5D+B,UAAW,GAETJ,EAAAC,EAAAC,cAAC2W,EAAD,QAIF7W,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,cACT5C,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAY7I,MAAO0S,IACjBzV,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,CAAqBM,GAAI,CAACS,MAAO,GAAIuB,OAAQ,0OC7P5CwV,GAAoB,SAAAxY,GAAsC,IAApCyY,EAAoCzY,EAApCyY,cAAeC,EAAqB1Y,EAArB0Y,iBAqB9C,OAEIjY,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAYC,QArBE,WACd,IAAMqM,EAAaC,eACnB,GAAGH,EAAc3K,QAAU,EAEvB,OADA/H,MAAM,sGACC,EAGX2S,EAAgB,GAAAtd,OAAAsE,OAAAyJ,GAAA,EAAAzJ,CACT+Y,GADS,CAEZ,CACIjb,GAAImb,EACJvO,MAAO,6CACPyO,YAAW,OAAAzd,OAASud,GACpBG,MAAM,SASVrY,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,WACdvE,EAAAC,EAAAC,cAACoY,GAAArY,EAAD,SC1BAsY,GAAgB,SAAAhZ,GAIxB,IAHDiZ,EAGCjZ,EAHDiZ,SACAR,EAECzY,EAFDyY,cACAC,EACC1Y,EADD0Y,iBACC5W,EAC6BC,oBAAS,GADtCC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GACMoX,EADNlX,EAAA,GACemX,EADfnX,EAAA,GAAAmG,EAEiCpG,mBAASkX,EAAS7O,OAAS,8CAF5DhC,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAEMiR,EAFNhR,EAAA,GAEiBiR,EAFjBjR,EAAA,GAGKkR,EAASb,EAAcxK,QACvB1E,EAAI+P,EAAOhM,QAAQgM,EAAOC,KAAK,SAAA7N,GAAC,OAAIA,EAAElO,IAAM,CAACyb,EAASzb,OAkB5D,OACAiD,EAAAC,EAAAC,cAAA,OAAK2L,QAhBa,WACd6M,GAAW,KAgBXD,EACAzY,EAAAC,EAAAC,cAAA,QAAMiJ,SAVS,SAAC7L,GAChBA,EAAEsU,iBACFiH,EAAO/P,GAAGa,MAAQgP,EAClBV,EAAiBY,GACjBH,GAAW,KAOP1Y,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CAAYtH,MAAO,CAAC5E,gBAAgB,SAASsM,KAAK,QAAQlB,SAf9C,SAACjM,GACjBsb,EAAatb,EAAE2L,OAAOxL,WAiBrBuC,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO,CAACyS,UAAU,UAAU/V,QAAQ,MAC5CkZ,KCnCAI,GAAe,SAAAxZ,GAMvB,IALDoZ,EAKCpZ,EALDoZ,UACAC,EAICrZ,EAJDqZ,aACAJ,EAGCjZ,EAHDiZ,SACAR,EAECzY,EAFDyY,cACAC,EACC1Y,EADD0Y,iBAGMrc,EAAW4c,EAASH,MACpBQ,EAASb,EAAcxK,QACvB1E,EAAI+P,EAAOhM,QAAQgM,EAAOC,KAAK,SAAA7N,GAAC,OAAIA,EAAElO,IAAM,CAACyb,EAASzb,OA2B5D,OACAiD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMiJ,SA1BS,SAAC7L,GAChB,IAAM0b,EAASb,eAEf,GADA7a,EAAEsU,iBACChW,EAASyR,QAAU,EAElB,OADA/H,MAAM,sGACC,EAEO,KAAdqT,IACJE,EAAO/P,GAAGuP,MAAM3S,KAAK,CACjB3I,GAAIic,EACJZ,YAAW,OAAAzd,OAASqe,GACpBtZ,QAASiZ,IAEbV,EAAiBY,GACjBD,EAAa,OAaT5Y,EAAAC,EAAAC,cAAA,SACAlB,KAAK,OACLuP,YAAY,mDACZhK,UAAU,eACVgF,SAdW,SAACjM,GAChB,GAAGA,EAAE2L,OAAOxL,MAAM4P,OAAS,GAAI,OAAO/H,MAAM,0CAC5CsT,EAAatb,EAAE2L,OAAOxL,QAalBA,MAAOkb,4BC1CNM,GAAO,SAAA1Z,GAMf,IALD6V,EAKC7V,EALD6V,MACA1R,EAICnE,EAJDmE,KACAsU,EAGCzY,EAHDyY,cACAC,EAEC1Y,EAFD0Y,iBACAO,EACCjZ,EADDiZ,SAGMK,EAASb,EAAcxK,QACvB1E,EAAI+P,EAAOhM,QAAQgM,EAAOC,KAAK,SAAA7N,GAAC,OAAIA,EAAElO,IAAM,CAACyb,EAASzb,OAEtDmc,EAAe,WACjBL,EAAO/P,GAAGuP,MAAQQ,EAAO/P,GAAGuP,MAAO3L,OAAO,SAAAnO,GAAG,OAAIA,EAAIxB,KAAO2G,EAAK3G,KACjEkb,EAAiBY,IAIrB,OACA7Y,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CACI/D,MAAOA,EACPgD,YAAW,QAAAzd,OAAU+I,EAAK3G,KAEzB,SAACqc,GAAD,OACGpZ,EAAAC,EAAAC,cAACoW,GAAA,EAADrX,OAAA7C,OAAA,CACA+O,IAAKzH,EAAK3G,GACVgD,IAAKqZ,EAASC,UACVD,EAASE,eACTF,EAASG,gBAJb,CAKAhV,UAAU,gBAENvE,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACIE,GAAI,CAACS,MAAM,QACX6B,UAAU,MACVC,WAAW,UAEX9C,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAAMiE,EAAKhE,SAC/BM,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAY7I,MAAO,CAACgS,WAAY,QAASlJ,QAASqN,GAC9ClZ,EAAAC,EAAAC,cAACsZ,GAAAvZ,EAAD,YCjCXwZ,GAAQ,SAAAla,GAAgD,IAA9CiZ,EAA8CjZ,EAA9CiZ,SAAUR,EAAoCzY,EAApCyY,cAAeC,EAAqB1Y,EAArB0Y,iBAEtCrc,EAAW4c,EAASH,MAK1B,OACArY,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAiBO,UAND,SAACzP,IATX,SAACrO,EAAU+d,EAAYC,GACjC,IAAMC,EAASje,EAASke,OAAOH,EAAY,GAC3C/d,EAASke,OAAOF,EAAU,EAAGC,EAAO,IAQhCE,CAAQne,EAAUqO,EAAO+P,OAAO5E,MAAOnL,EAAOgQ,YAAY7E,OAC1D6C,EAAiBD,KAKbhY,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAWe,YAAY,aAClB,SAACd,GAAD,OACGpZ,EAAAC,EAAAC,cAAA,MAAAjB,OAAA7C,OAAA,GAASgd,EAASe,eAAlB,CAAkCpa,IAAKqZ,EAASC,WAC3Czd,EAASgN,IAAI,SAAClF,EAAM0R,GAAP,OACVpV,EAAAC,EAAAC,cAAA,OAAKiL,IAAKzH,EAAK3G,IACfiD,EAAAC,EAAAC,cAACka,GAAD,CACIhF,MAAOA,EACP1R,KAAMA,EACNsU,cAAeA,EACfC,iBAAkBA,EAClBO,SAAUA,OAKhBY,EAAS7K,uCClBtB8L,IAPC,CAAC,eAAK,eAAK,eAAK,gBACXzR,IAAI,SAAC0R,EAAElF,GAAH,MAAc,CAAErY,GAAIqY,EACvCgD,YAAW,GAAAzd,OAAKya,GAChB9I,KAAMgO,KAIc,SAAA/a,GAKnB,IAJD6V,EAIC7V,EAJD6V,MACA4C,EAGCzY,EAHDyY,cACAC,EAEC1Y,EAFD0Y,iBACAO,EACCjZ,EADDiZ,SACCnX,EAEiCC,mBAAS,IAF1CC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEMsX,EAFNpX,EAAA,GAEiBqX,EAFjBrX,EAAA,GAIKgZ,EAAmB,WACtBtC,EAAiBD,EAActL,OAAO,SAAA4N,GAAC,OAAIA,EAAEvd,KAAOyb,EAASzb,OAGhE,OACIiD,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAWf,YAAW,aAAAzd,OAAe6d,EAASzb,IAAMqY,MAAOA,GACtD,SAACgE,GAAD,OACGpZ,EAAAC,EAAAC,cAAA,MAAAjB,OAAA7C,OAAA,CACI2D,IAAKqZ,EAASC,UACVD,EAASE,eAFjB,CAGI/U,UAAU,aAEVvE,EAAAC,EAAAC,cAAA,MACQkZ,EAASG,gBAEhBvZ,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CACG7I,MAAO,CAACT,SAAS,WAAYE,IAAI,EAAGgY,MAAM,GAC1C3O,QAAS0O,GAERva,EAAAC,EAAAC,cAACua,GAAAxa,EAAD,OAEDD,EAAAC,EAAAC,cAACwa,GAAD,CACAlC,SAAUA,EACVR,cAAeA,EACfC,iBAAkBA,KAGlBjY,EAAAC,EAAAC,cAACya,GAAD,CACIhC,UAAWA,EACXC,aAAcA,EACdJ,SAAUA,EACVR,cAAeA,EACfC,iBAAkBA,IAEvBjY,EAAAC,EAAAC,cAAC0a,GAAD,CACCpC,SAAUA,EACVR,cAAeA,EACfC,iBAAkBA,SC7C7B4C,GAAY,WAErB,IAAMhI,EAAK5N,qBAAWhE,IAChB2C,EAAOqB,qBAAW5B,IAHGhC,EAKeC,mBAAS,CAAC,CAACvE,GAAI,IAAIqb,YAAa,QAAQzO,MAAO,GAAG0O,MAAM,MALvE9W,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAKpB2W,EALoBzW,EAAA,GAKL0W,EALK1W,EAAA,GAOrBuZ,EAAgB,SAAC7Q,IAbb,SAAC+N,EAAe2B,EAAYC,GACtC,IAAMC,EAAS7B,EAAc8B,OAAOH,EAAY,GAChD3B,EAAc8B,OAAOF,EAAU,EAAGC,EAAO,IAYrCE,CAAQ/B,EAAe/N,EAAO+P,OAAO5E,MAAOnL,EAAOgQ,YAAY7E,OAC/D6C,EAAiBD,IAGf+C,EAAW,WClBI,IAAChZ,EDmBfoV,OAAOC,QAAQ,oMCnBArV,EDoBLiW,ECnBjBpd,QAAQC,IAAIkH,GAEL/E,IAAMge,MAAMre,EAAW,CAAC0b,MAAOtW,IACrC5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KDcdH,KAAK,SAAAC,GACgB,MAAfA,EAAI8I,QAIP2M,EAAGnR,YAAY,CAACjC,QAAQ,UAAW5B,MAAK,EAAM6B,QAAQ,iEACtDub,WAAW,WACNrX,EAAMC,SAAN5E,OAAAC,EAAA,EAAAD,CAAA,GAAmB2E,EAAMA,MAAzB,CAAgCF,KAAMtG,EAAIoI,KAAK0V,eAClD,MANErI,EAAGnR,YAAY,CAACjC,QAAQ,QAAS5B,MAAK,EAAM6B,QAAQ,4FAmBxE,OARIqG,oBAAU,WC1CH/I,IAAMgJ,IAAIpK,GAChBuB,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IDwClBH,KAAK,SAACC,GACH6a,EAAiB7a,EAAIoI,KAAK2V,eAEhC,IAGCC,kBAAQ,WAEZ,OACCpb,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,iBACXvE,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACAE,GAAI,CAACgC,OAAO,GAAGvB,MAAM,QACrB6B,UAAU,OAEV7C,EAAAC,EAAAC,cAACmb,GAAD,CACIrD,cAAeA,EACfC,iBAAkBA,IAEtBjY,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACIlJ,MAAO,CAACgS,WAAW,QACnB3W,MAAM,UACNqB,QAAQ,YACRoM,QAAS,kBAAKkP,MAJlB,iBASD/a,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAiBO,UAAWoB,GAExB9a,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CACCe,YAAY,YACZrX,UAAU,cAEP,SAACuW,GAAD,OACCpZ,EAAAC,EAAAC,cAAA,MAAAjB,OAAA7C,OAAA,GACMgd,EAASe,eADf,CAEEpa,IAAKqZ,EAASC,SACdtW,MAAO,CAAC/B,MAAM,UAGfhB,EAAAC,EAAAC,cAACob,GAAA,EAAD,CACGC,WAAS,EACTjb,QAAS,EACTkb,eAAe,SACf1Y,WAAW,cAEVkV,EAAcpP,IAAI,SAAC4P,EAAUpD,GAAX,OAEfpV,EAAAC,EAAAC,cAACub,GAAD,CACQtQ,IAAKqN,EAASzb,GACdqY,MAAOA,EACPoD,SAAUA,EACVR,cAAeA,EACfC,iBAAkBA,MAI9BmB,EAAS7K,mBAa3B,CAACyJ,iEEjHGjV,GAAQ,CACVT,SAAU,WACVE,IAAK,MACLC,KAAM,MACNsK,UAAW,wBACX/L,MAAO,IACPgM,QAAS,QACT7I,OAAQ,iBACR8I,UAAW,GACXC,EAAG,GAIMwO,GAAgB,SAAAnc,GAKvB,IAAAoc,EAAApc,EAJF1B,YAIE,IAAA8d,EAJG,CAAC9d,QAIJ8d,EAAAC,GAAArc,EAHFoO,QAGEpO,EAFFC,oBAEE,IAAAoc,EAFU,CAACpc,eAEXoc,EAAAC,EAAAtc,EADFG,eACE,IAAAmc,EADM,CAACnc,WACPmc,EAEF,OACI7b,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CACAtQ,KAAMA,EACN8C,QAASnB,GAETQ,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAEtB,OAAAC,EAAA,EAAAD,CAAA,GAAM8D,KACRrD,KCXAoc,GAAsB,SAAC/e,EAAIgF,GACpC,OAAO/E,IAAMge,OjCmHce,EiCnHOhf,EjCmHR,GAAApC,OAC3BD,EAD2B,6BAAAC,OACiBohB,IiCpHL,CAACC,UAAWja,IACjD5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IjC+GG,IAACye,GiC5GjBE,GAAsB,SAAClf,GACjC,OAAOC,IAAMC,QjC+IcC,EiC/IQH,EjC+IT,GAAApC,OAC3BD,EAD2B,6BAAAC,OACiBuC,KiC/I1CC,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IjC2IG,IAACJ,0DkCvKhBgf,GAAqB,SAAA3c,GAA0B,IAAxB9B,EAAwB8B,EAAxB9B,MAAOsL,EAAiBxJ,EAAjBwJ,aAErC7D,EAAYD,qBAAWpD,IAEvBsa,EACN,CACE,CAAChR,IAAM,MAAM1N,MAASyH,EAAUnD,OAAOqa,KACvC,CAACjR,IAAM,YAAY1N,MAASyH,EAAUnD,OAAOsa,WAC7C,CAAClR,IAAM,QAAQ1N,MAASyH,EAAUnD,OAAOua,OACzC,CAACnR,IAAM,SAAS1N,MAASyH,EAAUnD,OAAOwa,SAK1C,OAEAvc,EAAAC,EAAAC,cAACsc,GAAA,EAAD,KACCxc,EAAAC,EAAAC,cAACuc,GAAA,EAAD,KACCzc,EAAAC,EAAAC,cAACwc,GAAA,EAAD,CACEC,KAAG,EACHlf,MAAOA,EACP8L,SAAUR,GAEToT,EAAOvT,IAAI,SAAAqC,GAAC,OACVjL,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CACAzR,IAAKF,EAAEE,IACN1N,MAAOwN,EAAEE,IACT0R,QAAS7c,EAAAC,EAAAC,cAAC4c,GAAA,EAAD,CACPvc,GAAI,CACFnC,MAAO6M,EAAEE,IACT4R,gBAAiB,CACf3e,MAAO6M,EAAEE,IAAI,SAEnBzN,MAAOuN,EAAExN,cC5BRuf,GAAe,SAAAzd,GAMlB,IALNwc,EAKMxc,EALNwc,QACAkB,EAIM1d,EAJN0d,cACAtP,EAGMpO,EAHNoO,QACAuP,EAEM3d,EAFN2d,UACAC,EACM5d,EADN4d,WACM9b,EAEsBC,mBAAS2b,GAF/B1b,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAECU,EAFDR,EAAA,GAESS,EAFTT,EAAA,GAAAmG,EAGoBpG,mBAAS2b,EAAc7e,OAH3CuJ,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGCjK,EAHDkK,EAAA,GAGQmG,EAHRnG,EAAA,GAIAkL,EAAK5N,qBAAWhE,IAEhB8H,EAAc,SAACzL,GACnB0E,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL9C,OAAA+J,GAAA,EAAA/J,CAAA,GAAc3B,EAAE2L,OAAOrE,KAAOtH,EAAE2L,OAAOxL,UAgD5C2f,EAAkB,WAOtB,OACEpd,EAAAC,EAAAC,cAACmd,GAAD,CACE5f,MAAOA,EACPsL,aARiB,SAACzL,GACpBwQ,EAASxQ,EAAE2L,OAAOxL,OAClBuE,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CAAa3D,MAAOd,EAAE2L,OAAOxL,aAW1C,OACEuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAapL,QAAQ,YACnBO,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACEpG,OAAO,SACPjF,KAAK,OACLvB,MAAOsE,EAAO4H,MACd/E,KAAK,QACLL,UAAU,YACV7G,MAAM,iCACN+M,KAAK,QACLlB,SAAUR,IAEZ/I,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACCpG,OAAO,SACPjF,KAAK,OACLvB,MAAOsE,EAAOub,MACd/S,UAAQ,EACR3F,KAAK,QACLlH,MAAM,qBACN+M,KAAK,UAGNzK,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACAyU,YACI1U,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACIS,WAAS,EACT7G,OAAO,SACPwG,KAAK,QACLlG,UAAU,cAGlBqQ,WAAW,aACX2I,QAAS,IAAInN,KACb3B,SAAU,IAAI2B,KAAKrO,EAAOub,OAC1B/T,SAAU,SAACiG,GAAD,OAAUxN,EAAU/C,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAL,CAAYub,MAAO9N,QAG/CxP,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACCpG,OAAO,SACP6G,WAAS,EACTrN,MAAOsE,EAAOyb,YACd5Y,KAAK,cACLL,UAAU,YACVgF,SAAUR,EACVwF,YAAY,eACZ8D,WAAS,EACTC,KAAM,IAGRtS,EAAAC,EAAAC,cAACkd,EAAD,MAEErB,EACA/b,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACE/N,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOE,GAAI,CAAC2M,EAAE,GAAI5M,QAAS,EAAGuC,UAAU,OACxC7C,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACAxB,KAAK,QACLhL,QAAQ,YACRrB,MAAM,UACNyN,QAAS,WArHfiQ,GAAoBC,EAAQha,GAC3B5E,KAAK,SAAAC,GACJ8f,EAAU9f,EAAIoI,KAAKiY,QACnBN,EAAW/f,EAAIoI,KAAKiY,QACpB5K,EAAGnR,YAAY,CAACjC,QAAQ,UAAW5B,MAAK,EAAM6B,QAAQ,uEACtDiO,GAAQ,OA4GJ,qDAQA3N,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACAxB,KAAK,QACLhL,QAAQ,YACRrB,MAAM,QACNyN,QAAS,WAjHXsL,OAAOC,QAAQ,6EACnB6E,GAAoBF,GACnB5e,KAAK,SAAAC,GACJ8f,EAAU9f,EAAIoI,KAAKiY,QACnBN,EAAW/f,EAAIoI,KAAKiY,QACpB5K,EAAGnR,YAAY,CAACjC,QAAQ,QAAS5B,MAAK,EAAM6B,QAAQ,uEACpDiO,GAAQ,OAuGJ,4DAUJ3N,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACAxB,KAAK,SACLhL,QAAQ,YACRrB,MAAM,UACNyN,QA/GgB,SAACvO,GACjBA,EAAEsU,iBACF,KF1C4B,SAAC7P,GACjC,OAAO/E,IAAMuJ,KAAKvK,EAAY,CAACggB,UAAWja,IACzC5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KEsCnBogB,CAAoB3b,GACnB5E,KAAK,SAAAC,GACJ,GAAkB,MAAfA,EAAI8I,OAGL,OAFAyH,GAAQ,QACRkF,EAAGnR,YAAY,CAACjC,QAAQ,UAAW5B,MAAK,EAAM6B,QAAQ,+FAGxDwd,EAAU9f,EAAIoI,KAAKiY,QACnBN,EAAW/f,EAAIoI,KAAKiY,QACpB5K,EAAGnR,YAAY,CAACjC,QAAQ,UAAW5B,MAAK,EAAM6B,QAAQ,uEACtDiO,GAAQ,KAGT,MAAMrQ,GAAG1C,QAAQC,IAAIyC,EAAE4L,YA2FxB,yBC9JFyU,GAAkB,SAAChO,EAAQiO,GAE/B,IAAIC,EAAQ,CAACC,MAAM,EAAGC,IAAK,EAAGC,KAAK,GAGnC,OAAIrO,GAEJA,EAAOsO,QAAQ,SAAA1f,GACb,IAAKA,EAAIkT,KAAT,CACA,IAAMyM,EAAKC,KAAKC,KAAK7f,EAAI8S,iBACnBgN,EAAKF,KAAKC,KAAK7f,EAAI+S,cACnB9N,EAAQvE,OAAAyJ,GAAA,EAAAzJ,CAAI0J,MAAM0V,EAAGH,IAAKtV,IAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAEoV,IAEhDL,EAAQ,CACRC,MAAOD,EAAMC,MAAQQ,OAAO9a,EAAM+a,KAAK,SAAAC,GAAE,OAAIZ,EAAK7f,WAAW0gB,SAASD,MACtET,IAAKF,EAAME,IAAMO,OAAO9a,EAAM+a,KAAK,SAAAC,GAAE,OAAIZ,EAAK5f,SAASygB,SAASD,MAChER,KAAMH,EAAMG,KAAOM,OAAO9a,EAAM+a,KAAK,SAAAC,GAAE,OAAIZ,EAAK3f,UAAUwgB,SAASD,UAI9DX,GAfYA,GAmBfa,GAAe,SAAC/O,EAAQiO,GAa5B,OAXe3e,OAAO+P,KAAKW,GAAQ/G,IACjC,SAASuC,GACP,IAAM0S,EAAQF,GAAgBhO,EAAOxE,GAAMyS,GAE3C,MAAO,CACLjU,MAAK,UAAAhP,OAAMkjB,EAAMC,MAAZ,YAAAnjB,OAAuBkjB,EAAME,IAA7B,YAAApjB,OAAsCkjB,EAAMG,MACjDV,MAAOnS,EACP/M,MAAO,sDC7BFugB,GAAiB,SAAApf,GAMxB,IALFoQ,EAKEpQ,EALFoQ,OACAkO,EAIEte,EAJFse,MAEAe,GAEErf,EAHFiQ,KAGEjQ,EAFFqf,cAEErf,EADFsf,UAOA,OACI7e,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,sBAA8BkQ,EAAOtC,OAArC,UACArN,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,4BAA+Boe,EAA/B,UACA7d,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,MAECY,EAAO/G,IAAI,SAAAkW,GAAC,OACL9e,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAI,CAAC+K,GAAG,IACPtL,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMvC,QAAS,GAChCN,EAAAC,EAAAC,cAAC6e,GAAA,EAAD,CAASpV,MAAOmV,EAAEtN,UAAY,GAAK,yDAAawN,OAAK,GACrDhf,EAAAC,EAAAC,cAAC+e,GAAA,EAAD,CACE9T,IAAK2T,EAAE/hB,GACP0C,QAASqf,EAAEtN,UAAY,SAAW,WAClCvO,KAAMjD,EAAAC,EAAAC,cAAEgf,GAAAjf,EAAF,MACNvC,MAAOohB,EAAEla,QAIb5E,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aACfqf,EAAEzN,gBADP,WAC2ByN,EAAExN,kBAOrCtR,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAQnB,WAAS,EACTrL,QAAQ,YACRrB,MAAM,UACNyN,QAAS,WAhCrB+S,EAAa,WA6BT,sDCvBRlf,GAAU,GAGDyf,GAAW,SAAA5f,GAElB,IADJqf,EACIrf,EADJqf,aACIvd,EAE0BC,qBAF1BC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEG+d,EAFH7d,EAAA,GAEY4b,EAFZ5b,EAAA,GAAAmG,EAGoBpG,oBAAS,GAH7BqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGG7J,EAHH8J,EAAA,GAGSgG,EAHThG,EAAA,GAAAG,EAIwBxG,qBAJxByG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAIG2V,EAJH1V,EAAA,GAIWmV,EAJXnV,EAAA,GAAAE,EAKsB3G,mBAAS,IAL/B8G,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAKGzE,EALH4E,EAAA,GAKUiX,EALVjX,EAAA,GAAAkX,EAMyBhe,oBAAS,GANlCie,EAAAtgB,OAAAuC,EAAA,EAAAvC,CAAAqgB,EAAA,GAMGE,EANHD,EAAA,GAMYE,EANZF,EAAA,GAQEra,EAAYD,qBAAWpD,IACvB+b,EAAOhgB,EAAesH,EAAUnD,OAAOlE,KAAMqH,EAAUnD,OAAOjE,OAGhEmf,EAAgB,CAACtT,MAAM,GAAG6T,YAAY,GAAGF,MAAM,GAAGoC,IAAI,GAAGthB,MAAM,OA+DjE,OAXJ2H,oBAAU,WLrFC/I,IAAMgJ,IAAI/K,GAChBkC,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IKmFxBH,KAAK,SAACC,GACL8f,EAAU9f,EAAIoI,KAAKiY,QACnB4B,EAASjiB,EAAIoI,KAAKmK,QAClBwN,EAAW/f,EAAIoI,KAAKiY,WAGtB,IAIEzd,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACG0P,EACDzd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyf,GAAA,EAAD,iCACA3f,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMC,WAAW,UAE5B9C,EAAAC,EAAAC,cAACmd,GAAD,CACCtU,aArEa,SAACzL,GACzB4f,EAAUkC,EAAQ1S,OAAO,SAAAnO,GAAG,OAAIA,EAAIH,OAASd,EAAE2L,OAAOxL,YAsEhDuC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACE0C,MAAO,CAACgS,WAAY,QACpBlS,UAAU,MACVvC,QAAS,EACTwC,WAAW,UAET9C,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACEC,QAAS8H,EACTjW,SAAU,kBAAIkW,GAAYD,MAE5Bxf,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,oCAOLO,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CACGrf,GAAI,CAACgC,OAAO,QACZsd,QAAS,CAACC,KAAcC,KAAkBC,MAC1CC,YAAY,eACZC,cAAe,CACbC,OAAQ,6BAEVC,OAAO,KACPC,cAAe,IACf5C,OACE+B,EAAO,GAAA7kB,OAAAsE,OAAAyJ,GAAA,EAAAzJ,CAAOyf,GAAalb,EAAMoa,IAA1B3e,OAAAyJ,GAAA,EAAAzJ,CAAmCwe,IAAUA,EACtD6C,WA/Fe,SAAChjB,GAExB,IAAMijB,EAAKjjB,EAAEyM,MAEbkT,EAAgB,CACDtT,MAAO4W,EAAG5W,MACV6T,YAAa+C,EAAGC,cAAchD,YAC9BF,MAAOiD,EAAGjD,MAAMmD,eAAe,CAAEC,SAAU,eAC3ChB,IAAKa,EAAGb,IACRthB,MAAOmiB,EAAGpiB,iBAIrBuB,GAnCW,SAkCX6gB,EAAGpiB,gBACO6B,EAAAC,EAAAC,cAACygB,GAAD,CACEhR,OAAQnM,EAAMkN,GAAc6P,EAAGjD,QAC/BO,MAAO0C,EAAG5W,MACV6F,KAAM+Q,EAAGjD,MACTsB,aAAcA,IAItB5e,EAAAC,EAAAC,cAAC0gB,GAAD,CACA7E,QAASwE,EAAGxjB,GACZkgB,cAAeA,EACftP,QAASA,EACTuP,UAAWA,EACXC,WAAYA,IAIpBxP,GAAQ,IAkEAkT,UA/Dc,SAACvjB,GACxBoC,GACCM,EAAAC,EAAAC,cAAC0gB,GAAD,CACE3D,cAAahe,OAAAC,EAAA,EAAAD,CAAA,GAAMge,EAAN,CAAoBK,MAAMhgB,EAAEwjB,QAAQvT,aACjDI,QAASA,EACTuP,UAAWA,EACXC,WAAYA,IAGdxP,GAAQ,OA4DJ3N,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAUxP,QAAQ,cAAcuB,MAAM,OAAOuB,OAAQ,MAIvDvC,EAAAC,EAAAC,cAAC6gB,GAAD,CACEljB,KAAMA,EACN8P,QAASA,EACTnO,YAAa,kBAAImO,GAAQ,IACzBjO,QAASA,qNCtJXshB,GAAa,CACf1e,SAAU,WACVE,IAAK,MACLC,KAAM,MACNsK,UAAW,wBACXxK,OAAQ,QACRvB,MAAO,IACP+C,SAAU,MACV+I,SAAU,SACVE,QAAS,mBACT7I,OAAQ,iBACR8I,UAAW,GACXC,EAAG,GAIM+T,GAAe,SAAA1hB,GAA0C,IAAxC1B,EAAwC0B,EAAxC1B,KAAM8P,EAAkCpO,EAAlCoO,QAASjO,EAAyBH,EAAzBG,QAASwhB,EAAgB3hB,EAAhB2hB,WAElD,OAGAlhB,EAAAC,EAAAC,cAACihB,GAAA,EAAD,CACEtjB,KAAMA,EACN8C,QAAS,kBAAIgN,GAAQ,KAErB3N,EAAAC,EAAAC,cAACsc,GAAA,EAAD,CAAKjc,GAAEtB,OAAAC,EAAA,EAAAD,CAAA,GAAM+hB,GAAcE,IACtBxhB,0BClBE0hB,GAAa,SAAA7hB,GAIpB,IAHF6W,EAGE7W,EAHF6W,KACAiL,EAEE9hB,EAFF8hB,QAEEC,EAAA/hB,EADFwU,eACE,IAAAuN,EADM,SAAS9R,GAAM5U,QAAQC,IAAI2U,IACjC8R,EAAAjgB,EAGoCC,mBAAS,IAAI8O,MAHjD7O,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAGGyS,EAHHvS,EAAA,GAGiBggB,EAHjBhgB,EAAA,GAIEgL,E1BDc,SAAC6J,EAAM5G,GAAS,IAAA9H,EAEJpG,mBAAS,IAFLqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAE7B6E,EAF6B5E,EAAA,GAEnB6E,EAFmB7E,EAAA,GAG9B+I,EAAa,GAAA/V,OAAM6U,EAAKmB,cAAX,KAAAhW,QAA8B,MAAQ6U,EAAKS,WAAW,IAAIzC,OAAQ,GAAlE,KAAA7S,QAA0E,KAAK6U,EAAKU,WAAW1C,OAAO,IASzH,OAPAzH,oBAAU,WACR,IAAM0G,EAAU2J,EAAK1J,OAAO,SAAAnO,GAAG,OAAIA,EAAIiR,MAAQkB,IAC/CjE,EAAQ+U,KAAK,SAACC,EAAGxW,GAAJ,OAAUwW,EAAEjS,KAAOiS,EAAEjS,OAClChD,EAAYC,IACZ,CAAC+C,EAAK4G,IAGD7J,E0BXUmV,CAActL,EAAMtC,GAErC/N,oBAAU,WAAOsb,EAAQ9U,IAAW,CAACA,EAAU6J,IAG/C,IAAMuL,EAAmB,SAAC3iB,GACxB,OAAQA,GACN,IAAK,QAGH,OAFAuiB,EAAgB,IAAInR,KAAK0D,EAAaC,QAAQD,EAAa5D,UAAY,UACvE6D,EAAQD,GAEV,IAAK,OAGH,OAFAyN,EAAgB,IAAInR,KAAK0D,EAAaC,QAAQD,EAAa5D,UAAY,UACvE6D,EAAQD,KAQZ,OAEI9T,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAKC,WAAW,UAC9B9C,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAYC,QAAS,kBAAM8V,EAAiB,UAC3C3hB,EAAAC,EAAAC,cAAC0hB,GAAA3hB,EAAD,OAEDD,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,KACG5L,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACAyU,YACQ1U,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,MAER2U,WAAW,aACXnG,SAAUqF,EACVvK,SAAU,SAACiG,GAAD,OAAS+R,EAAgB/R,OAGrCxP,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAaC,QAAS,kBAAM8V,EAAiB,WAC3C3hB,EAAAC,EAAAC,cAAC2hB,GAAA5hB,EAAD,OAGND,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAAMoQ,GAAciE,EAAc,iBCnDxDoN,GAAW,CACb7X,QAAW,OACXyY,kBAAmB,SACnBC,cAAe,UAGbC,IAAW,IAAI5R,MAAOO,cACtBsR,GAAQtZ,MAAMuZ,KAAKvZ,MAAM,GAAI,SAAC8Y,EAAExW,GAAH,OAAW,EAAEA,EAAG+W,KAE7CG,GAAOC,aAAO9L,KAAP8L,CAAc,SAAA7iB,GAAA,IAAG8iB,EAAH9iB,EAAG8iB,MAAH,OAAApjB,OAAAC,EAAA,EAAAD,CAAA,CACvBd,gBAAwC,SAAvBkkB,EAAMC,QAAQC,KAAkB,UAAY,QAC1DF,EAAMG,WAAWC,MAFG,CAGvBve,QAASme,EAAM/hB,QAAQ,GACvBkV,UAAW,SACXpX,MAAOikB,EAAMC,QAAQhW,KAAKoW,cAGtB3f,GAAQ,CACZ4f,aAAc,EACdC,mBAAoB,OACpBze,OAAU,kCAMD0e,GAAa,SAAAC,GAEpB,IADF/Z,EACE+Z,EADF/Z,aACE1H,EAGkBC,oBAAS,GAH3BC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAGCxD,EAHD0D,EAAA,GAGOoM,EAHPpM,EAAA,GAMA7B,EAAUM,EAAAC,EAAAC,cAAA,WAEbF,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAI,CAAEwiB,SAAU,IAClB/iB,EAAAC,EAAAC,cAACob,GAAA,EAAD,CAAMC,WAAS,EAACjb,QAAS,CAAE0iB,GAAI,EAAGC,GAAI,GAAKC,QAAS,CAAEF,GAAI,EAAGG,GAAI,EAAGF,GAAI,KACrEhB,GAAMrZ,IAAI,SAACkI,EAAMsE,GAAP,OACTpV,EAAAC,EAAAC,cAACob,GAAA,EAAD,CAAM8H,MAAI,EAACJ,GAAI,EAAGG,GAAI,EAAGF,GAAI,EAAG9X,IAAKiK,GAEnCpV,EAAAC,EAAAC,cAACiiB,GAAD,CACIplB,GAAI+T,EACJ/N,MAAO,CAACA,UACRtF,MAAOqT,EACPjF,QAAS,SAACvO,GACNyL,EAAazL,GACbqQ,GAAQ,KAETmD,SAaf,OACA9Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,KACI5L,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,CAAuB4L,QAAS,kBAAI8B,GAAQ,OAE5C3N,EAAAC,EAAAC,cAACmjB,GAAD,CACA3jB,QAASA,EACT7B,KAAMA,EACN8P,QAASA,EACTuT,WAAYA,OCjDdxiB,GAAe,CACnB3B,GAAI,GACJ6H,KAAK,GACLyM,gBAAgB,EAChBC,aAAa,GAITgS,GAAa,CACjB,CAACvmB,GAAI,QAAQW,MAAM,SAAI4f,MAAM,EAAEoC,IAAI,GAAGthB,MAAM,UAC5C,CAACrB,GAAI,MAAMW,MAAM,eAAK4f,MAAM,GAAGoC,IAAI,GAAGthB,MAAM,SAC5C,CAACrB,GAAI,OAAOW,MAAM,SAAI4f,MAAM,GAAGoC,IAAI,GAAGthB,MAAM,YAGxCmlB,GAAQ,IAAInT,KACZoT,GAAgB,CAACD,GAAM5S,cAAc4S,GAAMtT,WAAW,GAE/CwT,GAAQ,SAAAlkB,GAEdN,OAAAykB,GAAA,EAAAzkB,CAAAM,GAAA,IAAA8B,EAEmBC,qBAFpBC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEC5D,EAFD8D,EAAA,GAEQuM,EAFRvM,EAAA,GAAAmG,EAGwBpG,oBAAS,GAHjCqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGCjD,EAHDkD,EAAA,GAGUiL,EAHVjL,EAAA,GAAAG,EAIoCxG,mBAAS5C,IAJ7CqJ,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAIC6b,EAJD5b,EAAA,GAIgB6b,EAJhB7b,EAAA,GAAAE,EAK8B3G,oBAAS,GALvC8G,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAKC4b,EALDzb,EAAA,GAKa0b,EALb1b,EAAA,GAAAkX,EAMkBhe,oBAAS,GAN3Bie,EAAAtgB,OAAAuC,EAAA,EAAAvC,CAAAqgB,EAAA,GAMCzhB,EAND0hB,EAAA,GAMO5R,EANP4R,EAAA,GAOA1M,EAAK5N,qBAAWhE,IAPhB8iB,GAQQ9e,qBAAW5B,IACD/B,mBAAS,KAT3B0iB,EAAA/kB,OAAAuC,EAAA,EAAAvC,CAAA8kB,EAAA,GASClT,EATDmT,EAAA,GASOC,EATPD,EAAA,GAAAE,EAUsB5iB,mBAASkiB,IAV/BW,EAAAllB,OAAAuC,EAAA,EAAAvC,CAAAilB,EAAA,GAUC/U,EAVDgV,EAAA,GAUStF,EAVTsF,EAAA,GAcAC,EAAc,SAACC,EAAGC,EAAIC,GAE1B,MAAM,CACJC,YAAY,CAAClY,KAAMuX,EAAa,OAAK,qBAAM9gB,MAAO,CAAC5E,gBAAiB,QAASC,MAAO,SACpFqT,KAAK,CAACnF,KAAI,GAAA3R,OAAK,WAAM8pB,OAAOnG,QAAQiG,IAA1B,WAAoCxhB,MAAO,CAAC5E,gBAAiB,yBACvEumB,OAAQ,CAACpY,KAAI,GAAA3R,OAAK,WAAM8pB,OAAOnG,QAAQiG,KAA1B5pB,OAAkC0pB,EAAlC,KAAA1pB,OAAwC2pB,GAAKvhB,MAAO,CAAC5E,gBAAiB,WAiDjF+G,EAAYD,qBAAWpD,IAmDrB8iB,EAAoB,SAAC3lB,GACzB,OAAQA,GACN,IAAK,QAEH,YADA6f,EAAU,CAAC1P,EAAO,GAAKgP,KAAKyG,MAAMzV,EAAO,GAAK,IAAKA,EAAO,GAAK,GAAI,IAErE,IAAK,OACH,IAAM0V,EAAO,IAAK,IAAK1V,EAAO,GAAI,IAAM,GAExC,YADA0P,EAAU,CAAC1P,EAAO,GAAKgP,KAAKyG,MAAMC,EAAM,IAAIA,MAW9C1d,EAAe,SAAC7J,G1BrIK,IAACyE,E0BsI1BzE,EAAEsU,iBACCuF,OAAOC,QAAP,4LAGFuM,EAAc5mB,GAAK2S,GAAYiU,I1B1IN5hB,E0B0ImC4hB,E1BzI3D5hB,EAAOyN,KAAO,IAAIY,KAAKrO,EAAOyN,KAAK6E,UAAU,OACtCrX,IAAMuJ,KAAKvL,EAAU,CAAC2U,OAAQ5N,IACpC5E,KAAK,SAAAC,GACF,OAAOA,IAETC,MAAM,SAACC,GAAO,OAAOA,M0BqIxBH,KAAK,SAAAC,GACA,GAAkB,MAAfA,EAAI8I,OAAiB,OAAO2M,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,+FACnF,IAAMolB,EAAOrnB,EAAM+P,QAAQd,OAAO,SAAA2K,GAAC,OAAIA,EAAEta,KAAO4mB,EAAc5mB,KAC9D+Q,EAAQ,GAAAnT,OAAAsE,OAAAyJ,GAAA,EAAAzJ,CAAK6lB,GAAL,CAAU1nB,EAAIoI,KAAKhC,SAC3BqP,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAUC,QAAQ,uEACtDiO,GAAQ,MAOVoX,EAAkB,SAACznB,GACvB,GAAoB,IAAjBG,EAAM4P,OAAc,OAAOwF,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,+F1BrIrD,IAACqC,K0BsIdtE,E1BrId7C,QAAQC,IAAIkH,GACL/E,IAAMge,MAAMxe,EAAe,CAACmT,OAAQ5N,IAC1C5E,KAAK,SAAAC,GACF,OAAOA,IACTC,MAAM,SAACC,GAAO,OAAOA,K0BkIxBH,KAAK,SAAAC,GACA,GAAkB,MAAfA,EAAI8I,OAAiB,OAAO2M,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,+FACnFoO,EAAS1Q,EAAIoI,KAAKmK,OAAO6R,KAAK,SAACwD,EAAKH,GAAN,OAAaG,EAAIxV,KAAOqV,EAAKrV,QAC3DqD,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAUC,QAAQ,0EAMxDulB,EAAa,SAACzhB,EAAMzB,GAGxB,GAFAnH,QAAQC,IAAI,SAET2I,EACCogB,EAAiBpgB,OAChB,CACH,IAAM0hB,EAAiB,CACrBC,YAAapjB,EAAOojB,YACpB3V,KAAMzN,EAAOyN,KACb5K,KAAM7C,EAAO6C,KACbyM,gBAAiBnM,EAAUnD,OAAOlE,KAClCyT,aAAcpM,EAAUnD,OAAOjE,OAEjC8lB,EAAiBsB,GAGnBvX,GAAS9P,IAILunB,EAAa,SAAChQ,GAClB,IAAMwI,EAAQhgB,EAAesH,EAAUnD,OAAOlE,KAAMqH,EAAUnD,OAAOjE,OAE/D0F,EAAQ/F,EAAMiP,OAAO,SAAAnO,GAAG,OAAI,IAAI6R,KAAK7R,EAAIiR,MAAMU,WAAaW,EAAKuE,GAAO5F,KAAKU,YACnF,OAAOyN,GAAgBna,EAAMoa,IAKzBle,EACJM,EAAAC,EAAAC,cAAA,QAAMiJ,SAAU,SAAC7L,GAAD,OAAK6J,EAAa7J,KAClC0C,EAAAC,EAAAC,cAACmlB,GAAA,EAAD,CAAOtiB,MAAO,CAAC/B,MAAM,MAAOiD,OAAO,QAAS3D,QAAS,GACrDN,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MACfoQ,GAAc,IAAIO,KAAKuT,EAAcnU,MAAM,MAE9CxP,EAAAC,EAAAC,cAACmlB,GAAA,EAAD,CAAOxiB,UAAU,MAAM2Y,eAAe,iBACtCxb,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MACjBkkB,EAAc/e,MAElB+e,EAAcnS,UACbxR,EAAAC,EAAAC,cAAC+e,GAAA,EAAD,CACExf,QAAQ,SACRrB,MAAM,UACNV,MAAM,uBAENsC,EAAAC,EAAAC,cAAC+e,GAAA,EAAD,CACAxf,QAAQ,WACR/B,MAAM,wBAOVsC,EAAAC,EAAAC,cAAC4R,GAAA,EAAD,CACIlN,KAAM+e,EAAc5mB,GACpBU,MAAO,CAACkmB,EAActS,gBAAiBsS,EAAcrS,cACrD/H,SAAU,SAACjM,EAAGyU,EAAUuT,GAAd,OAxHI,SAAChoB,EAAGyU,EAAUuT,GAE3B3c,MAAM4c,QAAQxT,IAMf6R,EAFkB,IAAhB0B,EAEermB,OAAAC,EAAA,EAAAD,CAAA,GAAI0kB,EAAL,CAAmBtS,gBAAiB8M,KAAKjM,IAAIH,EAAS,GAAIzU,EAAE2L,OAAOxL,MAAM,GAAKyH,EAAUnD,OAAOyjB,iBAE9FvmB,OAAAC,EAAA,EAAAD,CAAA,GAAI0kB,EAAL,CAAmBrS,aAAc6M,KAAKhM,IAAIJ,EAAS,GAAIzU,EAAE2L,OAAOxL,MAAM,GAAK,MA8GrDgoB,CAAYnoB,EAAGyU,EAAUuT,IAC/DtT,MAAOxU,EACPyU,kBAAkB,OAClBC,IAAKhN,EAAUnD,OAAOlE,KACtBsU,IAAKjN,EAAUnD,OAAOjE,MACtByM,SAAUoZ,EAAclS,KACxBW,KAAM,GACNrP,MAAO,CAACkB,OAAU,YAErBjE,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACKC,QAASiM,EAAclS,KACvBlI,SAAU,WAAKqa,EAAiB3kB,OAAAC,EAAA,EAAAD,CAAA,GAAI0kB,EAAL,CAAmBlS,MAAOkS,EAAclS,WArC7E,SAuCAzR,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACInB,WAAS,EACTP,SAA8B,KAApBoZ,EAAc5mB,GACxBiC,KAAK,SACLS,QAAQ,YACRrB,MAAM,UACN8N,QAASzH,EACLzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkBL,MAAO,CAAC/B,MAAM,SAAUuB,OAAQ,YACjD,IART,oDAYAvC,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACInB,WAAS,EACTP,UAAWoZ,EAAc5mB,GACzBiC,KAAK,SACLS,QAAQ,YACRrB,MAAM,QACN8N,QAASzH,EACLzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkBL,MAAO,CAAC/B,MAAM,SAAUuB,OAAQ,YACjD,GACLsJ,QAAS,SAACvO,GAAD,OAtOO,SAACA,EAAGP,GACxBO,EAAEsU,iBACE7U,GACDoa,OAAOC,QAAP,wEAGGxE,GAAW,GACXhD,GAAY7S,GACXI,KAAK,SAAAC,GACA,GAAkB,MAAfA,EAAI8I,OAAiB,OAAO2M,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAAQC,QAAQ,+FACnFoO,EAASrQ,EAAMiP,OAAO,SAAAzB,GAAC,OAAEA,EAAElO,KAAKA,KAChC4Q,GAAQ,GAERkF,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAUC,QAAQ,yEAK5DkT,GAAW,IAoNC8S,CAAcpoB,EAAEqmB,EAAc5mB,MAThD,kBAoCA,OAhBFgJ,oBAAU,WACR,IACImJ,GAAqBC,GACpBhS,KAAK,SAACC,GACP,IAAMuS,EAASkU,EAAazmB,EAAIoI,KAAKmK,OAAOjD,OAAO,SAAAoS,GAAC,OAAkB,GAAfA,EAAEtN,YAAsBpU,EAAIoI,KAAKmK,OACxF7B,EAAS6B,EAAO6R,KAAK,SAACwD,EAAKH,GAAN,OAAaG,EAAIxV,KAAOqV,EAAKrV,QAClDyU,EAAQrT,GAAYzB,MAG1B,MAAM7R,GACJ1C,QAAQC,IAAIyC,KAGZ,CAAC6R,IAICnP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KAGAtQ,EAEAuC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmjB,GAAD,CACExlB,KAAMA,EACN8P,QAASA,EACTjO,QAASA,IAGVM,EAAAC,EAAAC,cAACmlB,GAAA,EAAD,CAAOxiB,UAAU,MAAKC,WAAW,SAAS0Y,eAAe,iBACrDxb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAKiP,EAAO,GAAZ,IAAiBA,EAAO,IACxBnP,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAYC,QAAS,kBAAM8Y,EAAkB,UAC5C3kB,EAAAC,EAAAC,cAAC0hB,GAAA3hB,EAAD,OAEDD,EAAAC,EAAAC,cAACylB,GAAD,CAAa5c,aAAc,SAACzL,GAAD,OA7Kf,SAACA,GACpBuhB,EAAU,CAACP,OAAOhhB,EAAE2L,OAAOlM,IAAI,IA4KQgM,CAAazL,MAC/C0C,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAaC,QAAS,kBAAM8Y,EAAkB,WACzC3kB,EAAAC,EAAAC,cAAC2hB,GAAA5hB,EAAD,MADL,UAGDD,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACQC,QAASmM,EACTta,SAAU,kBA9PxB3O,QAAQC,IAAI4C,GACZomB,EACA3U,GAAqBC,GACpBhS,KAAK,SAACC,GACP0Q,EAAS1Q,EAAIoI,KAAKmK,OAAO6R,KAAK,SAACwD,EAAKH,GAAN,OAAaG,EAAIxV,KAAOqV,EAAKrV,QAC3DoB,GAAYzB,KAGZrB,EAASrQ,EAAMiP,OAAO,SAAAzB,GAAC,OAAKA,EAAEuG,kBAC9BsS,GAAeD,MA0ON,kCAeD7jB,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACM1B,SAAU9F,EACVyH,QAASzH,EAAUzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkBL,MAAO,CAAC/B,MAAO,SAAUuB,OAAO,YAAavC,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,CAAU7B,MAAM,YAClGqM,KAAK,SACLhL,QAAQ,YACRoM,QAAS,SAACvO,GAAS6Z,OAAOC,QAAP,qOAEd2N,MAPX,iEAeJ/kB,EAAAC,EAAAC,cAAC0lB,GAAA,EAAD,CAAgB7iB,MAAO,CAACiB,UAAW,MAC7BhE,EAAAC,EAAAC,cAAC2lB,GAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBACjC/lB,EAAAC,EAAAC,cAAC8lB,GAAA,EAAD,KACEhmB,EAAAC,EAAAC,cAAC+lB,GAAA,EAAD,KACEjmB,EAAAC,EAAAC,cAACgmB,GAAA,EAAD,CACInjB,MAAO,CAAEqO,SAAU,MAEnBpR,EAAAC,EAAAC,cAAA,yCAEH2Q,EAAKjI,IAAI,SAAAud,GAAM,OACdnmB,EAAAC,EAAAC,cAACgmB,GAAA,EAAD,CACE/a,IAAKgb,EAAOppB,GACZgG,MAAO,CAAEqO,SAAU+U,EAAO/U,WAEzB+U,EAAO3W,KAAKU,UAAU3C,WAAY4Y,EAAOjV,SAKlDlR,EAAAC,EAAAC,cAACkmB,GAAA,EAAD,KAtRW,SAACrkB,GACpB,IAAMskB,EAAGpnB,OAAAyJ,GAAA,EAAAzJ,CAAQ,IAAIqnB,IAAI7oB,EAAMmL,IAAI,SAAAkW,GAAC,OAAIA,EAAEqG,gBACpC/O,EAAO,GAKb,OAJAiQ,EAAIzd,IAAI,SAAA7L,GACNqZ,EAAK1Q,KAAK3D,EAAO2K,OAAO,SAAAoS,GAAC,OAAIA,EAAEqG,aAAepoB,OAGzCqZ,EAiRCmQ,CAAa9oB,GAAOmL,IAAI,SAAC+T,EAAI7T,GAAL,OACtB9I,EAAAC,EAAAC,cAAC+lB,GAAA,EAAD,CAAU9a,IAAKrC,GACb9I,EAAAC,EAAAC,cAACgmB,GAAA,EAAD,CACI/a,IAAKrC,GAEJ6T,EAAI,GAAG/X,MAEZiM,EAAKjI,IAAI,SAACrK,EAAIuK,GAAL,OArRH,SAACtF,EAAMgjB,EAASjoB,EAAKuK,GACvC,IAAI+C,EAAU,GACV9J,EAAS,GAab,OAXIyB,GAIFqI,EAAU,kBAAMoZ,EAAWzhB,IAE3BzB,EADAyB,EAAMiO,KACG2S,EAAY,GAAG,GAAG5gB,EAAMgO,WAAWC,KAEnC2S,EAAY5gB,EAAM6N,gBAAgB7N,EAAM8N,aAAa9N,EAAMgO,WAAWkT,SAP/E3iB,EAASqiB,EAAY,GAAG,IAAG,GAAOI,YAClC3Y,EAAU,kBAAMoZ,EAAW,KAAK,CAACE,YAAaqB,EAASrB,YAAY3V,KAAMjR,EAAIiR,KAAM5K,KAAM4hB,EAAS5hB,SAUlG5E,EAAAC,EAAAC,cAACgmB,GAAA,EAAD,CACA/a,IAAKrC,EACL/F,MAAOhB,EAAOgB,MACd8I,QAAS,kBAAIA,MACb9J,EAAOuK,MAkQGma,CAAY9J,EAAIA,EAAI+J,UAAU,SAAAppB,GAAC,OAAI,IAAI8S,KAAK9S,EAAEkS,MAAMU,WAAa3R,EAAIiR,KAAKU,aAAYyM,EAAI,GAAGpe,EAAIuK,QAQnGwa,GAAW1a,IAAI,SAAA+d,GAEjB,OACE3mB,EAAAC,EAAAC,cAAC+lB,GAAA,EAAD,CAAU9a,IAAKwb,EAAKjpB,OACpBsC,EAAAC,EAAAC,cAACgmB,GAAA,EAAD,CACInjB,MAAO,CAAC6jB,WAAaD,EAAKvoB,QAC1BuoB,EAAKjpB,OAGRmT,EAAKjI,IAAI,SAACC,EAAEC,GAAH,OACP9I,EAAAC,EAAAC,cAACgmB,GAAA,EAAD,CACCnjB,MAAO,CAAC6jB,WAAaD,EAAKvoB,MAAOA,MAAO,MAAMqmB,OAAOnG,QAAQ8G,EAAWtc,GAAG6d,EAAI,QAC/EvB,EAAWtc,GAAG6d,EAAI,cAuB9B3mB,EAAAC,EAAAC,cAACkG,GAAD,QCjcS1H,GAAe,CACxBC,WAAYpB,EACZspB,eAAgB,IAGPC,GAAoB,SAAChoB,EAAOC,GAErC,OAAOA,EAAOC,MAEV,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,UAAW5B,IAEnB,IAAK,YAKD,IAAK,SACL,MAAO,CACHoB,WAAYpB,EACZspB,eAAiB9nB,EAAOK,SAGhC,QACI,MAAM,IAAIC,iBC5BhB0nB,GAAc,SAAC7U,EAAKlT,GAEtB,OAAOA,GACH,IAAK,OACD,SAAArE,OAAUwjB,KAAKyG,MAAM1S,EAAI,IAAzB,gBAAAvX,OAAkCuX,EAAM,GAAxC,UACJ,IAAK,QACD,SAAAvX,OAAUwjB,KAAKyG,MAAM1S,EAAI,IAAzB,KAAAvX,OAAiCuX,EAAM,IAC3C,IAAK,UACD,SAAAvX,OAAUwjB,KAAKyG,MAAM1S,EAAI,IAAO,IAAOiM,KAAKyG,MAAO1S,EAAM,GAAI,OCH5D8U,GAAgB,SAAAznB,GAAA,IAAEwC,EAAFxC,EAAEwC,OAAF,OAE7B/B,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOC,QAAS,GACZ1F,QAAQC,IAAIkH,GAIf/B,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO7E,GAAYuB,QAAQ,MAAvC,4BAGAO,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO1E,GAASoB,QAAQ,MACjCsnB,GAAYhlB,EAAOklB,SAAS,UAKlCjnB,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO7E,GAAYuB,QAAQ,MAAvC,4BAGAO,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO1E,GAAQoB,QAAQ,MAChCsnB,GAAYhlB,EAAOmlB,cAAc,UAIvClnB,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO7E,GAAYuB,QAAQ,MAAvC,wCAGAO,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO1E,GAASoB,QAAQ,MAClCsnB,GAAYhlB,EAAOolB,kBAAkB,YC3BrCpkB,GAAO,CACbyS,UAAW,UAIE4R,GAAc,SAAA7nB,GAAc,IAAZwC,EAAYxC,EAAZwC,OAAYV,EAEbC,oBAAS,GAFIC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAE9BxD,EAF8B0D,EAAA,GAExBoM,EAFwBpM,EAAA,GAI/B7B,EACJM,EAAAC,EAAAC,cAAA,OAAK6C,MAAOA,IACR/C,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY3C,GAAI,CAAC8mB,GAAG,GAAI5nB,QAAQ,MAC/BsC,EAAO6C,MAEV5E,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,MAEA/O,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAAC+K,GAAG,GACRxI,WAAW,SACXxC,QAAS,EACTuC,UAAU,MACVykB,QAAStnB,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAASwY,YAAY,WAAWC,UAAQ,KAEnDxnB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAClBsC,EAAOyN,KAAKhC,OAAO,GADrB,UAGDxN,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,gBACKO,EAAAC,EAAAC,cAAA,WACFiQ,GAAcpO,EAAOsP,kBAExBrR,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,gBACKO,EAAAC,EAAAC,cAAA,WACFiQ,GAAcpO,EAAOuP,eAExBtR,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,gBACKO,EAAAC,EAAAC,cAAA,WACF6B,EAAO0lB,UAFV,YAKFznB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO,CAAC2kB,WAAY,QAASjoB,QAAQ,MAAjD,4BACMO,EAAAC,EAAAC,cAAA,WACJ6mB,GAAYhlB,EAAO4lB,aAAc,SAEnC3nB,EAAAC,EAAAC,cAAC0nB,GAAD,CAAe7lB,OAAQA,KAUxB,OACI/B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KAEC/N,EAAAC,EAAAC,cAACmjB,GAAD,CACGxlB,KAAMA,EACN8P,QAASA,EACTjO,QAASA,IAIbM,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAQJ,QAAS,kBAAM8B,GAAQ,IAAOlO,QAAQ,YAAYrB,MAAM,WAAhE,mDCzDFypB,GAAQzF,KAAO0F,KAAVC,QAAA9oB,OAAA+oB,GAAA,EAAA/oB,CAAA,gJAGG,SAACa,GAAD,OAAUA,EAAMmoB,SACrB,SAACnoB,GAAD,OANK,EAMaA,EAAMkB,OAClB,SAAClB,GAAD,OAPD,EAOmBA,EAAMmE,SAO1BikB,GAAkB,SAAA3oB,GAIvB,IAHJT,EAGIS,EAHJT,MACAsX,EAEI7W,EAFJ6W,KACA+R,EACI5oB,EADJ4oB,YA0BIC,EAAkB,SAACrmB,GAEvB,IAAIkI,EAnBa,SAAC2T,GAElB,IAAMyK,EAAO,SAAC9pB,GACZ,OACE4f,KAAKyG,MAAMrmB,EAAI,KAKnB,MAAQ,CACNqf,KAAMyK,EAAKzK,EAAK+J,cAChBrK,MAAO+K,EAAKlY,GAAcyN,EAAKvM,kBAAqB,GACpDI,KAAM4W,EAAKzK,EAAK6J,WAChBa,SAAUD,EAAKzK,EAAKqJ,WAMTsB,CAAYxmB,GACrB6b,EAAO3T,EAAO2T,KACd4K,EAAQve,EAAOqT,MACfgL,EAAWre,EAAOqe,SAClB7W,EAAOxH,EAAOwH,KAElB,OACIzR,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACE/N,EAAAC,EAAAC,cAAC2nB,GAAD,CAAOtjB,UAAU,QAAQ0jB,QAAQ,YAAYjnB,MAAO4c,EAAK,EAAG3Z,OAAQukB,GAAQ5K,EAAK,EAAjF,KACA5d,EAAAC,EAAAC,cAAC2nB,GAAD,CAAOI,QAAQ,OAAOjnB,MAAOyQ,IAC7BzR,EAAAC,EAAAC,cAAC2nB,GAAD,CAAOI,QAAQ,YAAYjnB,MAAO4c,EAAK,IACvC5d,EAAAC,EAAAC,cAAC2nB,GAAD,CAAOI,QAAQ,UAAUjnB,MAAOsnB,MAQhCpF,EAAwB,CAC5B,CAACuF,MAAO,YAAaC,WAAW,eAAM1nB,MAAO,GAC7C2nB,WAAY,SAAC5mB,GAAD,OACV/B,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAM,QAAQspB,WAAW,SACpC3lB,EAAO4a,IAAInL,WAAa,kBAG7B,CAACiX,MAAO,QAASC,WAAW,GAAG1nB,MAAM,IACrC2nB,WAAY,SAAC5mB,GAAD,OACZ/B,EAAAC,EAAAC,cAAC0oB,GAAA,EAAD,KACE5oB,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CACAC,QACE7c,EAAAC,EAAAC,cAAC2oB,GAAA,EAAD,CAAUzqB,MAAM,UACNmG,UAAU,QACVxH,GAAIgF,EAAO4a,IAAI5f,GAAGwQ,WAClB3I,KAAM7C,EAAO4a,IAAI/X,KACjB2E,SAAU,SAACjM,GAAD,OAAM6qB,EAAY7qB,IAC5BiN,SAAUxI,EAAO4a,IAAInL,YAErB9T,MAAOqE,EAAO4a,IAAI/X,UAKhC,CAAC6jB,MAAO,OAAQC,WAAW,eAAM1nB,MAAM,KACvC,CAACynB,MAAO,aAAcC,WAAW,qBAAO1nB,MAAO,IAC/C2nB,WAAY,SAAC5mB,GAAD,OACVqmB,EAAgBrmB,EAAO4a,OAGzB,CAAC8L,MAAO,kBAAmBC,WAAW,SAAK1nB,MAAM,GAC/C2nB,WAAY,SAAC5mB,GAAD,OACZ/B,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,MAAI6C,MAAO,CAAC3E,MAAO,QAClB+R,GAAcpO,EAAO4a,IAAImM,wBAAwB,aAEjD9oB,EAAAC,EAAAC,cAAA,UAAKiQ,GAAcpO,EAAO4a,IAAItL,qBAGhC,CAACoX,MAAO,eAAgBC,WAAW,SAAK1nB,MAAM,GAC9C2nB,WAAY,SAAC5mB,GAAD,OACZ/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAI6C,MAAO,CAAC3E,MAAO,QAChB+R,GAAcpO,EAAO4a,IAAIoM,qBAAqB,aAEjD/oB,EAAAC,EAAAC,cAAA,eAAOiQ,GAAcpO,EAAO4a,IAAIrL,kBAElC,CAACmX,MAAO,YAAaC,WAAW,UAAM1nB,MAAM,GAC5C2nB,WAAY,SAAC5mB,GAAD,OACZ/B,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,MAAI6C,MAAO,CAAC3E,MAAO,QACjB2D,EAAO4a,IAAIqM,mBAEZhpB,EAAAC,EAAAC,cAAA,UAAK6B,EAAO4a,IAAI8K,WAAa,EAA7B,mBAGJ,CAACgB,MAAO,SAAUC,WAAW,GAAI1nB,MAAO,GACxC2nB,WAAY,SAAC5mB,GAAD,OACV/B,EAAAC,EAAAC,cAAC+oB,GAAD,CAAalnB,OAAQA,EAAO4a,IAAKxM,cAAeA,OAEhD,CAACsY,MAAO,UAAWC,WAAW,iBAIhC,OACA1oB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACI/N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAI,CAACgC,OAAQ,OAAQD,SAAU,aAC1B,MAATxD,EACCkB,EAAAC,EAAAC,cAACgpB,GAAA,EAAD,CACA5W,KAAM8D,EACN8M,QAASA,EACTiG,SAAU,GACVC,mBAAoB,CAAC,GAErBC,WAAYC,KAAKC,WAAWC,YAAYC,aAAaJ,aAGrDrpB,EAAAC,EAAAC,cAACkG,GAAD,SC5ICsjB,GAAmB,SAAAnqB,GAEzBN,OAAAykB,GAAA,EAAAzkB,CAAAM,GAAD,IAAA8B,EAIuBC,mBAAS,IAJhCC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAICqW,EAJDnW,EAAA,GAIUooB,EAJVpoB,EAAA,GAAAmG,EAKkBpG,mBAAS,IAL3BqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAKC0O,EALDzO,EAAA,GAKO0Z,EALP1Z,EAAA,GAAAG,EAMsBxG,oBAAS,GAN/ByG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAMC4E,EAND3E,EAAA,GAMS6hB,EANT7hB,EAAA,GAAAE,EAOwB3G,oBAAS,GAPjC8G,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAOCxD,EAPD2D,EAAA,GAOUwK,EAPVxK,EAAA,GAAA0N,EASoBC,qBAAW+Q,GAAmBpoB,IATlDsX,EAAA/W,OAAAuC,EAAA,EAAAvC,CAAA6W,EAAA,GASChX,EATDkX,EAAA,GASQnC,EATRmC,EAAA,GAUAnD,EAAK5N,qBAAWhE,IAEhBknB,EAAc,SAAC7qB,GAInB,GAHA1C,QAAQC,IAAIyC,EAAE2L,OAAOyO,SAGjBpa,EAAE2L,OAAOyO,QACXiS,EAAU,GAAAhvB,OAAAsE,OAAAyJ,GAAA,EAAAzJ,CAAKyY,GAAL,CACV,CAAC3a,GAAIO,EAAE2L,OAAOlM,GACd6H,KAAMtH,EAAE2L,OAAOrE,aAEZ,CACH,IAAI2H,EAAWmL,EAAQhL,OAAO,SAAAnO,GAC5B,OAAOA,EAAIxB,IAAMO,EAAE2L,OAAOlM,KAE5B4sB,EAAWpd,GAEb3R,QAAQC,IAAI6c,IAIRmS,EAAkB,WACtBjX,GAAW,GACXhY,QAAQC,IAAI6c,GACZ,IAAI2O,EAAM3O,EAAQ9O,IAAI,SAAArK,GAAG,OAAIA,EAAIxB,KACjC,KC9B4B,SAACspB,GAC3B,OAAOrpB,IAAMge,MAAM1e,EAAiB,CAAC+pB,IAAKA,IACzClpB,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,MD0B1BwsB,CAAezD,GACdlpB,KAAK,SAAAC,GACJ,GAAkB,MAAfA,EAAI8I,OAGL,OAFA2M,EAAGnR,YAAY,CAACjC,QAAS,QAASC,QAAS,+DAAc7B,MAAM,SAC/D+U,GAAW,GAGbC,EAAGnR,YAAY,CAACjC,QAAS,UAAWC,QAAS,yDAAa7B,MAAM,IAChE+U,GAAW,KAGd,MAAOtV,GACN1C,QAAQC,IAAIyC,EAAE4L,WAoBhB,OAdAnD,oBAAU,WACR,IACE8N,EAAS,CAAC7U,KAAM,aCpEXhC,IAAMgJ,IAAI9K,GAChBiC,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,KDkEvBH,KAAK,SAACC,GACPyW,EAAS,CAAC7U,KAAM,YAChBI,QAAShC,EAAIoI,KAAKsR,gBAGnB,MAAOxZ,GACN1C,QAAQC,IAAIyC,EAAE4L,WAEhB,IAEKkS,kBAAQ,WAEf,OACIpb,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAAER,OAAQ,IAAKvB,MAAO,QAChChB,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOE,GAAI,CAAC+K,GAAG,GAAIzI,UAAU,OAC5B6J,EACC,GAEE1M,EAAAC,EAAAC,cAAC6pB,GAAD,CACA3T,KAAMtX,EAAM+nB,eACZxF,QAASA,IAIbrhB,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAMrL,MAAO,CAACgS,WAAW,SACzB/U,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMC,WAAW,UAC9B9C,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACEC,QAAShL,EACTnD,SAAU,kBAAMqgB,GAAWld,MAE7B1M,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,kCACAO,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACAlJ,MAAO,CAACgS,WAAW,QACnBtV,QAAQ,YACRrB,MAAM,UAENyN,QAAS,WACFsL,OAAOC,QAAQ,yFACnByS,KAEH3d,QAASzH,EAAUzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkB7C,GAAI,CAACS,MAAO,OAAQuB,OAAQ,UAAY,IAT7E,6DAmBFvC,EAAAC,EAAAC,cAAC8pB,GAAD,CACElrB,MAAOA,EAAMH,WACbyX,KAAM1J,EAAS5N,EAAM+nB,eAAena,OAAO,SAAA2K,GAAC,OAAKA,EAAE7F,YAAa4E,EAChE+R,YAAaA,OASrB,CAAC/R,EAAK1J,EAAO5N,EAAM4Y,0BEhIVuS,GAAmB,SAAA1qB,GAK1B,IAJF6V,EAIE7V,EAJF6V,MACA7R,EAGEhE,EAHFgE,aACAkL,EAEElP,EAFFkP,SACAwH,EACE1W,EADF0W,YACE5U,EAEsBC,mBAASiC,EAAa2mB,MAF5C3oB,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEK6oB,EAFL3oB,EAAA,GAEW4oB,EAFX5oB,EAAA,GAGIqC,EAAQqB,qBAAW5B,IACnBua,EAAOzN,GAAc,IAAIC,KAAK7M,EAAa6mB,YAAY/V,UAAW,KAElEgW,EAAc,WCUc,IAACttB,EDT/BkZ,EAAYb,GACR8U,ICQ2BntB,EDPJwG,EAAaxG,GCQrCC,IAAMge,MAAMze,EAAmB,CAACQ,GAAIA,IAC1CI,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KDXdH,KAAK,SAACC,GACe,MAAfA,EAAI8I,SACXikB,GAAQ,GACRvmB,EAAMC,SAAN5E,OAAAC,EAAA,EAAAD,CAAA,GAAmB2E,EAAMA,MAAzB,CAAgCL,aAAcK,EAAMA,MAAML,aAAc,SAShF,OAJAwC,oBAAU,WACNokB,EAAQ5mB,EAAa2mB,OACvB,IAGFlqB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CACIvL,MAAOmnB,EAAQ,CAAC/rB,gBAAiB,oBAAsB,GACvDmsB,QAAM,EACN7b,SAAUA,GAAU2G,EACpBvJ,QAAS,kBAAMwe,MAEfrqB,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACAvqB,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAQ3L,IAAKwnB,QAGjBxqB,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAASvL,EAAaoG,QACpC3J,EAAAC,EAAAC,cAAA,YAAO0d,ME/CE6M,GAA6B,CACtC9rB,WAAYpB,EACZmtB,kBAAmB,IAIVC,GAAuB,SAAC7rB,EAAOC,GAExC,OAAOA,EAAOC,MAEV,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,UAAW5B,IAEnB,IAAK,YACD,MAAO,CACHoB,WAAYpB,EACZmtB,kBAAmB3rB,EAAOK,SAGlC,QACI,MAAM,IAAIC,QCdTurB,GAAe,WAAM,IAAAvpB,EAEEC,mBAAS,GAFXC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEvBoN,EAFuBlN,EAAA,GAEb0U,EAFa1U,EAAA,GAAAmG,EAGApG,oBAAS,GAHTqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGvBjD,EAHuBkD,EAAA,GAMxBW,GANwBX,EAAA,GAKnB1C,qBAAWhE,IACTgE,qBAAWT,KANMsR,EAQJC,qBAAW4U,GAAsBF,IAR7BzU,EAAA/W,OAAAuC,EAAA,EAAAvC,CAAA6W,EAAA,GAQvBhX,EARuBkX,EAAA,GAQhBnC,EARgBmC,EAAA,GAYxB6U,EAAU,WACd,IACEhX,EAAS,CAAC7U,KAAM,aFXbhC,IAAMgJ,IAAI3K,GAChB8B,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IESlBH,KAAK,SAAAC,GACFyW,EAAS,CACP7U,KAAM,YACNI,QAAShC,EAAIoI,KAAKslB,kBAGzBztB,MAAM,SAAAC,GACL,GAA0B,MAAtBA,EAAE2I,SAASC,OAGX,MAAM5I,EAFRgL,EAAKnD,qBAMT,MAAM7H,GAAG1C,QAAQC,IAAIyC,KAGjBytB,EAAajsB,EAAM4rB,kBAAkBlJ,KAAK,SAACvhB,EAAE+qB,GACjD,OAAQ1M,OAAOre,EAAEiqB,MAAQ5L,OAAO0M,EAAEd,QA2BxC,OAvBInkB,oBAAU,WACR,IACE8N,EAAS,CAAC7U,KAAM,aF9CbhC,IAAMgJ,IAAI5K,GAChB+B,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IE4ClBH,KAAK,SAAAC,GACFyW,EAAS,CACP7U,KAAM,YACNI,QAAShC,EAAIoI,KAAKslB,kBAGvBztB,MAAM,SAAAC,GACP,GAA0B,MAAtBA,EAAE2I,SAASC,OAGZ,MAAM5I,EAFPgL,EAAKnD,qBAMT,MAAM7H,GAAG1C,QAAQC,IAAIyC,KAErB,IAIF0C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACE/N,EAAAC,EAAAC,cAAC+qB,EAAA,SAAD,KACEjrB,EAAAC,EAAAC,cAACgrB,GAAA,EAAD,CACEzrB,QAAQ,YACR5B,MAAM,EACNstB,OAAO,SAETnrB,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CACA7N,GAAI,CAAES,MA5DU,KA6DhBoqB,KAAK,gBAGY,MAApBtsB,EAAMH,WACPqB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACKjP,EAAM4rB,kBAAkBrd,OAAS,EAClCrN,EAAAC,EAAAC,cAACmO,GAAA,EAAD,KACG0c,EAAWniB,IAAI,SAACrF,EAAc6R,GAAf,OACZpV,EAAAC,EAAAC,cAACmrB,GAAD,CACElgB,IAAKiK,EACLA,MAAOA,EACP7R,aAAcA,EACdkL,SAAUA,EACVwH,YAAaA,OAMnBjW,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAI,CAAE2M,EAAE,EAAG3K,OAAO,MACrBvC,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY8K,UAAU,MAAMvO,QAAQ,YAApC,kEAORO,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KAEE9O,OAAAyJ,GAAA,EAAAzJ,CAAI0J,MAAM,GAAGqG,QAAQpG,IAAI,SAAAE,GAAC,OACxB9I,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAKjD,IAAKrC,EAAGvI,GAAI,CAAEgC,OAAO,KACxBvC,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY8K,UAAU,MAAM7C,IAAKrC,EAAGrJ,QAAQ,WAC1CO,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,MACAjP,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,YAURjP,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAI,CAAC2M,EAAE,IACZlN,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACElP,GAAG,mBACH+N,WAAS,EACTrL,QAAQ,WACRrB,MAAM,UACNmM,SAAU9F,EACVoH,QAAS,kBAAMgf,MANjB,qCAaF7qB,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAOlW,UAAW,EAAGG,GAAEtB,OAAAC,EAAA,EAAAD,CAAA,CAAG+B,MAAK,eAAArG,OAtHT,IAsHS,OAAmC4H,OAAQ,KAAQlE,KAC9E2B,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAI,CAAC2M,EAAG,IAEdpO,EAAM4rB,kBAAkBrd,OAAS,GAChCrN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKpB,EAAM4rB,kBAAkBjc,GAAU9E,OACvC3J,EAAAC,EAAAC,cAAA,2CAAUpB,EAAM4rB,kBAAkBjc,GAAU7J,MAC5C5E,EAAAC,EAAAC,cAAA,WAAMpB,EAAM4rB,kBAAkBjc,GAAU/O,mECpIrC4rB,GAAU,WAErB,IAAMpmB,EAAYD,qBAAWpD,IACvBgR,EAAK5N,qBAAWhE,IAChBkb,EACN,CACE,CAAChR,IAAM,MAAM1N,MAASyH,EAAUnD,OAAOqa,KACvC,CAACjR,IAAM,YAAY1N,MAASyH,EAAUnD,OAAOsa,WAC7C,CAAClR,IAAM,QAAQ1N,MAASyH,EAAUnD,OAAOua,OACzC,CAACnR,IAAM,SAAS1N,MAASyH,EAAUnD,OAAOwa,SAGtCgP,EAAc,CAClBC,kBAAmB,IAAIpb,KAAKlL,EAAUnD,OAAOypB,mBAC7CC,gBAAiB,IAAIrb,KAAKlL,EAAUnD,OAAO0pB,kBAEvC1a,EAAQqK,kBAAQ,kBAAKnc,OAAAyJ,GAAA,EAAAzJ,CAAI0J,MAAM,KAAKC,IAAI,SAACC,EAAEC,GAAH,SAAAnO,OAAUmO,EAAG,EAAb,aAAoB,IAC5D4iB,EAAQtQ,kBAAQ,kBAAAnc,OAAAyJ,GAAA,EAAAzJ,CAAS0J,MAAM,IAAIqG,SAAS,IAjBvB3N,EAkBHC,mBAASiqB,GAlBNhqB,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAkBpBmO,EAlBoBjO,EAAA,GAAAmG,GAAAnG,EAAA,GAmBDD,mBAAS,KAnBRqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAmBpBqC,EAnBoBpC,EAAA,GAmBbgkB,EAnBahkB,EAAA,GAAAX,EAsB+BC,eAAlDC,EAtBmBF,EAsBnBE,SAAUC,EAtBSH,EAsBTG,aAEZ4B,GAxBqB/B,EAsBKO,UAAaD,OAExB,SAAChK,GACpBquB,EAAS1sB,OAAAC,EAAA,EAAAD,CAAA,GACJ8K,EADG9K,OAAA+J,GAAA,EAAA/J,CAAA,GAEL3B,EAAE2L,OAAOrE,KAAOtH,EAAE2L,OAAOxL,SAE5B7C,QAAQC,IAAIkP,KAmBZ,OACE/J,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAO/V,GAAEtB,OAAAC,EAAA,EAAAD,CAAA,CAAGiO,EAAE,GAAM7O,KAClB2B,EAAAC,EAAAC,cAAA,QAAMiJ,SAAUhC,EAhBL,SAACpF,IChBS,SAACA,GAC1B,OAAO/E,IAAMge,MAAMte,EAAiB,CAACiJ,OAAQ5D,IAC5C5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,MDY1BsuB,CAAc3sB,OAAAC,EAAA,EAAAD,CAAA,GAAI8C,EAAWyN,EAASzF,IACrC5M,KAAK,SAAAC,GACc,MAAfA,EAAI8I,SACPhB,EAAUlD,UAAV/C,OAAAC,EAAA,EAAAD,CAAA,GACK7B,EAAIoI,KAAKG,OADd,CAEEC,QAASxI,EAAIoI,KAAKI,QAClBC,WAAYzI,EAAIoI,KAAKK,cAEvBgN,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAS,UAAWC,QAAS,2DAQvDM,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAAC8mB,GAAG,GACRxkB,UAAU,MACVC,WAAW,SACXxC,QAAS,EACTkb,eAAe,OAEfxb,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY2oB,QAAQ,MAApB,4BAA+B3mB,EAAUnD,OAAO6C,KAAhD,KACA5E,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACO8K,EAAS,OAAO,CAAEoD,SAAU,mFADnC,CAEE5M,MAAM,qBACN6G,UAAU,YACV6F,aAAclF,EAAUnD,OAAO6D,YAGnC5F,EAAAC,EAAAC,cAACG,GAAA,EAAD,KACAL,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACK8K,EAAS,UAAU,CAAEoD,SAAU,mFADpC,CAEEQ,WAAS,EACTvK,GAAI,CAAC+K,GAAG,EAAGvH,SAAU,IAAKgR,WAAY,QACtCrX,MAAM,qBACN6G,UAAU,YACV6F,aAAclF,EAAUnD,OAAO8D,eAIjC7F,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEwC,UAAU,MACVvC,QAAS,EACTwC,WAAW,SACX0Y,eAAe,iBAEjBxb,EAAAC,EAAAC,cAAC6e,GAAA,EAAD,CAASpV,MAAM,gKACb3J,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,6BAEFO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAACoM,EAAE,EAAG3L,MAAM,KAC7BhB,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,eACI/K,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD7sB,OAAA7C,OAAA,GACO8K,EAAS,OAAO,CAAEoD,SAAU,qGADnC,CAEE/F,UAAU,YACV7G,MAAM,SACN0M,aAAclF,EAAUnD,OAAOlE,OAEhC6tB,EAAM9iB,IAAI,SAAAmjB,GAAC,OACR/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,OAVrC,eAeM/rB,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAEoM,EAAG,EAAG3L,MAAM,KAC/BhB,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,eACA/K,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD7sB,OAAA7C,OAAA,GACM8K,EAAS,QAAQ,CAAEoD,SAAU,qGADnC,CAEE/F,UAAU,YACV7G,MAAM,eACN0M,aAAclF,EAAUnD,OAAOjE,QAEhC4tB,EAAM9iB,IAAI,SAAAmjB,GAAC,OACR/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,SASrC/rB,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAASxO,GAAI,CAAC+K,GAAG,KA0BjBtL,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAASxO,GAAI,CAAC+K,GAAG,KAEjBtL,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,sBACAO,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACCwC,UAAU,MACVvC,QAAS,EACTwC,WAAW,SACX0Y,eAAe,iBAGdxb,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,YAApB,wCACAO,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAEoM,EAAG,EAAG3L,MAAM,KAC/BhB,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,qBACI/K,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD7sB,OAAA7C,OAAA,GACM8K,EAAS,iBADf,CAEE3C,UAAU,YACV7G,MAAM,eACN0M,aAAclF,EAAUnD,OAAOyjB,gBAEhCkG,EAAM9iB,IAAI,SAAAmjB,GAAC,OACR/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,OAXnC,WAkBF/rB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,YAApB,0DAEAO,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMvC,QAAS,EAAGwC,WAAW,SAAS0Y,eAAe,OAEpExb,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAACS,MAAM,MAGxBhB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,gBACAO,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD7sB,OAAA7C,OAAA,GACU8K,EAAS,iBADnB,CAEM3C,UAAU,YACV7G,MAAM,eACN0M,aAAclF,EAAUnD,OAAOiqB,iBAAmB,IAEnDjb,EAAMnI,IAAI,SAAAmjB,GAAC,OACR/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,QA+BrC/rB,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAASxO,GAAI,CAAC+K,GAAG,KACjBtL,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,4BACAO,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAAC8mB,GAAG,GACRxkB,UAAU,MACVC,WAAW,SACXxC,QAAS,EACTkb,eAAe,iBAEjBxb,EAAAC,EAAAC,cAAC6e,GAAA,EAAD,CAASpV,MAAM,0JACb3J,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,+CAEAO,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACM8K,EAAS,sBADf,CAEExJ,MAAM,IACN6G,UAAU,YACVvF,KAAK,SACLoL,aAAclF,EAAUnD,OAAOkqB,uBAInCjsB,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAASxO,GAAI,CAAC+K,GAAG,KACjBtL,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,kCACAO,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAAC8mB,GAAG,GACRxkB,UAAU,MACV2Y,eAAe,iBAEjBxb,EAAAC,EAAAC,cAAC6e,GAAA,EAAD,CAASpV,MAAM,sHACb3J,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,mCAEFO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,KACE7K,EAAAC,EAAAC,cAACwc,GAAA,EAAD,CAAYC,KAAG,GACdR,EAAOvT,IAAI,SAAAsjB,GAAC,OACblsB,EAAAC,EAAAC,cAAA,OAAKiL,IAAK+gB,EAAE/gB,KACVnL,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACEtH,MAAO,CAAC/B,MAAM,GAAI7C,gBAAgB,SAClCsM,KAAK,QACL7F,KAAMsnB,EAAE/gB,IACRf,aAAc8hB,EAAEzuB,MAChB8L,SAAUR,IAGZ/I,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CACAzR,IAAK+gB,EAAE/gB,IACL1N,MAAOyuB,EAAE/gB,IACT0R,QACA7c,EAAAC,EAAAC,cAAC4c,GAAA,EAAD,CACEvc,GAAI,CAACnC,MAAO8tB,EAAE/gB,gBAW1BnL,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOE,GAAI,CAAC+K,GAAG,IACftL,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACInB,WAAS,EACT9L,KAAK,SACL+D,MAAO,CAACkB,OAAO,SAAUF,SAAS,KAClCtE,QAAQ,YACRrB,MAAM,WALV,oBE3PAmlB,GAAQ,IAAInT,KACZoT,GAAgB,CAACD,GAAM5S,cAAc4S,GAAMtT,WAAW,GAG/Ckc,GAAa,WAExB,IAF8B9qB,EAIIC,mBAAS,QAJbC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAIvB+qB,EAJuB7qB,EAAA,GAIZqd,EAJYrd,EAAA,GAAAmG,EAKMpG,oBAAS,GALfqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAKvB2kB,EALuB1kB,EAAA,GAKX2kB,EALW3kB,EAAA,GAAAG,EAMFxG,mBAASkiB,IANPzb,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAWxBQ,GAXwBP,EAAA,GAAAA,EAAA,GASd/C,wBAEHC,qBAAWT,KAClBZ,EAAQqB,qBAAW5B,IAEnBkpB,EAAqB,WACzBD,GAAeD,IA2CXG,EACJxsB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACusB,GAAA,EAAD,KACAzsB,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAI,sBACP0F,EAAKxJ,MAAM8F,OAMZ5E,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,MACA/O,EAAAC,EAAAC,cAACmO,GAAA,EAAD,KACArO,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,cACP5C,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,GACdtqB,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACKvqB,EAAAC,EAAAC,cAACwsB,GAAAzsB,EAAD,OAEHD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAQ,qCAG1B9O,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,SACT5C,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,EAACnf,IAAI,QACnBnL,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACIvqB,EAAAC,EAAAC,cAACysB,GAAA,EAAD,CAAOvuB,MAAM,QAAQwuB,aAAchpB,EAAMA,MAAMsF,SAC7ClJ,EAAAC,EAAAC,cAAC2sB,GAAA5sB,EAAD,QAGJD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAQ,+BAcxB9O,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,EAACnf,IAAI,QAAQU,QAAS,WAAK+S,EAAa,WACtD5e,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACAvqB,EAAAC,EAAAC,cAACysB,GAAA,EAAD,CAAOvuB,MAAM,QAAQwuB,aAAchpB,EAAMA,MAAMJ,OAC3CxD,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,QAGJD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAQ,wBAG1B9O,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,EAACnf,IAAI,aAAaU,QAAS,WAAK+S,EAAa,gBAC3D5e,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACAvqB,EAAAC,EAAAC,cAACysB,GAAA,EAAD,CAAOvuB,MAAM,QAAQwuB,aAAchpB,EAAMA,MAAMmpB,YAC7C/sB,EAAAC,EAAAC,cAAC8sB,GAAA/sB,EAAD,QAGFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAQ,+BAI1B9O,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,MACA/O,EAAAC,EAAAC,cAACmO,GAAA,EAAD,KAEArO,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,EAACnf,IAAI,WAAWU,QAAS,WAAK+S,EAAa,cACrD5e,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACAvqB,EAAAC,EAAAC,cAACysB,GAAA,EAAD,CAAOvuB,MAAM,QAAQwuB,aAAchpB,EAAMA,MAAMH,UAC7CzD,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,QAGFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAQ,oCAGxB9O,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,EAACnf,IAAI,OAAOU,QAAS,WAAK+S,EAAa,UACrD5e,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACAvqB,EAAAC,EAAAC,cAACysB,GAAA,EAAD,CAAOvuB,MAAM,QAAQwuB,aAAchpB,EAAMA,MAAMF,MAC7C1D,EAAAC,EAAAC,cAAC+sB,GAAAhtB,EAAD,QAGAD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAQ,wBAG1B9O,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,EAACnf,IAAI,UAAUU,QAAS,WAAK+S,EAAa,aAC1D5e,EAAAC,EAAAC,cAACqqB,GAAA,EAAD,KACEvqB,EAAAC,EAAAC,cAAEgtB,GAAAjtB,EAAF,OAEFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAQ,kBAItB9O,EAAAC,EAAAC,cAACoO,GAAA,EAAD,KACEtO,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACEnB,WAAS,EACT1M,MAAM,QACNqB,QAAQ,WACRoM,QAAS,WApIlBsL,OAAOC,QAAQ,iEAAe9O,EAAK5B,WAgI5B,qCAoDZ,OAAO0U,kBAAQ,WAEX,OAEApb,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAKrK,GAAI,CAAE8I,QAAS,SAClBrJ,EAAAC,EAAAC,cAACitB,GAAA,EAAD,MACAntB,EAAAC,EAAAC,cAACktB,GAAA,EAAD,CACE9qB,SAAS,QACT/B,GAAI,CACFS,MAAO,CAAEmiB,GAAE,eAAAxoB,OA/MC,IA+MD,QACX0yB,GAAI,CAAElK,GAAE,GAAAxoB,OAhNI,IAgNJ,SAGVqF,EAAAC,EAAAC,cAACusB,GAAA,EAAD,KACEzsB,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CACExN,MAAM,UACN2nB,aAAW,cACXja,KAAK,QACLD,QAAS0gB,EACThsB,GAAI,CAAE+sB,GAAI,EAAGjkB,QAAS,CAAEkkB,QAAS,UAEjCvtB,EAAAC,EAAAC,cAACstB,GAAAvtB,EAAD,SAKND,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CACEoD,UAAU,MACVzN,GAAI,CAAES,MAAO,CAAEmiB,GAlOD,KAkOoBsK,WAAY,CAAEtK,GAAI,IACpD4C,aAAW,mBAIX/lB,EAAAC,EAAAC,cAACgrB,GAAA,EAAD,CAEEzrB,QAAQ,YACR5B,KAAMwuB,EACN1rB,QAAS4rB,EACTmB,WAAY,CACVC,aAAa,GAEfptB,GAAI,CACF8I,QAAS,CAAE2Z,GAAI,QAASG,GAAI,QAC5ByK,qBAAsB,CAAEC,UAAW,aAAc7sB,MAjPvC,OAoPXwrB,GAEHxsB,EAAAC,EAAAC,cAACgrB,GAAA,EAAD,CACEzrB,QAAQ,YACRc,GAAI,CACF8I,QAAS,CAAE2Z,GAAI,OAAQG,GAAI,SAC3ByK,qBAAsB,CAAEC,UAAW,aAAc7sB,MA1PvC,MA4PZnD,MAAI,GAEH2uB,IAGLxsB,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CACEoD,UAAU,OACVzN,GAAI,CAAEwiB,SAAU,EAAG7V,EAAG,EAAGlM,MAAO,CAAEmiB,GAAE,eAAAxoB,OAnQtB,IAmQsB,UAEpCqF,EAAAC,EAAAC,cAACusB,GAAA,EAAD,MAlOe,WAEnB,OAAOL,GAEL,IAAK,QACH,OAAQpsB,EAAAC,EAAAC,cAAC4tB,GAAD,MACV,IAAK,aACH,OAAQ9tB,EAAAC,EAAAC,cAAC6tB,GAAD,MACV,IAAK,WACH,OAAQ/tB,EAAAC,EAAAC,cAAC8tB,GAAD,CAAUpP,aAAcA,IAClC,IAAK,OACH,OAAQ5e,EAAAC,EAAAC,cAAC+tB,GAAD,MACV,IAAK,eACH,OAAQjuB,EAAAC,EAAAC,cAACguB,GAAD,MACV,IAAK,UACH,OAAQluB,EAAAC,EAAAC,cAACiuB,GAAD,OAoNPC,MAIA,CAAChC,qGCtTGiC,GAAQ,WAAM,IAAAhtB,EAGCC,mBAAS,IAAI8O,MAHd7O,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAGhBmO,EAHgBjO,EAAA,GAGVwS,EAHUxS,EAAA,GAMjB+sB,EAAO,WACTva,EAAQ,IAAI3D,OAYhB,OAPArK,oBAAU,WACNwoB,YAAYD,EAAM,MACpB,IAMAtuB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,KAAKuO,UAAU,MAAMwgB,cAAY,GACpDhf,EAAKif,uDCvBRC,GAAiB,CACnB1tB,MAAO,OACPuB,OAAQ,SAGJosB,GAAgB,CACpBC,YAAa,UACbC,cAAe,GACfC,aAAc,EACdC,UAAW,UACXC,YAAa,IACbC,WAAW,EACXC,WAAW,EACXC,UAAU,EACV3nB,SAAS,EACT4nB,OAAQ,KAGCC,GAAe,SAAA9vB,GAAA,IAAE+vB,EAAF/vB,EAAE+vB,eAAgBC,EAAlBhwB,EAAkBgwB,WAAlB,OAC1BvvB,EAAAC,EAAAC,cAACsvB,GAAA,EAAD,CAAYC,iBAAkB30B,mWAAY40B,gBAEhC1vB,EAAAC,EAAAC,cAACsvB,GAAA,EAAD,CACIG,kBAAmBjB,GACnBvO,OAAQoP,EACRK,KAAM,IAEV5vB,EAAAC,EAAAC,cAACsvB,GAAA,EAAD,CAAQltB,SAAUitB,EAAY/uB,OAAQ,IACtCR,EAAAC,EAAAC,cAACsvB,GAAA,EAAD,CACEltB,SAAUgtB,EACVrsB,KAAM,CACJ4sB,IAAIC,KACJC,MAAO,OAKX/vB,EAAAC,EAAAC,cAACsvB,GAAA,EAAD,CACArP,OAAQoP,EACRH,OAAQ,GACRY,QAASrB,QClCRsB,GAAmB,SAAA1wB,GAKVA,EAJpB2wB,cAIoB,IAHpBZ,EAGoB/vB,EAHpB+vB,eACAvsB,EAEoBxD,EAFpBwD,MACAotB,EACoB5wB,EADpB4wB,YACAC,EAAoB7wB,EAApB6wB,eAAoB/uB,EAEIC,oBAAS,GAFbC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEbxD,EAFa0D,EAAA,GAEPoM,EAFOpM,EAAA,GAAAmG,EAGSpG,mBAAS,IAHlBqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGbhI,EAHaiI,EAAA,GAGJ0oB,EAHI1oB,EAAA,GAQdqoB,GAJK/qB,qBAAWhE,IAIN,CACdqvB,qBAAqB,EACrBC,QAAS,MAGPC,EAAYvxB,OAAAC,EAAA,EAAAD,CAAA,GACb8D,EADa,CAEhB5E,gBAAiBgyB,EAAY9L,GAAI,GAAG,QACpCjmB,MAAQ+xB,EAAY9L,GAAI,OAAS,UAgB7BoM,EAAU,SAACnuB,GACb,IClC4BP,EDkCtB2uB,EAASpuB,EAASouB,OAClBnB,EAAa,CACfoB,IAAKD,EAAOE,SACZC,IAAKH,EAAOI,WAEdl2B,QAAQC,IAAI,YCvCckH,ED+CV,CAACsP,gBAAkB/O,EAASyuB,UAAY,KC9CnD/zB,IAAMuJ,KAAKpK,EAAc,CAAC60B,WAAYjvB,IAC5C5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,MD2CvBH,KAAK,SAACqI,GAEH,IAAI9F,EACFM,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAC+wB,GAAD,CACG3B,eAAgBA,EAChBC,WAAYA,IAGdvvB,EAAAC,EAAAC,cAAA,MAAI6C,MAAO,CAAC3E,MAAM,UAAlB,sBAEA4B,EAAAC,EAAAC,cAAA,UAAKsF,EAAKZ,MACV5E,EAAAC,EAAAC,cAAA,4FAIRmwB,EAAW3wB,KAGZrC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,EAAE4L,YAGxBgoB,EAAQ,SAACxd,GACJA,EAAIyd,KAGXv2B,QAAQs2B,MAAR,GAAAv2B,OAAiB+Y,EAAIyd,KAArB,MAAAx2B,OAA8B+Y,EAAIxK,WAkBxC,OAEElJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACD/N,EAAAC,EAAAC,cAAA,UACC6C,MAAOytB,EACPjsB,UAAU,iBACVsH,QAAS,SAACvO,GAAD,OAdT8yB,EAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAIkxB,EAAL,CAAkB9L,IAAI,KACpC+M,UAAUC,YAAYC,mBAAmBb,EAASS,EAAOlB,QACzDriB,GAAQ,IAaRpD,SAAU4lB,EAAY9L,IAJvB,sBASCrkB,EAAAC,EAAAC,cAACmjB,GAAD,CACCxlB,KAAMA,EACN8P,QAASA,EACTjO,QAASA,ME9GD6xB,GAAgB,SAAAhyB,GAMvBA,EALJ2wB,cAKI,IAJJZ,EAII/vB,EAJJ+vB,eACAvsB,EAGIxD,EAHJwD,MACAotB,EAEI5wB,EAFJ4wB,YACAC,EACI7wB,EADJ6wB,eACI/uB,EAEoBC,oBAAS,GAF7BC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEGxD,EAFH0D,EAAA,GAESoM,EAFTpM,EAAA,GAAAmG,EAGyBpG,mBAAS,IAHlCqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGGhI,EAHHiI,EAAA,GAGY0oB,EAHZ1oB,EAAA,GAIEkL,EAAK5N,qBAAWhE,IAIhB+uB,EAAU,CACdM,qBAAqB,EACrBC,QAAS,KAIPC,EAAYvxB,OAAAC,EAAA,EAAAD,CAAA,GACb8D,EADa,CAEhB5E,gBAAiBgyB,EAAY7L,GAAI,GAAG,SACpClmB,MAAQ+xB,EAAY7L,GAAI,OAAS,UAG7BmM,EAAU,SAACnuB,GACb,IDd4BP,ECctB2uB,EAASpuB,EAASouB,OAOhBnB,EAAa,CACjBoB,IAAKD,EAAOE,SACZC,IAAKH,EAAOI,UACZtwB,OAAQ,IDxBgBuB,EC4BV,CAACuP,aAAehP,EAASyuB,UAAY,KD3BhD/zB,IAAMge,MAAM7e,EAAc,CAAC60B,WAAYjvB,IAC7C5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,MCwBvBH,KAAK,SAACqI,GAEH,IAAI9F,EACFM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+wB,GAAD,CACE3B,eAAgBA,EAChBC,WAAYA,IAEdvvB,EAAAC,EAAAC,cAAA,MAAI6C,MAAO,CAAC3E,MAAM,WAAlB,sBAEA4B,EAAAC,EAAAC,cAAA,UAAKsF,EAAKZ,MACV5E,EAAAC,EAAAC,cAAA,gFAGRmwB,EAAW3wB,KAGZrC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,EAAE4L,YAIxBgoB,EAAQ,SAACxd,GACX9Y,QAAQs2B,MAAR,GAAAv2B,OAAiB+Y,EAAIyd,KAArB,MAAAx2B,OAA8B+Y,EAAIxK,WAqBxC,OAEElJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACF/N,EAAAC,EAAAC,cAAA,UACE6C,MAAOytB,EACPjsB,UAAU,iBACVsH,QAAS,SAACvO,GAlBN6Z,OAAOia,UAAUI,QAIrBpB,EAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAIkxB,EAAL,CAAkB7L,IAAI,KACpC8M,UAAUC,YAAYC,mBAAmBb,EAASS,EAAOlB,GACzDriB,GAAQ,IALNkF,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAASC,QAAQ,4GAkBvD6K,SAAU4lB,EAAY7L,IAJxB,sBASEtkB,EAAAC,EAAAC,cAACmjB,GAAD,CACCxlB,KAAMA,EACN8P,QAASA,EACTjO,QAASA,MCpGR+xB,GAAc,CAClBzwB,MAAO,IACPqI,QAAS,eACT9G,OAAQ,IACRmvB,WAAY,QACZC,SAAU,GACVC,WAAY,oCACZxzB,MAAO,QACPgG,aAAc,EACdH,OAAQ,GACR4tB,QAAS,GACTC,OAAQ,UACRC,mBAAoB,OAGhBhvB,GAAQ,CACVT,SAAU,WACVE,IAAK,MACLC,KAAM,MACNzB,MAAO,OACPwU,UAAW,SACXzI,UAAW,yBAGFilB,GAAY,WAAK,IAAA3wB,EAEUC,qBAFVC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAErBiuB,EAFqB/tB,EAAA,GAEL0wB,EAFK1wB,EAAA,GAAAmG,EAGUpG,mBAAS,CAAC+iB,IAAI,EAAMC,IAAI,IAHlC3c,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGrByoB,EAHqBxoB,EAAA,GAGRyoB,EAHQzoB,EAAA,GAItBzC,EAAYD,qBAAWpD,IAGnBquB,EAAgB,SAACQ,ICzCE,SAACwB,EAAMC,EAAMC,EAAMC,GAE9C,IAAMC,EAAM,SAACC,GACT,OAAOA,GAAOpU,KAAKqU,GAAK,MAOpBC,GALAP,EAAOI,EAAIJ,GACXE,EAAOE,EAAIF,GACXD,EAAOG,EAAIH,GACXE,EAAOC,EAAID,GAENlU,KAAKuU,IAAKR,EAAOE,IACtBO,EAAKxU,KAAKuU,IAAKP,EAAOE,GACtBO,EAAK,QAELC,GAAOX,EAAOE,GAAM,EAEpBU,EAAe3U,KAAK4U,MAAM5U,KAAA6U,IAACJ,EAAK,GAANzU,KAAA6U,IAHrB,QAGqC,IAAjB7U,KAAA6U,IAAuBJ,EAAK,IAGrDK,EAAK9U,KAAK4U,KAAM,EAAO5U,KAAA6U,IAACF,EAAc,GAAf3U,KAAA6U,IAAsB7U,KAAK+U,IAAIL,GAAO,IAE7DM,EAAiBP,GAAI,EAAAzU,KAAA6U,IAAGF,EAAc,IAArB3U,KAAA6U,IAAwBC,EAAI,GAE7CG,EAAWR,EAAKzU,KAAK4U,KAAKE,GAGvB9U,KAAK4U,KAAK5U,KAAA6U,IAACP,EAAMU,EAAkB,GAAzBhV,KAAA6U,IAA8BL,EAAKS,EAAYjV,KAAKkV,IAAIR,GAAQ,IDgBhES,CACfhE,EAAeqB,IACfrB,EAAeuB,IACfH,EAAOC,IACPD,EAAOG,KAEP,OAAc3rB,EAAUnD,OAAOkqB,oBACtB,GAsBnB,OAhBMlmB,oBAAU,WAEhBnL,QAAQC,IAAI,UFpDDmC,IAAMgJ,IAAI1K,GAChB6B,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,KEkDrBH,KAAK,SAAAC,GACN60B,EAAY70B,EAAIoI,KAAK+tB,WACrBnD,EAAehzB,EAAIoI,KAAKU,WAGxB,IAQJlG,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAK7H,MAAOA,IACZ/C,EAAAC,EAAAC,cAACszB,GAAD,MACAxzB,EAAAC,EAAAC,cAACuzB,GAAD,CACEvD,cAAeA,EACfZ,eAAgBA,EAChBa,YAAaA,EACbC,eAAgBA,EAChBrtB,MAAO0uB,KAGTzxB,EAAAC,EAAAC,cAACwzB,GAAD,CACGxD,cAAeA,EACfZ,eAAgBA,EAChBa,YAAaA,EACbC,eAAgBA,EAChBrtB,MAAO0uB,KAET72B,QAAQC,IAAIs1B,KEnFJwD,GAAc,SAAAp0B,GAAa,IAAX8M,EAAW9M,EAAX8M,MAGlBqf,EAAQtQ,kBAAQ,kBAAAnc,OAAAyJ,GAAA,EAAAzJ,CAAS0J,MAAM,IAAIqG,SAAS,IAC5C4kB,EAAUxY,kBAAQ,kBAAAnc,OAAAyJ,GAAA,EAAAzJ,CAAS0J,MAAM,IAAIqG,SAAS,IAEhDqV,EAAK,IAAIjU,KAA2B,IAAtB/D,EAAMgF,iBACpBiT,EAAK,IAAIlU,KAAwB,IAAnB/D,EAAMiF,cAElBuiB,EAAc,CAClB92B,GAAIsP,EAAMtP,GACV+2B,QAASzP,EAAG/T,WACZyjB,UAAW1P,EAAG7T,aACdwjB,QAAS1P,EAAGhU,WACZ2jB,UAAW3P,EAAG9T,aACdiX,UAAWpb,EAAMob,WAAa,GAC9BlW,QAAQ,IAhByBlQ,EAmBZC,mBAASuyB,GAnBGtyB,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAmB7B6yB,EAnB6B3yB,EAAA,GAmBvB4yB,EAnBuB5yB,EAAA,GAoB9BsR,EAAK5N,qBAAWhE,IApBcyG,EAqBNpG,oBAAS,GArBHqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAqB7BjD,EArB6BkD,EAAA,GAqBpBiL,EArBoBjL,EAAA,GAuB9BR,EAAe,SAAC7J,GAEpB,GADA1C,QAAQC,IAAIq5B,GACM,GAAbA,EAAKJ,QAAWI,EAAKH,UAAyB,GAAbG,EAAKF,QAAWE,EAAKD,UAAY,OAAO3uB,MAAM,oGACpFsN,GAAW,GACXtV,EAAEsU,iBACF,IJF0B7P,EIEpBqyB,EAAe,CACnBr3B,GAAIm3B,EAAKn3B,GACT+rB,wBAAyB1Y,KAAKikB,MAAL,GAAA15B,OAAc0R,EAAMmD,KAApB,KAAA7U,OAA4Bu5B,EAAKJ,QAAjC,KAAAn5B,OAA4Cu5B,EAAKH,UAAjD,QAAiE,IAC1FhL,qBAAqB3Y,KAAKikB,MAAL,GAAA15B,OAAc0R,EAAMmD,KAApB,KAAA7U,OAA4Bu5B,EAAKF,QAAjC,KAAAr5B,OAA4Cu5B,EAAKD,UAAjD,QAAiE,IACtFjL,kBAAmBkL,EAAKzM,UACxBlW,QAAS2iB,EAAK3iB,UJPUxP,EIUVqyB,EJTXp3B,IAAMge,MAAM3e,EAAkB,CAAC20B,WAAYjvB,IACjD5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,MIMvBH,KAAK,SAAAC,GACJ,GAAkB,MAAfA,EAAI8I,OAAgB,OAAO,EAEhC5I,EAAE2L,OAAOqrB,UAAUC,IAAI,gBACvB3hB,GAAW,GACVC,EAAGnR,YAAY,CAACjC,QAAQ,UAAWC,QAAQ,yDAAa7B,MAAM,OAQ3DkL,EAAe,SAACzL,GAClB62B,EAAQl1B,OAAAC,EAAA,EAAAD,CAAA,GAAIi1B,EAALj1B,OAAA+J,GAAA,EAAA/J,CAAA,GAAW3B,EAAE2L,OAAOrE,KAAOtH,EAAE2L,OAAOxL,UAK/C,OAHA7C,QAAQC,IAAIq5B,GAIVl0B,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAO/V,GAAI,CAAC2M,EAAE,EAAG5B,GAAG,IACpBtL,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY2oB,QAAQ,MAAMxf,EAAMmD,MAChCxP,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAAC+K,GAAG,GACRzI,UAAU,MACVvC,QAAS,EACTwC,WAAW,UAEX9C,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAEoM,EAAG,EAAG3L,MAAM,IAAKvB,QAAQ,YAC5CO,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,eACI/K,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD,CACEruB,MAAOy2B,EAAKJ,QACZp2B,MAAM,SACNkH,KAAK,UACL2E,SAAU,SAACjM,GAAD,OAAKyL,EAAazL,KAE7BouB,EAAM9iB,IAAI,SAAAmjB,GAAC,OACR/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,OAK/B/rB,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAEoM,EAAG,EAAG3L,MAAM,IAAKvB,QAAQ,YAC5CO,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,eACA/K,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD,CACEruB,MAAOy2B,EAAKH,UACZr2B,MAAM,SACNkH,KAAK,YACL2E,SAAU,SAACjM,GAAD,OAAKyL,EAAazL,KAE7Bs2B,EAAQhrB,IAAI,SAAAmjB,GAAC,OACV/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,OAK/B/rB,EAAAC,EAAAC,cAAA,YAGAF,EAAAC,EAAAC,cAAA,sBACFF,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAEoM,EAAG,EAAG3L,MAAM,IAAOvB,QAAQ,YAC9CO,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAYhO,GAAG,4BAAf,UACIiD,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD,CACEruB,MAAOy2B,EAAKF,QACZt2B,MAAM,SACNkH,KAAK,UACL2E,SAAU,SAACjM,GAAD,OAAKyL,EAAazL,KAE7BouB,EAAM9iB,IAAI,SAAAmjB,GAAC,OACR/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,OAKjC/rB,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAEoM,EAAG,EAAG3L,MAAM,IAAMvB,QAAQ,YAC7CO,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,eACA/K,EAAAC,EAAAC,cAAC4rB,GAAA,EAAD,CACEruB,MAAOy2B,EAAKD,UACZv2B,MAAM,SACNkH,KAAK,YACL2E,SAAU,SAACjM,GAAD,OAAKyL,EAAazL,KAG7Bs2B,EAAQhrB,IAAI,SAAAmjB,GAAC,OACV/rB,EAAAC,EAAAC,cAAA,UAAQiL,IAAK4gB,EAAGtuB,MAAOsuB,GAAIA,OAK/B/rB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACEF,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACE9J,GAAI,CAACS,MAAO,IACZvD,MAAOy2B,EAAKzM,UACZ7iB,KAAK,YACL2E,SAAU,SAACjM,GAAD,OAAKyL,EAAazL,QAMpC0C,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACES,WAAS,EACTvK,GAAI,CAAC+K,GAAG,GACR1G,KAAK,UACL2E,SAAU,SAACjM,GAAD,OAAKyL,EAAazL,IAC5BiR,YAAY,qBACZ8D,WAAS,EACTC,KAAM,IAGRtS,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACEnB,WAAS,EACTrL,QAAQ,YACRrB,MAAM,UACNyN,QAAS,SAACvO,GAAD,OAAK6J,EAAa7J,IAC3B4O,QACEzH,EACEzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkBqH,KAAK,SAASrM,MAAM,YAEtC,IATN,wBCrJKo2B,GAAe,SAAAj1B,GAA6B,IAA3BwC,EAA2BxC,EAA3BwC,OAAQlE,EAAmB0B,EAAnB1B,KAAM8P,EAAapO,EAAboO,QAElCjO,EACFM,EAAAC,EAAAC,cAACkO,GAAA,EAAD,KAEQrM,EAAO6G,IAAI,SAAAyD,GAAK,OAChBrM,EAAAC,EAAAC,cAACu0B,GAAD,CACItpB,IAAKkB,EAAMtP,GACXsP,MAAOA,OAOvB,OACIrM,EAAAC,EAAAC,cAACmjB,GAAD,CACIxlB,KAAMA,EACN8P,QAASA,EACTjO,QAASA,uECfRg1B,GAAkB,SAAAn1B,GAIzB,IAHF6W,EAGE7W,EAHF6W,KACA+R,EAEE5oB,EAFF4oB,YACAzQ,EACEnY,EADFmY,QACErW,EAEoBC,oBAAS,GAF7BC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEGxD,EAFH0D,EAAA,GAESoM,EAFTpM,EAAA,GAGE8mB,EAAOjN,kBAAQ,WACnB,OtBJkB,SAACtE,GAEnB,IAAI7M,EAAS,CACT0qB,SAAU,EACVC,cAAe,EACfC,UAAW,EACX3N,cAAe,EACf4N,mBAAoB,GAMxB,IAAKhe,EAAYzJ,OAAS,OAAOpD,EAGjC,IAAMsqB,EAAM,SAACppB,GAKT,OAJa2L,EAAYie,OAAO,SAASC,EAAKz2B,GAC1C,OAAOy2B,EAAMz2B,EAAI4M,IACnB,IAeN,OATAlB,EAAS,CACL0qB,SAAU7d,EAAYzJ,OACtB4nB,iBAAkBV,EAAI,gBACtBtN,SAAUsN,EAAI,YACdrN,cAAeqN,EAAI,iBACnBpN,kBAAmBoN,EAAI,sBsB1BpBW,CAAc9e,IACrB,CAACA,IACHxb,QAAQC,IAAIub,GAId,IAAM1W,EACJM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEE,GAAI,CAAC+K,GAAI,GACThL,QAAS,EACTuC,UAAU,MACVC,WAAW,SACXwkB,QAAStnB,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAASwY,YAAY,WAAWC,UAAQ,KAGjDxnB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,kCACQO,EAAAC,EAAAC,cAAA,WACL6mB,GAAYsB,EAAK4M,iBAAkB,SAGtCj1B,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,4BACOO,EAAAC,EAAAC,cAAA,WACJmoB,EAAKsM,SAFR,YAQH30B,EAAAC,EAAAC,cAAC0nB,GAAD,CAAe7lB,OAAQsmB,KAKpB,OACAroB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAAC/B,MAAO,OAAQiD,OAAO,WACjCjE,EAAAC,EAAAC,cAACi1B,GAAA,EAAD,CAAgB50B,GAAI,CAAC8mB,GAAG,GAAIrZ,UAAWsI,MACvCtW,EAAAC,EAAAC,cAACk1B,GAAA,EAAD,KACEp1B,EAAAC,EAAAC,cAACm1B,GAAA,EAAD,KACEr1B,EAAAC,EAAAC,cAACo1B,GAAA,EAAD,KACAt1B,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,MACEv1B,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWC,MAAM,SAAjB,UACAx1B,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWC,MAAM,SAAjB,UACAx1B,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWC,MAAM,SAAjB,UACAx1B,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWC,MAAM,SAAjB,UACAx1B,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,QAGJv1B,EAAAC,EAAAC,cAACu1B,GAAA,EAAD,KAEGrf,EAAKxN,IAAI,SAACyO,EAAEjC,GAAH,OACRpV,EAAAC,EAAAC,cAACo1B,GAAA,EAAD,CACEnqB,IAAKiK,EACLrS,MAAO1E,IAEb2B,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWh1B,GAAI,CAAC2D,QAAQ,GAAIsxB,MAAM,UAClCx1B,EAAAC,EAAAC,cAAC0oB,GAAA,EAAD,KACI5oB,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CACAC,QACE7c,EAAAC,EAAAC,cAAC2oB,GAAA,EAAD,CACUnR,UAAWA,EAAQoB,KAAK,SAAA7N,GAAC,OAAIA,EAAElO,KAAOsa,EAAEta,KACxCA,GAAIsa,EAAEta,GAAGwQ,WACThE,SAAU,SAACjM,GAAD,OAAM6qB,EAAY7qB,IAC5BiN,SAAU8M,EAAE7F,gBAKtBxR,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWh1B,GAAI,CAAC2D,QAAQ,GAAIsxB,MAAM,UAC/Bne,EAAE7H,KAAKhC,OAAO,GADjB,UAGAxN,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWC,MAAM,SACjBx1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,YAClBsD,MAAO,CAAC3E,MAAO,QACZ+R,GAAckH,EAAEyR,wBAAwB,aAE7C9oB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aACf0Q,GAAckH,EAAEhG,oBAIvBrR,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWC,MAAM,SACjBx1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,YAClBsD,MAAO,CAAC3E,MAAO,QACZ+R,GAAckH,EAAE0R,qBAAqB,aAE1C/oB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aACf0Q,GAAckH,EAAE/F,iBAIvBtR,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,CAAWC,MAAM,SACjBx1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,YAClBsD,MAAO,CAAC3E,MAAO,QACZiZ,EAAE2R,mBAEPhpB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aACf4X,EAAEoQ,aAITznB,EAAAC,EAAAC,cAACq1B,GAAA,EAAD,KACEv1B,EAAAC,EAAAC,cAAC+oB,GAAD,CAAalnB,OAAQsV,YAQ/BrX,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACA1L,GAAI,CAACm1B,aAAc,SACnB5qB,WAAS,EACT1M,MAAM,UACNqB,QAAQ,YACRoM,QAAS,kBAAM8B,GAAQ,KALvB,kCASF3N,EAAAC,EAAAC,cAACmjB,GAAD,CACExlB,KAAMA,EACN8P,QAASA,EACTjO,QAASA,MCxIFi2B,GAAc,SAAAp2B,GAErB,IADF6W,EACE7W,EADF6W,KAAMiL,EACJ9hB,EADI8hB,QACJhgB,EAEsBC,oBAAU,IAAI8O,MAAMH,WAAa,GAFvD1O,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEG0P,EAFHxP,EAAA,GAEUq0B,EAFVr0B,EAAA,GAGEgL,ErDoBe,SAAC6J,EAAMrF,GAAU,IAAAjJ,EAENxG,mBAAS,IAFHyG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAE/ByE,EAF+BxE,EAAA,GAErByE,EAFqBzE,EAAA,GAatC,OATAhC,oBAAU,WACR,IAAM0G,EAAU2J,EAAK1J,OAAO,SAAAnO,GAC1B,OAAQ,IAAI6R,KAAKA,KAAKikB,MAAM91B,EAAIiR,OAAOS,WAAa,IAAOc,IAE7DtE,EAAQ+U,KAAK,SAACvhB,EAAG+qB,GAAJ,OAAU/qB,EAAEuP,KAAOwb,EAAExb,OAClChD,EAAYC,IACZ,CAACsE,IAGIxE,EqDjCUspB,CAAezf,EAAMrF,GAEpChL,oBAAU,WAAQsb,EAAQ9U,IAAY,CAACA,IAEzC,IAAMxD,EAAe,SAAC/J,GACpB,OAAQA,GACN,IAAK,QACH,OAAO42B,EAAS7kB,EAAQ,GAC1B,IAAK,OACH,OAAO6kB,EAAS7kB,EAAQ,KAO5B,OACI/Q,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAKC,WAAW,UAC9B9C,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAYC,QAAS,kBAAM9C,EAAa,UACvC/I,EAAAC,EAAAC,cAAC0hB,GAAA3hB,EAAD,OAEHD,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAAMsR,EAA1B,UACA/Q,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAaC,QAAS,kBAAM9C,EAAa,WACpC/I,EAAAC,EAAAC,cAAC2hB,GAAA5hB,EAAD,SCxBD61B,GAAqB,SAAAv2B,GAAmB,IAAjBw2B,EAAiBx2B,EAAjBw2B,YAAiB10B,EAI7BC,oBAAS,GAJoBC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAI9CxD,EAJ8C0D,EAAA,GAIxCoM,EAJwCpM,EAAA,GAAAmG,EAK7BpG,qBAL6BqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAK9C0O,EAL8CzO,EAAA,GAKxC0Z,EALwC1Z,EAAA,GAAAG,EAMvBxG,mBAAS,IANcyG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAM9C4P,EAN8C3P,EAAA,GAMrC4hB,EANqC5hB,EAAA,GAAA+N,EAQ3BC,qBAAW+Q,GAAmBpoB,IARHsX,EAAA/W,OAAAuC,EAAA,EAAAvC,CAAA6W,EAAA,GAQ9ChX,EAR8CkX,EAAA,GAQvCnC,EARuCmC,EAAA,GA8C/C,OAjBJjQ,oBAAU,WACR8N,EAAS,CAAC7U,KAAM,aAChB,InB9BOhC,IAAMgJ,IAAI7K,GAChBgC,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,KmB4BvBH,KAAK,SAAAC,GACJxC,QAAQC,IAAIuC,EAAIoI,KAAKsR,aACrBjD,EAAS,CAAC7U,KAAM,YAAaI,QAAShC,EAAIoI,KAAKsR,cAC/CuK,EAASjkB,EAAIoI,KAAKsR,eAGrB,MAAOxZ,GACN1C,QAAQC,IAAIyC,EAAE4L,WAGhB,IAIElJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAKrK,GAAI,CAAC2M,EAAG,EAAE3K,OAAQ,MACjBvC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEiL,GAAI,EACJzI,UAAU,MACVC,WAAW,UAGX9C,EAAAC,EAAAC,cAAC81B,GAAD,CACE5f,KAAMtX,EAAM+nB,eACZxF,QAASA,KAOTjL,EAERpW,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAKrK,GAAI,CAAE0D,OAAO,SAAUF,SAAU,MACnC/D,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACSxB,KAAK,QACLhL,QAAQ,YACRrB,MAAM,UACN0M,WAAS,EACTP,SAA4B,GAAlBmN,EAAQrK,OAClBxB,QAAS,kBAAM8B,GAAQ,KANhC,sEAUH3N,EAAAC,EAAAC,cAAC+1B,GAAD,CACEn3B,MAAOA,EAAMH,WACbyX,KAAMA,EACNsB,QAASA,EACTyQ,YAtEU,SAAC7qB,GACnB,IAAIP,EAAKO,EAAE2L,OAAOlM,GACdg0B,EAAYjyB,EAAM+nB,eAAe/N,KAAK,SAAAva,GAAG,OAAIA,EAAIxB,IAAMA,IAG3D,GAAIO,EAAE2L,OAAOyO,QACXiS,EAAU,GAAAhvB,OAAAsE,OAAAyJ,GAAA,EAAAzJ,CAAKyY,GAAL,CAAaqZ,SACpB,CACH,IAAIxkB,EAAWmL,EAAQhL,OAAO,SAAAnO,GAAG,OAC/BA,EAAIxB,IAAMA,IAEZ4sB,EAAWpd,QAgECvM,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CACA1M,OAAO,OACP9C,QAAQ,cAGZO,EAAAC,EAAAC,cAACg2B,GAAD,CACEr4B,KAAMA,EACN8P,QAASA,EACT5L,OAAQ2V,EACRqe,YAAaA,OCxGdr3B,GAAe,CACxBC,WAAYpB,EACZ44B,UAAW,GACXC,UAAW,CACPv4B,KAAK,EACLC,MAAM,GACN8G,KAAK,GACLyxB,QAAQ,KAkBHC,GAAe,SAACx3B,EAAOC,GAEhC,OAAOA,EAAOC,MAEV,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,UAAW5B,IAEnB,IAAK,YACD,MAAO,CACHoB,WAAYpB,EACZ44B,WA1BMxmB,EA0BmB5Q,EAAOK,QAAQm3B,SAxBvC5mB,EAAO/G,IAAI,SAAApF,GAEpB,MAAQ,CAACmG,MADE,GAAAhP,OAAM6I,EAAM6N,gBAAZ,KAAA1W,OAA+B6I,EAAM8N,cAExCgM,MAAO9Z,EAAMgM,KACbgO,YAAaha,EAAM+N,QACnBpT,gBAAiBqF,EAAMgO,UnEwBR,QACE,WmELjBglB,WAAYz3B,EAAOK,QAAQuQ,OAC3BymB,UAAWr3B,EAAOK,QAAQg3B,WAGlC,QACI,MAAM,IAAI/2B,MAhCD,IAACsQ,uFCJhB5M,GAAQ,CACVT,SAAU,WACVE,IAAK,MACLC,KAAM,MACNsK,UAAW,wBACXxK,OAAQ,QACRvB,MAAO,IACP+C,SAAU,MACV+I,SAAU,SACVE,QAAS,QACT7I,OAAQ,iBACR8I,UAAW,GACXC,EAAG,GAKMupB,GAAa,SAAAl3B,GAKpB,IAJFhB,EAIEgB,EAJFhB,IACAm4B,EAGEn3B,EAHFm3B,MACAtgB,EAEE7W,EAFF6W,KACAiL,EACE9hB,EADF8hB,QAGMyD,EAAO1O,EAAK5I,QAFhBnM,EAG8BC,mBAAS8U,EAAK0C,KAAK,SAAAzB,GAAC,OAAGA,EAAE7H,MAAQjR,EAAIiR,QAHnEjO,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAGKs1B,EAHLp1B,EAAA,GAGeq1B,EAHfr1B,EAAA,GAAAmG,EAK4BpG,oBAAS,GALrCqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAKK+Q,EALL9Q,EAAA,GAKc+Q,EALd/Q,EAAA,GAAAG,EAMsBxG,oBAAS,GAN/ByG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAMKjK,EANLkK,EAAA,GAMW4F,EANX5F,EAAA,GAAAE,EAO4B3G,qBAP5B8G,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAOKsJ,EAPLnJ,EAAA,GAOcyuB,EAPdzuB,EAAA,GAUIW,EAAe,SAACzL,GAClB,IAAMG,EAAQH,EAAE2L,OAAOxL,MACvBm5B,EAAY33B,OAAAC,EAAA,EAAAD,CAAA,GAAI03B,EAAL13B,OAAA+J,GAAA,EAAA/J,CAAA,GAAe3B,EAAE2L,OAAOrE,KAAOnH,KAC1C4jB,EAAQyD,IAQNgS,EAAc,kBAChB92B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACC/N,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAE6Q,SAAU,KAC9BpR,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,eACA/K,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACIV,UAAQ,EACRC,SAAUosB,EAASllB,KACnB7M,KAAK,kBACLlH,MAAM,eACND,MAAOk5B,EAAStlB,gBAChB9H,SAAU,SAACjM,GAAD,OAAMyL,EAAazL,KAGzBo5B,EAAM9tB,IAAI,SAACgV,EAAKxI,GAAN,OACNpV,EAAAC,EAAAC,cAACgL,GAAA,EAAD,CAAUC,IAAKiK,EAAO3X,MAAOmgB,GAAOA,OAOhD5d,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAatK,GAAI,CAAE6Q,SAAU,KAC7BpR,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAYhO,GAAG,qBAAf,UACAiD,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACIT,SAAUosB,EAASllB,KACnBlR,GAAI,CAACpC,gBAAiBw4B,EAASllB,KAAO,OAAS,IAC/ChU,MAAOk5B,EAASrlB,aAChB1M,KAAK,eACLlH,MAAM,eACN6L,SAAU,SAACjM,GAAD,OAAKyL,EAAazL,KAGxBo5B,EAAM9tB,IAAI,SAACgV,EAAKxI,GAAN,OACNpV,EAAAC,EAAAC,cAACgL,GAAA,EAAD,CAAUC,IAAKiK,EAAO3X,MAAOmgB,GAAOA,SAW9Cle,EACFM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,gBACAO,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACIS,WAAS,EACTlG,KAAK,UACLyN,WAAS,EACTC,KAAM,EACN7U,MAAO8T,EACPwlB,YAAY,eACZxtB,SAAU,SAACjM,GAAD,OAAKu5B,EAAWv5B,EAAE2L,OAAOxL,QACnCu5B,OAAQ,WAAKL,EAASplB,QAAQA,MAK1C,OAAO6J,kBAAQ,WACX,OACIpb,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACE8B,GAAc,IAAIO,KAAKumB,EAASnnB,MAAM,KAAtC,IAAA7U,OAAgDgD,EAAU,IAAIyS,KAAKumB,EAASnnB,MAAM2B,UAAlF,KACFnR,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAACgS,WAAW,SACxB/U,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMvC,QAAS,GAC3BmY,EACDzY,EAAAC,EAAAC,cAAC42B,EAAD,MACA92B,EAAAC,EAAAC,cAAC2oB,GAAA,EAAD,CACAnrB,MAAM,eACNuF,KAAMjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,qBACNxE,SAAU,kBAAImP,GAAW,MAG7B1Y,EAAAC,EAAAC,cAAC2oB,GAAA,EAAD,CACInrB,MAAM,SACNkH,KAAK,OACL8S,QAASif,EAASllB,KAClBxO,KAAMjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,eAAI/N,EAAAC,EAAAC,cAAC+2B,GAAAh3B,EAAD,OACVi3B,YACYl3B,EAAAC,EAAAC,cAAC+2B,GAAAh3B,EAAD,CACA8C,MAAO,CAACsG,QAAQ,QAAQ9G,OAAO,OAAOvB,MAAO,QAC7C5C,MAAM,UAElBmL,SAAU,SAACjM,IAzFA,SAACA,GAChBs5B,EAAY33B,OAAAC,EAAA,EAAAD,CAAA,GAAI03B,EAAL,CAAcllB,KAAMnU,EAAE2L,OAAOyO,WACxC2J,EAAQyD,GAuFaqS,CAAW75B,MAE3B0C,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAYC,QAAS,WAAMjR,QAAQC,IAAI,QACvC8S,GAAQ,KACJ3N,EAAAC,EAAAC,cAACk3B,GAAAn3B,EAAD,CAA2B7B,MAAOu4B,EAASplB,SAAS,cAG7DvR,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CACItQ,KAAMA,EACN8C,QAAS,kBAAIgN,GAAQ,KAErB3N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAIwC,IACJrD,OAWf,CAACi3B,EAAU94B,KCrJPkF,GAAQ,CACVvC,OAAO,IACPrC,gBAAgB,QAChB6C,MAAM,OACNuB,OAAQ,OACRD,SAAS,WACTE,IAAI,GAIF60B,GAAY,CACd/0B,SAAU,QACVqT,OAAQ,GACRlT,KAAM,GACNjC,OAAO,KAGE82B,GAAkB,SAAA/3B,GAIzB,IAHFm3B,EAGEn3B,EAHFm3B,MACAtgB,EAEE7W,EAFF6W,KACAiL,EACE9hB,EADF8hB,QACEhgB,EAEsBC,oBAAS,GAF/BC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEKxD,EAFL0D,EAAA,GAEWoM,EAFXpM,EAAA,GAAAmG,EAG4BpG,oBAAS,GAHrCqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGKjD,EAHLkD,EAAA,GAGciL,EAHdjL,EAAA,GAIIkL,EAAK5N,qBAAWhE,IAEhBs2B,EAAgB,SAACj6B,GAEnB,GADAA,EAAEsU,kBACEuF,OAAOC,QAAQ,sEAAgB,OAAO,EvDIxB,IAACrV,KuDHRqU,EvDIRpZ,IAAMuJ,KAAKrK,EAAa,CAACyT,OAAQ5N,IACvC5E,KAAK,SAAAC,GAEF,OAAOA,IAETC,MAAM,SAACC,GAAO,OAAOA,KuDRlBH,KAAK,SAAAC,GACe,MAAdA,EAAI8I,SACHyH,GAAQ,GACRiF,GAAW,GACXC,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAUC,QAAQ,2EAM5D83B,EAAY,WAEV,OACAx3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAKrL,MAAOA,IACXqT,EAAK/I,OAAS,EACfrN,EAAAC,EAAAC,cAAA,QAAOiJ,SAAU,SAAA7L,GAAC,OAAEi6B,EAAcj6B,KAClC0C,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAMtL,MAAO,CAACR,OAAO,IAAIuK,SAAS,WAC7BsJ,EAAKxN,IAAI,SAACrK,EAAI6W,GAAL,OACVpV,EAAAC,EAAAC,cAAA,OAAKiL,IAAKiK,GACNpV,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAU/N,GAAI,CAACgC,OAAO,KAClBvC,EAAAC,EAAAC,cAACu3B,GAAD,CACIl5B,IAAKA,EACLm4B,MAAOA,EACPtgB,KAAMA,EACNiL,QAASA,KAGjBrhB,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,UAMJ/O,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACAnB,WAAS,EACT9L,KAAK,SACLZ,MAAM,UACNqB,QAAQ,YACRwE,OAAO,SACPiI,QAASzH,GAAUzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,MACnByI,QAAS,SAACvO,GAAMi6B,EAAcj6B,KAP9B,uBAaR0C,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,qGAMAO,EAAAC,EAAAC,cAAC+e,GAAA,EAAD,CACIlc,MAAOs0B,GACPxrB,QAAS,kBAAI8B,GAAS9P,IACtB4M,KAAK,SACL/M,MAAM,eACN+B,QAAQ,cAmBhB,OAXAsG,oBAAU,WvD1FH/I,IAAMgJ,IAAI/J,GAChBkB,KAAK,SAAAC,GACF,OAAOA,IAETC,MAAM,SAACC,GAAO,OAAOA,IuDwFlBH,KAAK,SAAAC,GACFikB,EAAQjkB,EAAIoI,KAAKmK,WAIvB,IAIKyL,kBAAQ,WAEX,OACFpb,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KAEIlQ,EACAmC,EAAAC,EAAAC,cAACs3B,EAAD,MAEAx3B,EAAAC,EAAAC,cAAC+e,GAAA,EAAD,CACA1e,GAAI82B,GACJxrB,QAAS,kBAAI8B,GAAS9P,IACtB4M,KAAK,SACL/M,MAAM,2BACNU,MAAM,YACNqB,QAAQ,YACRwD,KAAMjD,EAAAC,EAAAC,cAACw3B,GAAAz3B,EAAD,UAKV,CAACpC,KClHH6B,GAAU,GAER6jB,GAAQ,IAAInT,KAELunB,GAAiB,WAE1B,IAAMzyB,EAAYD,qBAAWpD,IACvB+b,EAAOhgB,EAAesH,EAAUnD,OAAOlE,KAAMqH,EAAUnD,OAAOjE,OAHpCuD,EAMRC,oBAAS,GANDC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAMzBxD,EANyB0D,EAAA,GAMnBoM,EANmBpM,EAAA,GAAAmG,EAOFpG,oBAAS,GAPPqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAOzBkwB,EAPyBjwB,EAAA,GAOhBkwB,EAPgBlwB,EAAA,GAAAG,EAQRxG,mBAAS,IARDyG,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAQzBsO,EARyBrO,EAAA,GAQnBsZ,EARmBtZ,EAAA,GAAA+N,EAUNC,qBAAWugB,GAAc53B,IAVnBsX,EAAA/W,OAAAuC,EAAA,EAAAvC,CAAA6W,EAAA,GAUzBhX,EAVyBkX,EAAA,GAUlBnC,EAVkBmC,EAAA,GAAA/N,GAYrBhD,qBAAWhE,IACMK,mBAAS,CAACiiB,GAAM5S,cAAc4S,GAAMtT,cAbhC7H,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAazBkH,EAbyB/G,EAAA,GAAAA,EAAA,GA0FhC,OAdArC,oBAAU,WAEN8N,EAAS,CAAC7U,KAAM,aAChBqQ,GAAcF,GACbhS,KAAK,SAAAC,GACFyW,EAAS,CACL7U,KAAM,YACNI,QAAShC,EAAIoI,UAKvB,CAAC2J,IAGCnP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KAEIjP,EAAMH,aAAepB,EACrByC,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACI5K,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAM2Y,eAAe,YAClCxb,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,kCACAO,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACIC,QAASkgB,EACTruB,SAAU,kBAAIsuB,GAAYD,OAGlC53B,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CACCkY,YAAa,EACVjY,QAAS,CAACC,KAAcC,KAAkBC,MAC1CE,cAAe,CACfC,OAAQ,gBAERF,YAAY,eACZG,OAAO,KACP3C,OAAQma,EAAO,GAAAj9B,OAAAsE,OAAAyJ,GAAA,EAAAzJ,CACNyf,GAAa5f,EAAM03B,WAAW5Y,IADxB3e,OAAAyJ,GAAA,EAAAzJ,CACiCH,EAAMq3B,YACjDr3B,EAAMq3B,UAEX7V,WAxFS,SAAChjB,GAEtBoC,GACIM,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOC,QAAS,GAEXN,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAChBoQ,GAAcvS,EAAEyM,MAAMuT,MAAM,MAEhCtd,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAChBnC,EAAEyM,MAAMJ,OAGZ3J,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,QAApB,sBACQnC,EAAEyM,MAAMyW,cAAchD,aAG9Bxd,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAM2Y,eAAe,OtE1BxB,SsE2Bble,EAAEyM,MAAM5L,gBACN6B,EAAAC,EAAAC,cAAC+e,GAAA,EAAD,CACIxf,QAAQ,SACRrB,MAAM,UACNV,MAAM,iBAENsC,EAAAC,EAAAC,cAAC+e,GAAA,EAAD,CACAxf,QAAQ,WAER/B,MAAM,wBAMbsC,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,MACA/O,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,QAClBO,EAAAC,EAAAC,cAAC63B,GAAA93B,EAAD,MADF,SACoBnB,EAAMs3B,UAAUxxB,MAEpC5E,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,QAClBO,EAAAC,EAAAC,cAAC83B,GAAA/3B,EAAD,MADF,SACqBnB,EAAMs3B,UAAUC,SAErCr2B,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAClBO,EAAAC,EAAAC,cAAC+3B,GAAAh4B,EAAD,MADF,wBAOT0N,GAAQ,MA4CA3N,EAAAC,EAAAC,cAACg4B,GAAD,CACIxB,MAtGF,WAEV,IADA,IAAI9Y,EAAO,GACH9U,EAAEhK,EAAMs3B,UAAUv4B,KAAMiL,GAAKhK,EAAMs3B,UAAUt4B,MAAM,EAAGgL,IAC1D,IAAI,IAAIqvB,EAAE,EAAGA,EAAG,GAAIA,GAAG,GACnBva,EAAKlY,KAAL,GAAA/K,OAAamO,EAAb,KAAAnO,QAAmB,IAAIw9B,GAAG3qB,OAAO,KAGzC,OAAOoQ,EA+FY8Y,GACPtgB,KAAMA,EACNiL,QAASA,IAGbrhB,EAAAC,EAAAC,cAACmjB,GAAD,CACIxlB,KAAMA,EACN8P,QAASA,EACTjO,QAASA,MAIjBM,EAAAC,EAAAC,cAACkG,GAAD,QCtJCgyB,GAAU,WAAM,IAAA/2B,EAEKC,qBAFLC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAElB0F,EAFkBxF,EAAA,GAET82B,EAFS92B,EAAA,GAGnBsR,EAAK5N,qBAAWhE,IAkCtB,OATA8E,oBAAU,WlB/BH/I,IAAMgJ,IAAIrK,GAChBwB,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,KkB6BrBH,KAAK,SAAAC,GACFi7B,EAAWj7B,EAAIoI,SAGrB,IAKAxF,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAO/V,GAAEtB,OAAAC,EAAA,EAAAD,CAAA,CAAGgF,OAAO,SAAUF,SAAS,IAAKmJ,EAAE,GAAM7O,KAE9C0I,GAAW/G,EAAAC,EAAAC,cAACiU,GAAD,CACVvN,WArCW,SAAC7E,GAClBnH,QAAQC,IAAIkH,GAEV,IACE,GAAGA,EAAOvD,MAAM,CACd,IAAM4V,EAAYrS,EAAOqS,UAAYrS,EAAO6C,KAAO,KAAM,IAAIwL,MAAQiE,UACrEvB,GAAa/Q,EAAOvD,MAAM,GAAI4V,EAAUvB,GACxC9Q,EAAOvD,MAAQ4V,GlBEA,SAACrS,GACxB,OAAO/E,IAAMge,MAAMve,EAAe,CAACsK,QAAShF,IAC3C5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAD,OAAO1C,QAAQC,IAAIyC,MkBLpBg7B,CAAYv2B,GACT5E,KAAK,SAAAC,GACc,MAAfA,EAAI8I,OAIP2M,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAWC,QAAS,mFAHtDmT,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,QAASC,QAAS,6GAM5D,MAAMpC,GAAG1C,QAAQC,IAAIyC,EAAE4L,WAoBrBrC,cAAc,KACdE,QAASA,MC3BfhE,GAAO,CACXT,SAAU,QACVqT,OAAQ,GACR6E,MAAO,GACPha,OAAO,IACP8W,UAAW,IAIAihB,GAAc,WAAM,IAAAl3B,EACKC,mBAAS,aADdC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GACtB+qB,EADsB7qB,EAAA,GACXqd,EADWrd,EAAA,GAK3Bi3B,EAFWvzB,qBAAWT,IAGpB1F,MAAM6F,MAUZ,CAAC,CAAC1B,KAAMjD,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,MAAyB2E,KAAM,OAAQnH,MAAO,kCACtD,CAAEwF,KAAMjD,EAAAC,EAAAC,cAACwsB,GAAAzsB,EAAD,MAAiC2E,KAAM,UAAUnH,MAAO,8CAChE,CAAEwF,KAAMjD,EAAAC,EAAAC,cAAC8sB,GAAA/sB,EAAD,MAA6B2E,KAAM,YAAYnH,MAAO,4BAC9D,CAAEwF,KAAMjD,EAAAC,EAAAC,cAACu4B,GAAAx4B,EAAD,MAAiB2E,KAAM,aAAcnH,MAAO,4BACpD,CAAEwF,KAAOjD,EAAAC,EAAAC,cAAC2sB,GAAA5sB,EAAD,MAAyB2E,KAAM,OAAOnH,MAAO,6BAbtD,CACE,CAAEwF,KAAMjD,EAAAC,EAAAC,cAACw4B,GAAAz4B,EAAD,MAAiB2E,KAAM,SAASnH,MAAO,kCAC/C,CAAEwF,KAAMjD,EAAAC,EAAAC,cAACwsB,GAAAzsB,EAAD,MAAiC2E,KAAM,UAAUnH,MAAO,8CAChE,CAAEwF,KAAMjD,EAAAC,EAAAC,cAAC8sB,GAAA/sB,EAAD,MAA6B2E,KAAM,YAAYnH,MAAO,4BAC9D,CAAEwF,KAAMjD,EAAAC,EAAAC,cAACu4B,GAAAx4B,EAAD,MAAiB2E,KAAM,aAAcnH,MAAO,4BACpD,CAAEwF,KAAMjD,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,MAAwB2E,KAAM,QAAQnH,MAAO,sBACrD,CAAEwF,KAAOjD,EAAAC,EAAAC,cAAC2sB,GAAA5sB,EAAD,MAAyB2E,KAAM,OAAOnH,MAAO,6BAUhD0I,EAAe,WAGjB,OAAOimB,GACH,IAAK,SACH,OAAQpsB,EAAAC,EAAAC,cAACy4B,GAAA,SAAD,CAAU/1B,GAAG,WACvB,IAAK,OACH,OAAQ5C,EAAAC,EAAAC,cAACy4B,GAAA,SAAD,CAAU/1B,GAAG,UACvB,IAAK,QACH,OAAQ5C,EAAAC,EAAAC,cAAC04B,GAAD,MACV,IAAK,aACH,OAAQ54B,EAAAC,EAAAC,cAAC24B,GAAD,CAAqBja,aAAcA,IAC7C,IAAK,YACH,OAAQ5e,EAAAC,EAAAC,cAAC44B,GAAD,MACV,IAAK,eACH,OAAQ94B,EAAAC,EAAAC,cAACguB,GAAD,MACV,IAAK,UACH,OAAQluB,EAAAC,EAAAC,cAAC64B,GAAD,MACV,IAAK,OACH,OAAQ/4B,EAAAC,EAAAC,cAACy4B,GAAA,SAAD,CAAU/1B,GAAG,iBAMjC,OAAOwY,kBAAQ,WAEf,OACApb,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACM/N,EAAAC,EAAAC,cAACiG,EAAD,MAEAnG,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAKrK,GAAIwC,IACT/C,EAAAC,EAAAC,cAAC84B,GAAA,EAAD,CACEC,UAAU,6BACVh2B,KAAMjD,EAAAC,EAAAC,cAACg5B,GAAA,EAAD,CAAeC,SAAUn5B,EAAAC,EAAAC,cAACk5B,GAAAn5B,EAAD,SAG9Bu4B,EAAQ5vB,IAAI,SAAC7J,GAAD,OACXiB,EAAAC,EAAAC,cAACm5B,GAAA,EAAD,CACExtB,QAAS,WAAQ+S,EAAa7f,EAAO6F,OACrCuG,IAAKpM,EAAO6F,KACZ3B,KAAMlE,EAAOkE,KACbq2B,aAAcv6B,EAAOtB,cAUvB,CAAC2uB,KCnGAmN,GAAQ,WAAM,IAAAvyB,EAGiCC,eAAlDC,EAHiBF,EAGjBE,SAAUC,EAHOH,EAGPG,aAA2BG,EAHpBN,EAGOO,UAAaD,OACvCgB,EAAOrD,qBAAWT,IAJCnD,EAMKC,oBAAS,GANdC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAMlBoD,EANkBlD,EAAA,GAMTqR,EANSrR,EAAA,GAUzB,OAEIvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACCzF,EAAKxJ,MAAM4F,SACR1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAACob,GAAA,EAAD,CACE/a,GAAI,CAAC2M,EAAE,EAAEnJ,SAAU,IAAIE,OAAO,QAC9BsX,WAAS,EACT1Y,UAAU,SACVC,WAAW,UAEb9C,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAY3C,GAAI,CAAC+K,GAAG,GAAG0C,UAAU,MAAMvO,QAAQ,MACzCO,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAK0F,EAAKxJ,MAAM6F,MAAQ,aAAc,sBAC1C3E,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MACjB6I,EAAKxJ,MAAM8F,KADd,sDAKN5E,EAAAC,EAAAC,cAACob,GAAA,EAAD,CAAM8H,MAAI,GACVpjB,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACE7N,MAAM,QACNqB,QAAQ,YACRoM,QAASvD,EAAK5B,QAHhB,qCAWF1G,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAACob,GAAA,EAAD,CACE/a,GAAI,CAAC2M,EAAE,EAAEnJ,SAAU,IAAIE,OAAO,QAC9BsX,WAAS,EACT1Y,UAAU,SACVC,WAAW,SACXxC,QAAS,GAEXN,EAAAC,EAAAC,cAAA,QAAOiJ,SAAUhC,EAAamB,EAAKhC,QAEnCtG,EAAAC,EAAAC,cAACob,GAAA,EAAD,CAAM8H,MAAI,GACRpjB,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,CACE6H,OAAO,SACPvG,MAAM,6CACN0M,aAAa,oBACTlD,EAAS,QAAQ,CAAEoD,SAAU,oEAGrCtK,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAO+D,OAAS/D,EAAO+D,MAAMnC,SAC3DlJ,EAAAC,EAAAC,cAACob,GAAA,EAAD,CAAM8H,MAAI,GACRpjB,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,CACM6H,OAAO,SACPvG,MAAM,iCACN0M,aAAa,YACTlD,EAAS,WAAY,CAACoD,SAAW,oEAG7CtK,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAOY,UAAYZ,EAAOY,SAASgB,SACjElJ,EAAAC,EAAAC,cAACob,GAAA,EAAD,CAAM8H,MAAI,GACVpjB,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACEjN,KAAK,SACLZ,MAAM,UACNqB,QAAQ,YACRgL,KAAK,QACLK,WAAS,EACTe,QAAS,kBAAK+G,GAAW,IACzB1G,QAASzH,EACPzE,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAkBqH,KAAK,SAASrM,MAAM,YAEtC,IAVJ,+BAkBF4B,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAACyS,UAAW,WACxBxV,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,WACJ5C,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACIxM,QAAQ,YACRrB,MAAM,UACNo7B,UAAQ,GAHZ,iCCvFAC,GAAsB,SAAAl6B,GAA8B,IAA5Bm6B,EAA4Bn6B,EAA5Bm6B,UAAUzlB,EAAkB1U,EAAlB0U,aAErCpB,EAAK5N,qBAAWhE,IAEhB04B,EAAW,IAAIxiB,OAAOyiB,OAAOC,KAAKC,SAJqBz4B,EAK7BC,oBAAS,GALoBC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAKtD04B,EALsDx4B,EAAA,GAK5Cy4B,EAL4Cz4B,EAAA,GAAAmG,EAMjCpG,mBAAS,CAACqvB,IAAK,WAAWE,IAAK,cANElpB,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAMtDgpB,EANsD/oB,EAAA,GAM9CsyB,EAN8CtyB,EAAA,GAAAX,EAOHC,eAAlDC,EAPqDF,EAOrDE,SAAUC,EAP2CH,EAO3CG,aAA2BG,EAPgBN,EAO7BO,UAAaD,OAEvCgB,EAAOrD,qBAAWT,IA0CxB,OACIxE,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACI5K,EAAAC,EAAAC,cAAA,QAAMiJ,SAAUhC,EAxBH,SAACpF,ICtCQ,SAACA,GAC/B,OAAO/E,IAAMuJ,KAAKxK,EAAiB,CAACm+B,cAAen4B,IAClD5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KDoCnB68B,CAAmB,CACfD,cAFWj7B,OAAAC,EAAA,EAAAD,CAAA,GAAO8C,EAAP,CAAc4uB,IAAKD,EAAOC,IAAKE,IAAKH,EAAOG,MAGtD5iB,UAAWyrB,IAEdv8B,KAAK,SAACC,GAEH,GAAiB,KAAdA,EAAI8I,OAAc,CACjB,IAAMkO,EAAWslB,EAAU90B,MAAQ,IAAIwL,MAAQiE,UAC/CvB,GAAa4mB,EAAUl7B,MAAM,GAAI4V,EAAUvB,GAC3CvK,EAAKhC,MAAM,CACP+E,MAAQquB,EAAUruB,MAClBnD,SAAWwxB,EAAUxxB,WAEzB+L,EAAa,SASbjU,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACIC,QAAS,EACTkb,eAAe,UAEfxb,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACQ8K,EAAS,OAAQ,CACjBoD,SAAU,iFACVc,UAAW,CACP3N,MAAM,GACNyL,QAAS,oGALrB,CAQIxL,MAAM,qBACN4M,UAAQ,KAEXtK,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAO1C,MAAQ0C,EAAO1C,KAAKsE,SAE1DlJ,EAAAC,EAAAC,cAACmK,GAAA,EAADpL,OAAA7C,OAAA,GACQ8K,EAAS,UAAU,CAACoD,SAAU,eADtC,CAEI5M,MAAM,qBACN0M,aAAc,eACdE,UAAQ,EACR0sB,OAAQ,SAAA15B,GAAC,OAjEV,SAACA,GAChBq8B,EAASS,QAAQ,CAAC/D,QAAS/4B,EAAE2L,OAAOxL,OAAO,SAAS48B,EAASn0B,GAEzD,GAAa,MAAVA,EAAe,CACd,IAAM5D,EAAW+3B,EAAQ,GAAGC,SAASC,SACrCN,EAAU,CACNtJ,IAAKruB,EAASquB,MACdE,IAAKvuB,EAASuuB,QAElBmJ,GAAY,QAEZ10B,MAAM,4GAsDek1B,CAAWl9B,OAE5B0C,EAAAC,EAAAC,cAAA,QAAM6C,MAAO,CAAC3E,MAAO,QAASkJ,EAAO+uB,SAAW/uB,EAAO+uB,QAAQntB,SAC/DlJ,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACI5K,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,4PAMJO,EAAAC,EAAAC,cAACsvB,GAAA,EAAD,CACIG,kBAAmB,CAAEptB,OAAO,KAC5B4d,OAAQ,CAACwQ,IAAKD,EAAOC,IAAKE,IAAKH,EAAOG,KACtCjB,KAAM,IAGN5vB,EAAAC,EAAAC,cAACsvB,GAAA,EAAD,CAAQltB,SAAU,CAACquB,IAAKD,EAAOC,IAAKE,IAAKH,EAAOG,KAAMrwB,OAAQ,KAGlER,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACIxM,QAAQ,YACRrB,MAAM,UACNY,KAAK,SACLuL,UAAWwvB,GAJf,8BEnGdpmB,GAAQ,CACV,+DACA,4BAIS8mB,GAAS,WAAM,IAAAp5B,EACUC,mBAAS,GADnBC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GACjB2S,EADiBzS,EAAA,GACN0S,EADM1S,EAAA,GAAAmG,EAESpG,qBAFTqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAElBgyB,EAFkB/xB,EAAA,GAEP+yB,EAFO/yB,EAAA,GASlBuM,EAAiB,CACnBlU,EAAAC,EAAAC,cAACiU,GAAD,CACIvN,WAPmB,SAAC7E,GACxB24B,EAAa34B,GACbkS,EAAa,IAMTpN,cAAetJ,IAEnByC,EAAAC,EAAAC,cAACy6B,GAAD,CACEjB,UAAWA,EACXzlB,aAAcA,KAGpB,OACIjU,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAMrK,GAAI,CAACS,MAAO,MAAM+C,SAAS,IAAKE,OAAO,cAE7CjE,EAAAC,EAAAC,cAAC+U,GAAA,EAAD,CACIC,WAAYlB,EACZmB,kBAAgB,EAChBpS,MAAO,CAACuI,GAAG,IAEZqI,GAAM/K,IAAI,SAAClL,EAAO0X,GAAR,OACTpV,EAAAC,EAAAC,cAACmV,GAAA,EAAD,CAAMlK,IAAKiK,GACTpV,EAAAC,EAAAC,cAACoV,GAAA,EAAD,KACK5X,OAKVwW,EAAeF,GAEhBhU,EAAAC,EAAAC,cAAC06B,GAAA,KAAD,CAAMh4B,GAAG,UACT5C,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACI7N,MAAM,UACNqB,QAAQ,YACRgL,KAAK,QACLK,WAAS,GAJb,oLCtCF+vB,GAAY,CAChBv4B,SAAS,WACTE,KAAK,GACLC,KAAK,EACLrE,MAAM,WAGF08B,GAAc,CAClBx4B,SAAS,WACTE,IAAI,GACJC,MAAM,GACNrE,MAAM,WAKF28B,GAAeC,KAAWC,KAAsB,CAAEr2B,KAAM,WAAzCo2B,CAAsD,SAAAl7B,GAAS,IAEhFo7B,EAWEp7B,EAXFo7B,QACAC,EAUEr7B,EAVFq7B,OACAjyB,EASEpJ,EATFoJ,QACAkyB,EAQEt7B,EARFs7B,OACAxd,EAOE9d,EAPF8d,KACAyd,EAMEv7B,EANFu7B,WACAC,EAKEx7B,EALFw7B,KACAC,EAIEz7B,EAJFy7B,mBACAC,EAGE17B,EAHF07B,cACAC,EAEE37B,EAFF27B,YACAC,EACE57B,EADF47B,mBAZgFr6B,EAehDC,oBAAS,GAfuCC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAe3Es6B,EAf2Ep6B,EAAA,GAehEq6B,EAfgEr6B,EAAA,GA0BlF,OACEvB,EAAAC,EAAAC,cAAC27B,GAAA,EAAD58B,OAAA7C,OAAA,CACEmf,WAAS,EACTjb,QAAS,EACTyC,MAAO,CAACyY,eAAyB,UAAT8f,EAAmB,WAAa,eACpDC,GAEM,SAATD,GACCt7B,EAAAC,EAAAC,cAAC27B,GAAA,EAAD58B,OAAA7C,OAAA,CAAMgnB,MAAI,GAAKoY,GACbx7B,EAAAC,EAAAC,cAAC47B,GAAA,EAAD78B,OAAA7C,OAAA,CACE4G,IAAKm4B,GACDM,EAFN,CAGEl3B,UAAWw3B,aAAGb,EAAQC,OAAQM,EAAYl3B,eAIhDvE,EAAAC,EAAAC,cAAC27B,GAAA,EAAD,CAAMzY,MAAI,EAACJ,GAAI,GAEZ,CAAC9Z,EAAQxJ,SAASkJ,IAAI,SAACozB,EAAKlzB,GAE3B,IA7BYsM,EA6BN6mB,EAAkBP,EAAmBM,EAAKlzB,EAAGhJ,GACnD,OAEEE,EAAAC,EAAAC,cAAA,OACEiL,IAAKrC,EACLvE,UAAW22B,EAAO,GAAAvgC,OAAI2gC,EAAJ,SAElBt7B,EAAAC,EAAAC,cAACg8B,GAAA,EAADj9B,OAAA7C,OAAA,CACEo5B,MAAO,QACDyG,EAFR,CAGI13B,UAAWw3B,aACTb,EAAQc,IACRd,EAAQI,IAzCNlmB,EA0CUtM,EAzCd,IAAVsM,EACK8lB,EAAO,GAAAvgC,OAAI2gC,EAAJ,UAEZlmB,IAAU,CAAClM,EAAQxJ,SAAS2N,OAAS,EAChC6tB,EAAO,GAAAvgC,OAAI2gC,EAAJ,SAET,IAoCSW,EAAgB13B,WAElB43B,YAAa,kBAAIP,GAAa,IAC9BQ,WAAY,kBAAIR,GAAa,IAC7B74B,MAAO,CAACT,SAAU,cAEjB05B,EACDh8B,EAAAC,EAAAC,cAAA,QAAM6C,MAAO83B,IACVjd,GAGG,UAAP0d,GACCt7B,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CACE7I,MAAK9D,OAAAC,EAAA,EAAAD,CAAA,GAAM67B,GAAN,CAAmBzxB,QAASsyB,EAAY,QAAU,SACvD9vB,QAAS,WAAKwvB,EAAWD,EAAQlyB,EAAQnM,MACzCiD,EAAAC,EAAAC,cAACm8B,GAAAp8B,EAAD,eAqBpB86B,GAAatR,aAAe,CAC1B0R,OAAQ,GACRmB,SAAU,GACVhB,KAAM,OACNC,mBAAoB,GACpBC,cAAe,GACfC,YAAa,GACbC,mBAAoB,iBAAO,KAIdX,UClITx4B,GAAUg6B,SAASC,gBAAgBC,aACnC5B,GAAY,CACd52B,OAAO,SACP7F,MAAM,UACNoX,UAAW,UAGFknB,GAAe,SAAAn9B,GAKtB,IAJF+8B,EAIE/8B,EAJF+8B,SACA7tB,EAGElP,EAHFkP,SACA4sB,EAEE97B,EAFF87B,WACAsB,EACEp9B,EADFo9B,OAGIntB,GAAO,IAAIY,MAAO7C,WAClBqvB,EAAc,IAAIxsB,KAAK,GAE5B,OACKpQ,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CACI7N,GAAG,kBACHwD,GAAI,CAAC2D,QAAQ,eACb3B,OAAM,GAAA5H,OAAI4H,GAAO,IAAX,MACNvB,MAAM,OACN8L,SAAU,WAGRwvB,EAAS1zB,IAAI,SAACM,EAASkM,GACrB,IAAMkmB,EAAOpyB,EAAQic,cAAgBwX,EAAS,QAAU,OAClDE,EAAW,IAAIzsB,KAAKlH,EAAQkhB,YAC5B0S,EAAc,IAAI1sB,KAAKlH,EAAQsG,MAC/BoO,EAAI,GAAAjjB,QAAO,KAAKkiC,EAASvsB,YAAY9C,OAAO,GAAxC,MAAA7S,QAAgD,KAAOkiC,EAASrsB,cAAchD,OAAO,IAS/F,OANIgC,EAFDstB,EAAcF,EAENlsB,GADPksB,EAAcE,GAGP,GAKX98B,EAAAC,EAAAC,cAAA,OAAKiL,IAAKiK,GACVpV,EAAAC,EAAAC,cAAA,MAAI6C,MAAO83B,IACVrrB,GAEIxP,EAAAC,EAAAC,cAAC68B,GAAD,CACG7zB,QAASA,EACTkyB,OAAQ3sB,EAAS1R,GACjBu+B,KAAMA,EACNH,OAAQ1sB,EAAS0sB,OACjBvd,KAAMA,EACNyd,WAAYA,SCpDvB2B,GAAY,SAAAz9B,GAAmC,IAAjCkP,EAAiClP,EAAjCkP,SAAUwuB,EAAuB19B,EAAvB09B,YAAYj8B,EAAWzB,EAAXyB,MAAWK,EAElCC,qBAFkCC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEnDiL,EAFmD/K,EAAA,GAE7C4U,EAF6C5U,EAAA,GAiB1D,OACEvB,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACC5K,EAAAC,EAAAC,cAAA,QACCiJ,SAZW,SAAC7L,GAEdA,EAAEsU,iBACEtF,IACJ2wB,EAAYxuB,EAAS1R,GAAIuP,GACzB6J,EAAQ,MACRomB,SAASW,eAAe,aAAaz/B,MAAM,KAOzCsF,MAAO,CAACT,SAAS,QAChBqT,OAAO,EACP3U,MAAK,eAAArG,OAAgBqG,EAAhB,QAELhB,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACCE,GAAI,CAAC8mB,GAAG,GACRxkB,UAAU,MACVvC,QAAS,EACTwC,WAAW,UAET9C,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACEtN,GAAG,YACHuN,UAAQ,EACRvH,MAAO,CAAC/B,MAAM,qBACduI,SA/BW,SAACjM,GACpB6Y,EAAQ7Y,EAAE2L,OAAOxL,UAgCZuC,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CACC5M,KAAK,SACLZ,MAAM,UACN4P,UAAU,UAEXhO,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,WCxBKk9B,GAAgB,SAACzhC,EAASqB,GAEpC,OAAOC,IAAMC,OlF2JY,SAACvB,EAASqB,GAAV,SAAApC,OAC1BD,EAD0B,WAAAC,OACAe,EADA,cAAAf,OACoBoC,GkF5JzBqgC,CAAc1hC,EAASqB,IAC1CI,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KC3BdoB,GAAe,CACxBC,WAAYpB,EACZ9B,YAAa,IAGJ4hC,GAAc,SAACv+B,EAAOC,GAG/B,OAFAnE,QAAQC,IAAIkE,GAELA,EAAOC,MAEV,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,UAAW5B,IAEnB,IAAK,YACD,MAAO,CACHoB,WAAYpB,EACZ9B,YAAasD,EAAOK,SAE5B,IAAK,MACD,MAAO,CACHT,WAAYpB,EACZ9B,YAAW,GAAAd,OAAAsE,OAAAyJ,GAAA,EAAAzJ,CAAMH,EAAMrD,aAAZ,CAAwBsD,EAAOmK,WAElD,IAAK,SACD,MAAO,CACHvK,WAAYpB,EACZ9B,YAAaqD,EAAMrD,YAAYiR,OAAO,SAAAC,GAAC,OAAIA,EAAE5P,KAAOgC,EAAOhC,MAEnE,QACI,MAAM,IAAIsC,kDCpBhB0D,GAAQ,CACZT,SAAU,WACVE,IAAK,MACLC,KAAM,MACNsK,UAAW,wBACX/L,MAAO,IACP+C,SAAU,MACViJ,QAAS,QACT7I,OAAQ,iBACR8I,UAAW,GACXC,EAAG,GAIQowB,GAAe,SAAA/9B,GAAgB,IAAdg+B,EAAch+B,EAAdg+B,SAAcl8B,EAEhBC,oBAAS,GAFOC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAEjCxD,EAFiC0D,EAAA,GAE3BoM,EAF2BpM,EAAA,GAAAmG,EAGVpG,oBAAS,GAHCqG,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAGjCjD,EAHiCkD,EAAA,GAGxBiL,EAHwBjL,EAAA,GAKlCkL,EAAK5N,qBAAWhE,IAmBhBvB,EACHM,EAAAC,EAAAC,cAAC4U,GAAD,CACCnC,eAnBmB,SAAC5Q,GAEtByQ,GAAWzQ,GACV5E,KAAK,SAAAC,GACJ,GAAmB,OAAfA,EAAI8I,OACN,OAAO,EAETq3B,EAASngC,EAAIoI,KAAKiN,OAClBG,GAAW,GACXjF,GAAQ,GACRkF,EAAGnR,YAAY,CAAC7D,MAAM,EAAM4B,QAAQ,UAAUC,QAAQ,kGAUtD+E,QAASA,EACTmO,WAAYA,IAKhB,OACI5S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAYC,QAAS,kBAAK8B,GAAQ,KAChC3N,EAAAC,EAAAC,cAACs9B,GAAAv9B,EAAD,OAEFD,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CACEtQ,KAAMA,EACN8C,QAAS,kBAAKgN,GAAQ,KAExB3N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CAAK7N,GAAIwC,IACJrD,8yMClCb,IAAM+9B,GAAe,CACnBn7B,SAAU,WACVE,IAAK,MACLC,KAAM,MACNsK,UAAW,qBACXxK,OAAQ,IACRwB,SAAU,OAKN25B,GAAkBvmB,OAAOwmB,WAAa,IADxB,IAC4C,EAE1DC,GAAS,KAEFC,GAAO,WAAM,IAAA/nB,EAEAC,qBAAWsnB,GAAa3+B,IAFxBsX,EAAA/W,OAAAuC,EAAA,EAAAvC,CAAA6W,EAAA,GAEnBhX,EAFmBkX,EAAA,GAEZnC,EAFYmC,EAAA,GAAA3U,EAIAC,mBAAS,IAJTC,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAoC,EAAA,GAInBoR,EAJmBlR,EAAA,GAIZg8B,EAJYh8B,EAAA,GAAAmG,EAKMpG,mBAAS,CAACvE,GAAI,GAAG6H,KAAK,GAAGu2B,OAAO,KALtCxzB,EAAA1I,OAAAuC,EAAA,EAAAvC,CAAAyI,EAAA,GAKnB+G,EALmB9G,EAAA,GAKTsO,EALStO,EAAA,GAAAG,EAMFxG,mBAA6B,IAApBo8B,IANP31B,EAAA9I,OAAAuC,EAAA,EAAAvC,CAAA6I,EAAA,GAMnBjK,EANmBkK,EAAA,GAMb4F,EANa5F,EAAA,GAAAE,EAOU3G,oBAAS,GAPnB8G,EAAAnJ,OAAAuC,EAAA,EAAAvC,CAAAgJ,EAAA,GAOnB61B,EAPmB11B,EAAA,GAOP21B,EAPO31B,EAAA,GAAAkX,EASEhe,mBAAS,CAACzD,MAAM,EAAO6B,QAAS,KATlC6f,EAAAtgB,OAAAuC,EAAA,EAAAvC,CAAAqgB,EAAA,GASnB0e,EATmBze,EAAA,GASX0e,EATW1e,EAAA,GAAAwE,EAUEziB,qBAVF0iB,EAAA/kB,OAAAuC,EAAA,EAAAvC,CAAA8kB,EAAA,GAUnB4Y,EAVmB3Y,EAAA,GAUXka,EAVWla,EAAA,GAWpB1b,EAAOrD,qBAAWT,IAElBO,EAAUC,wBAbUkf,EAeF5iB,mBAAS,IAfP6iB,EAAAllB,OAAAuC,EAAA,EAAAvC,CAAAilB,EAAA,GAenB5X,EAfmB6X,EAAA,GAebhO,EAfagO,EAAA,GAiBpB5X,EAAWH,GAActN,EAAMrD,YAAY,UAAU6Q,GACrD7Q,EAAc8Q,EAASc,OAAS,EAAGd,EAAWzN,EAAMrD,YAGpD0iC,EAAM,GAAAxjC,OAD0C,gCAC1C,SAqBJyjC,EAAe,SAACrhC,GACpB8W,EAAS,CAAC7U,KAAM,aH3FS,SAACjC,GAE1B,OADAnC,QAAQC,IAAIkC,GACLC,IAAMgJ,IAAIvK,EAAYsB,IAC5BI,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IGsFvB+gC,CAActhC,GACbI,KAAK,SAACC,GACLwgC,GAAOU,KAAK,QAAS7vB,EAAS1R,IAC9BkZ,EAAY,CAAClZ,GAAIA,EAAI6H,KAAMxH,EAAIoI,KAAK+4B,UAAUpD,OAAQ/9B,EAAIoI,KAAK21B,SAC/DyC,GAAOU,KAAK,OAAQvhC,GACpB8W,EAAS,CACP7U,KAAM,YACNI,QAAShC,EAAIoI,KAAK82B,WAEpBnmB,OAQEqoB,EAAmB,SAACC,GACxB15B,EAAQW,KAAK+4B,IAyEjB,OA7CE14B,oBAAU,WAsCV,OApCE9G,OAAAy/B,GAAA,EAAAz/B,CAAA0/B,KAAAC,KAAC,SAAAC,IAAA,OAAAF,KAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAla,MAAA,OACC+Y,GAASqB,cAAGd,GACZvjC,QAAQC,IAAI,sBACZ+iC,GAAOsB,GAAG,aAAc,WACpBtkC,QAAQC,IAAI,+BAAiC+iC,GAAO7gC,MAI1D6gC,GAAOsB,GAAG,kBAAkB,SAACh2B,GAC3B+0B,EAAU,CAACpgC,MAAM,EAAM6B,QAASwJ,EAAQxJ,UACxC9E,QAAQC,IAAImjC,GACVnqB,EAAS,CACP7U,KAAM,MACNkK,QAASA,MAKjB00B,GAAOsB,GAAG,iBAAiB,SAACniC,GAC1B8W,EAAS,CACP7U,KAAM,SACNjC,GAAIA,MArBL,wBAAAgiC,EAAAI,SAAAN,KAAD5/B,GlE3IOjC,IAAMgJ,IAAIzK,GAChB4B,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,IkEoKtBH,KAAK,SAAAC,GACJmgC,EAASngC,EAAIoI,KAAKiN,OAClByrB,EAAU9gC,EAAIoI,KAAKm3B,UAKhB,WACLuB,EAAU,MAGX,IAKCl+B,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACE5K,EAAAC,EAAAC,cAACktB,GAAA,EAAD,CACE9qB,SAAS,QACTS,MAAO,CAACq8B,YAAW,QAAAzkC,OAAU+iC,GAAV,gBAEnB19B,EAAAC,EAAAC,cAACG,GAAA,EAAD,KACAL,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEwC,UAAU,MACVC,WAAW,SACX0Y,eAAe,iBAEfxb,EAAAC,EAAAC,cAAA,UAAKuO,EAAS7J,MACd5E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACm/B,GAAA,EAAD,CACExiB,QACE7c,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CAAQlO,SAAU,kBAAIoE,GAAS9P,IAAO6Z,QAAS7Z,EAAMO,MAAM,YAE7DV,MAAM,GACN4hC,eAAe,UAEft/B,EAAAC,EAAAC,cAAC0L,GAAA,EAAD,CAAYC,QAAS,kBAAMkyB,GAAeD,KACxC99B,EAAAC,EAAAC,cAACq/B,GAAAt/B,EAAD,CAAoBM,GAAI,CAACwU,WAAW,OAAO3W,MAAM,cAIvD4B,EAAAC,EAAAC,cAAA,QAAMiJ,SAAU,SAAC7L,IAjGF,SAACA,GACpBA,EAAEsU,iBACoB,GAAnBrF,EAASc,QAAa/H,MAAM,kFAgGzBk6B,CAAaliC,KAEf0C,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CACE9J,GAAI,CAAC+K,GAAG,EAAEjC,QAASy0B,EAAa,GAAI,QACpC/6B,MAAO,CAAC5E,gBAAiB,SACzBsB,QAAQ,WACRqL,WAAS,EACTyD,YAAY,eACZ3J,KAAK,OACL2E,SAAU,SAACjM,GAAD,OAAO6Y,EAAQ7Y,EAAE2L,OAAOxL,aAUnCuC,EAAAC,EAAAC,cAACgrB,GAAA,EAAD,CACE3qB,GAAI,CACHS,MAAO08B,GACPjQ,WAAY,EACZG,qBAAsB,CACpB5sB,MAhMM,IAiMN6sB,UAAW,eAGfpuB,QAAQ,aACR0rB,OAAO,OACPttB,KAAMA,GAGhBmC,EAAAC,EAAAC,cAAA,MAAInD,GAAG,aACDiD,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAM9N,GAAI,CAAES,MAAO,OAAOuB,OAAO,OAAQyK,QAAS,qBAAlD,SACE1E,EAAKxJ,MAAM6F,MACb3E,EAAAC,EAAAC,cAACoO,GAAA,EAAD,KACEtO,EAAAC,EAAAC,cAACu/B,GAAD,CAAalC,SAAUA,KAGzB,GAEC9qB,EAAM7J,IAAI,SAAC82B,EAAMtqB,GAAP,OACTpV,EAAAC,EAAAC,cAAA,OAAKiL,IAAKiK,GACTpV,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUgc,QAAM,EAACze,QAAS,kBAAIuyB,EAAasB,EAAK3iC,MAC/CiD,EAAAC,EAAAC,cAACwO,GAAA,EAAD,KACA1O,EAAAC,EAAAC,cAACysB,GAAA,EAAD,CAAOvuB,MAAM,QAAQwuB,aAAc8S,EAAKxV,OAGxClqB,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CACE3L,IAAK1E,GAASohC,IAASC,IACvB/wB,IAAK8wB,EAAK96B,QAIZ5E,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcC,QAAS4wB,EAAK96B,QAE7B5E,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAAStP,QAAQ,QAAQuO,UAAU,UAItChO,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAUvL,MAAO,CAACT,SAAS,WAAYqT,OAAO,KAC7CrN,EAAKxJ,MAAM6F,MAEZ3E,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACEnB,WAAS,EACT1M,MAAM,UACNqB,QAAQ,WACRoM,QAAS,WAAM2yB,EAAiB,gBAJlC,kCAUAx+B,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACEnB,WAAS,EACT1M,MAAM,UACNqB,QAAQ,WACRoM,QAAS,WAAM2yB,EAAiB,wBAJlC,iDAcFx+B,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,CAAK7H,MAAO,CACR/B,MAAK,eAAArG,OAAiB+iC,GAAjB,OACL3oB,WAAU,GAAApa,OAAK+iC,GAAL,QAKVjvB,EAAS1R,GACTiD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KAEGjP,EAAMH,YAAcpB,EACnByC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8N,SAAA,KACA/N,EAAAC,EAAAC,cAACG,GAAA,EAAD,KACAL,EAAAC,EAAAC,cAAC0/B,GAAD,CACEnxB,SAAUA,EACV6tB,SAAU7gC,EACVokC,WAAYhsB,EACZwnB,WArPO,SAACD,EAAQr+B,GAEvBoa,OAAOC,QAAQ,2GAElB+lB,GAAc/B,EAAQr+B,GACrBI,KAAK,SAAAC,GACc,MAAfA,EAAI8I,SACP2N,EAAS,CACP7U,KAAM,SACNjC,GAAIA,IAEN6gC,GAAOU,KAAK,iBAAkBlD,EAAQr+B,OA2O9B4/B,OAAQA,IAGd38B,EAAAC,EAAAC,cAACO,GAAA,EAAD,CACE5C,KAAMmgC,EAAOngC,KACb6C,iBAAkB,IAClBH,GAAI,CAACm1B,aAAc,GACnB90B,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDH,QAAS,kBAAIs9B,EAAUh/B,OAAAC,EAAA,EAAAD,CAAA,GAAI++B,EAAL,CAAangC,MAAM,MACzCgO,QAAS,WACP,IAAMtN,EAAMg+B,SAASW,eAAe,mBAC9BvnB,EAASpX,EAAIuhC,aAAevhC,EAAIk+B,aACtCl+B,EAAIwhC,SAAS,CAACv9B,IAAImT,EAASqqB,SAAU,aAEvChgC,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAOY,SAAS,aACdf,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOwC,UAAU,MAAMC,WAAW,SAASxC,QAAS,GACpDN,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CACE3L,IAAKyL,EAAS0sB,QAAUwE,MACxB3/B,EAAAC,EAAAC,cAAA,kBAAK89B,EAAOt+B,QAAQ8N,MAAM,EAAE,IAA5B,aAIFxN,EAAAC,EAAAC,cAAC+/B,GAAD,CACExxB,SAAUA,EACVwuB,YA5NQ,SAAClgC,EAAI2C,IH/GG,SAAC3C,EAAGgF,GAE9B,OAAO/E,IAAMuJ,KAAK9K,EAAYsB,GAAI,CAACu/B,SAAUv6B,IAC5C5E,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAACC,GAAS,MAAMA,KG2GvB4iC,CAAcnjC,EAAI2C,GACjBvC,KAAK,SAAAC,GACc,MAAfA,EAAI8I,SAEP03B,GAAOU,KAAK,eAAgB7vB,EAAS1R,GAAIK,EAAIoI,KAAK0D,SAClD2K,EAAS,CACP7U,KAAM,MACNkK,QAAS9L,EAAIoI,KAAK0D,aAIrB7L,MAAM,SAAAC,GAAC,OAAI1C,QAAQC,IAAIyC,MAgNd0D,MAAO08B,OAMX19B,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CACAL,MAAO,CAAC/B,MAAO,OAAQuB,OAAQ,OAAQ0B,OAAQ,cAC/C7F,MAAM,aAMV4B,EAAAC,EAAAC,cAAA,OAAK6C,MAAO06B,IACTz9B,EAAAC,EAAAC,cAAC2sB,GAAA5sB,EAAD,MACCD,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,MAApB,wSCvVJ0gC,GAAmB,CACrBjzB,EAAE,EACF3K,OAAQ,IACR0B,OAAO,SACPuR,UAAW,UAGT4qB,GAAgB,CAClBp/B,MAAO,MACPuB,OAAQ,QAGN89B,GAAc,CAChBnzB,EAAE,EACFlM,MAAM,OACN+C,SAAU,IACVE,OAAO,aAGLq8B,GAAY,CACdt8B,UAAU,IACVC,OAAQ,UAENs8B,GAAQ,CACV,CACIt9B,KAAMjD,EAAAC,EAAAC,cAAA,OAAK8C,IAAKw9B,KAAez9B,MAAOq9B,KACtCz2B,MAAO,iCACP82B,KAAM,oJAEV,CACIx9B,KAAOjD,EAAAC,EAAAC,cAAA,OAAK8C,IAAK09B,KAAe39B,MAAOq9B,KACvCz2B,MAAO,2BACP82B,KAAM,gHAEV,CACIx9B,KAAOjD,EAAAC,EAAAC,cAAA,OAAK8C,IAAK29B,KAAc59B,MAAOq9B,KACtCz2B,MAAO,iCACP82B,KAAM,oJAEV,CACIx9B,KAAOjD,EAAAC,EAAAC,cAAA,OAAK8C,IAAK49B,KAAU79B,MAAOq9B,KAClCz2B,MAAO,uCACP82B,KAAM,oJAEV,CACIx9B,KAAOjD,EAAAC,EAAAC,cAAA,OAAK8C,IAAK69B,KAAW99B,MAAOq9B,KACnCz2B,MAAO,iCACP82B,KAAM,oJAEV,CACIx9B,KAAOjD,EAAAC,EAAAC,cAAA,OAAK8C,IAAK89B,KAAY/9B,MAAOq9B,KACpCz2B,MAAO,uCACP82B,KAAM,qJAKDM,GAAM,kBAEf/gC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACIE,GAAI,CAAC2M,EAAE,GACPnK,MAAO1E,IAEP2B,EAAAC,EAAAC,cAAC8gC,GAAD,MACAhhC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAO0C,MAAO,CAAC/B,MAAM,SACrBhB,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACEyC,WAAW,UAET9C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,WACD5C,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACI1L,GAAI,CAACS,MAAO,IAAKiD,OAAO,aACxBxE,QAAQ,YACRrB,MAAM,UACNqM,KAAK,SAJT,4BAcXzK,EAAAC,EAAAC,cAACkO,GAAA,EAAD,KACGpO,EAAAC,EAAAC,cAACob,GAAA,EAAD,CACIC,WAAS,EACTjb,QAAS,EACTkb,eAAe,SACf1Y,WAAW,UAGXy9B,GAAM33B,IAAI,SAACE,EAAEsM,GAAH,OACNpV,EAAAC,EAAAC,cAACob,GAAA,EAAD,CACInQ,IAAKiK,EACLgO,MAAI,EAACJ,GAAI,GACTG,GAAI,EAAGF,GAAI,GAEfjjB,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAO/V,GAAI4/B,IACPngC,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYH,MAAO7E,GAAYuB,QAAQ,MAAMqJ,EAAEa,OAC/C3J,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAACR,OAAQ,MAChBuG,EAAE7F,MAEPjD,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aACfqJ,EAAE23B,YAUtBzgC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOE,GAAI,CAAC+K,GAAG,IACXtL,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAO/V,GAAI8/B,IACPrgC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOC,QAAS,GACZN,EAAAC,EAAAC,cAAA,OACC6C,MAAOu9B,GACPt9B,IAAKi+B,OAENjhC,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,0RAMRO,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAO/V,GAAI8/B,IACPrgC,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAOC,QAAS,GACZN,EAAAC,EAAAC,cAAA,OACC6C,MAAOu9B,GACPt9B,IAAKk+B,OAENlhC,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAYzD,QAAQ,aAApB,0VAOZO,EAAAC,EAAAC,cAACG,GAAA,EAAD,CACGwC,UAAU,MACVvC,QAAS,EACTkb,eAAe,UAEfxb,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,WACL5C,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACIxM,QAAQ,YACRrB,MAAM,UACNqM,KAAK,SAHT,6BAQJzK,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,GAAG,UACL5C,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CACIxM,QAAQ,YACRrB,MAAM,UACNqM,KAAK,SAHT,4CCnJV02B,GAAe,SAAA5hC,GAAuC,IAAzB6hC,EAAyB7hC,EAApCyO,UAAyByD,EAAWxS,OAAAoiC,EAAA,EAAApiC,CAAAM,EAAA,eACtD+I,EAAOrD,qBAAWT,IAExB,OAEMxE,EAAAC,EAAAC,cAACy4B,GAAA,MAAD15B,OAAA7C,OAAA,CACEklC,OAAQ,SAAAxhC,GAAK,OACXwI,EAAKxJ,MAAM4F,SACT1E,EAAAC,EAAAC,cAACkhC,EAActhC,GAEfE,EAAAC,EAAAC,cAACy4B,GAAA,SAAD,CAAU/1B,GAAG,aAGb6O,KAON8vB,GAAqB,SAAAze,GAAuC,IAAzBse,EAAyBte,EAApC9U,UAAyByD,EAAWxS,OAAAoiC,EAAA,EAAApiC,CAAA6jB,EAAA,eAC1Dxa,EAAOrD,qBAAWT,IAExB,OACAxE,EAAAC,EAAAC,cAACy4B,GAAA,MAAD15B,OAAA7C,OAAA,CACEklC,OAAQ,SAAAxhC,GAAK,OACVwI,EAAKxJ,MAAM4F,UAAY4D,EAAKxJ,MAAM6F,MACjC3E,EAAAC,EAAAC,cAACkhC,EAActhC,GAEfE,EAAAC,EAAAC,cAACy4B,GAAA,SAAD,CAAU/1B,GAAG,aAGb6O,KAuDO+vB,GAjDF,kBAEXxhC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACy4B,GAAA,MAAD,CAAO8I,OAAK,EAAChD,KAAK,IAAIzwB,UAAW+yB,KACjC/gC,EAAAC,EAAAC,cAACwhC,GAAD,KACA1hC,EAAAC,EAAAC,cAACyhC,GAAD,KACA3hC,EAAAC,EAAAC,cAAC0hC,GAAD,KACA5hC,EAAAC,EAAAC,cAAC2hC,GAAD,KAEE7hC,EAAAC,EAAAC,cAACy4B,GAAA,OAAD,KACA34B,EAAAC,EAAAC,cAACy4B,GAAA,MAAD,CAAO8F,KAAK,UAAUzwB,UAAWysB,KACjCz6B,EAAAC,EAAAC,cAACy4B,GAAA,MAAD,CAAO8F,KAAK,SAASzwB,UAAWurB,KAE5Bv5B,EAAAC,EAAAC,cAAC4hC,GAAD,CACIL,OAAK,EACLhD,KAAK,aACLzwB,UAAWme,KAEfnsB,EAAAC,EAAAC,cAAC4hC,GAAD,CACIL,OAAK,EACLhD,KAAK,aACLzwB,UAAW6H,KAGf7V,EAAAC,EAAAC,cAAC6hC,GAAD,CACEN,OAAK,EACLhD,KAAK,qBACLzwB,UAAWuqB,KAEbv4B,EAAAC,EAAAC,cAAC6hC,GAAD,CACAN,OAAK,EACLhD,KAAK,QACLzwB,UAAW6vB,aCrFRmE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA7kC,EAAA,GAAAH,KAAAglC,EAAAC,KAAA,YAAqBjlC,KAAK,SAAAoC,GAAiD,IAA9C8iC,EAA8C9iC,EAA9C8iC,OAAQC,EAAsC/iC,EAAtC+iC,OAAQC,EAA8BhjC,EAA9BgjC,OAAQC,EAAsBjjC,EAAtBijC,OAAQC,EAAcljC,EAAdkjC,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCAdS,IAASpB,OAEPthC,EAAAC,EAAAC,cAACF,EAAAC,EAAM0iC,WAAP,KAEI3iC,EAAAC,EAAAC,cAAC0iC,GAAD,OAGJrG,SAASW,eAAe,SAM1B8E,0BCpBAa,EAAAC,QAAiBX,EAAAj1B,EAAuB,kECAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,0ECAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,0DCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,+ECAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,6DCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,6DCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,2DCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,uDCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,wDCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,2DCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB,0DCAxC21B,EAAAC,QAAiBX,EAAAj1B,EAAuB","file":"static/js/main.fa51d0fa.chunk.js","sourcesContent":["\r\nconst ORIGIN_HOST = process.env.NODE_ENV == \"development\" ? \"http://localhost:3000\" : \"https://api.queen-of-time.com\"\r\n\r\nconst DEFAULT_API_HOST = `${ORIGIN_HOST}/api/v1`\r\nconsole.log(process.env.NODE_ENV)\r\n//----------------get--------------------\r\n\r\nexport const employeesList = \r\n`${DEFAULT_API_HOST}/employees`\r\n\r\nexport const submittedShiftList = (period) =>\r\n`${DEFAULT_API_HOST}/organizations/employees_shifts?period[]=${period[0]}&period[]=${period[1]}`\r\n\r\nexport const shiftPath = `${DEFAULT_API_HOST}/employees/shifts`\r\n\r\nexport const myShifts = (period) =>\r\n`${DEFAULT_API_HOST}/employees/shifts?period[]=${period[0]}&period[]=${period[1]}`\r\n\r\n\r\n\r\nexport const unapprovedShifts =\r\n`${DEFAULT_API_HOST}/organizations/employees_unapproved_shifts`\r\n\r\n\r\nexport const assignMember = (date) => \r\n`${DEFAULT_API_HOST}/employees/shifts/assign_member/${date}`\r\n\r\n\r\nexport const calendarList =  \r\n`${DEFAULT_API_HOST}/organizations/calendars`\r\n\r\n\r\nexport const manageAttendance = \r\n`${DEFAULT_API_HOST}/organizations/manage_timestamps`\r\n\r\n\r\nexport const attendanceList = \r\n`${DEFAULT_API_HOST}/employees/timestamps`\r\n\r\n\r\nexport const notificationList =  \r\n`${DEFAULT_API_HOST}/employees/notifications`\r\n\r\n\r\nexport const initialNotifications = \r\n`${DEFAULT_API_HOST}/employees/initial_notifications`\r\n\r\n\r\nexport const allNotifications = \r\n`${DEFAULT_API_HOST}/employees/notifications/all_notifications`\r\n\r\n\r\n\r\nexport const timestampStandby =\r\n`${DEFAULT_API_HOST}/employees/timestamps/new`\r\n\r\n\r\nexport const roomList = \r\n`${DEFAULT_API_HOST}/rooms`\r\n\r\n\r\nexport const inviteEmployees = \r\n`${DEFAULT_API_HOST}/rooms/invite_employees`\r\n\r\n\r\nexport const messageList = (room_id) =>\r\n`${DEFAULT_API_HOST}/rooms/${room_id}/messages`\r\n\r\n\r\nexport const newProfile =\r\n`${DEFAULT_API_HOST}/profile_setting`\r\n\r\n\r\nexport const newOrgConfig =\r\n`${DEFAULT_API_HOST}/org_config_setting`\r\n\r\n\r\n\r\nexport const taskList = \r\n`${DEFAULT_API_HOST}/organizations/tasks`\r\n\r\n\r\n\r\n\r\n//----------------post-------------------\r\n\r\n\r\nexport const newSession =\r\n`${DEFAULT_API_HOST}/login`\r\n\r\n\r\nexport const newEmployee = \r\n`${DEFAULT_API_HOST}/employees`\r\n\r\nexport const newOrganization = \r\n`${DEFAULT_API_HOST}/organizations`\r\n\r\nexport const newCalendar = \r\n`${DEFAULT_API_HOST}/organizations/calendars`\r\n\r\nexport const newShifts =\r\n`${DEFAULT_API_HOST}/employees/shifts/new`\r\n\r\nexport const submitShifts =\r\n`${DEFAULT_API_HOST}/employees/shifts/submit_shifts`\r\n\r\n\r\n\r\nexport const newTimestamp =  \r\n`${DEFAULT_API_HOST}/employees/timestamps`\r\n\r\n\r\nexport const newNotification = \r\n`${DEFAULT_API_HOST}/employees/notifications`\r\n\r\n\r\nexport const newMessage =\r\n`${DEFAULT_API_HOST}/messages`\r\n\r\n\r\nexport const assign =\r\n`${DEFAULT_API_HOST}/employees/shifts/assign`\r\n\r\n\r\n\r\n\r\n//----------------patch-------------------\r\n\r\nexport const modulateTimestamp = \r\n`${DEFAULT_API_HOST}/employees/timestamps/modulate_timestamps`\r\n\r\n\r\nexport const approveTimestamp =\r\n`${DEFAULT_API_HOST}/timestamps/approve`\r\n\r\n\r\nexport const updateCalendar = (eventId) => \r\n`${DEFAULT_API_HOST}/organizations/calendars/${eventId}`\r\n\r\nexport const updateNotification =\r\n`${DEFAULT_API_HOST}/employees/notifications/update_notification_read`\r\n\r\n\r\nexport const determineShift =\r\n`${DEFAULT_API_HOST}/employees/shifts/determine_shifts`\r\n\r\n\r\nexport const updateProfile =\r\n`${DEFAULT_API_HOST}/update_profile`\r\n\r\n\r\nexport const updateOrgConfig =\r\n`${DEFAULT_API_HOST}/update_org_config`\r\n\r\n\r\nexport const updateTask =\r\n`${DEFAULT_API_HOST}/organizations/tasks/update_tasks`\r\n\r\n\r\n\r\n//----------------delete-------------------\r\n\r\n\r\nexport const removeEmployee = (Id) => \r\n`${DEFAULT_API_HOST}/employees/${Id}`\r\n\r\n\r\n\r\nexport const removeSession =\r\n`${DEFAULT_API_HOST}/logout`\r\n\r\n\r\nexport const deleteCalendar = (Id) => \r\n`${DEFAULT_API_HOST}/organizations/calendars/${Id}`\r\n\r\n\r\nexport const removeShift = (Id) => \r\n`${DEFAULT_API_HOST}/employees/shifts/${Id}`\r\n\r\n\r\nexport const removeMessage = (room_id, id) => \r\n`${DEFAULT_API_HOST}/rooms/${room_id}/messages/${id}`\r\n\r\n\r\n\r\n\r\n\r\n\r\n//---------------------------------\r\nexport const currentSession = \r\n`${DEFAULT_API_HOST}/check_session`\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { employeesList, initialNotifications, newEmployee, removeEmployee } from \"../urls/urlList\"\r\n\r\nexport const fetchEmployees = () => {\r\n    return axios.get(employeesList)\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\n\r\nexport const sendEmployeeParams = (params) => {\r\n    return axios.post(newEmployee,{employees: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\n\r\n\r\nexport const fetchInitialNotifications = () => {\r\n    return axios.get(initialNotifications)\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\nexport const deleteEmployee = (id) => {\r\n    return axios.delete(removeEmployee(id))\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n\r\n}\r\n\r\n\r\n\r\n","import DefaultImage from \"../images/employee-default.jpg\"\r\n\r\nexport const SiteName = \"Queen of Time\"\r\nexport const REQUEST_STATUS = {\r\n    START: \"START\",\r\n    LOADING: \"LOADING\",\r\n    POST: \"POST\",\r\n    OK: \"OK\"\r\n}\r\n\r\n\r\nexport const SliderScales = [\r\n    {\r\n        value: 9,\r\n        label: \"9時\"\r\n    },\r\n    {\r\n        value: 12,\r\n        label: \"12時\"\r\n    },\r\n    {\r\n        value: 15,\r\n        label: \"15時\"\r\n    },\r\n    {\r\n        value: 18,\r\n        label: \"18時\"\r\n    },\r\n    {\r\n        value: 20,\r\n        label: \"20時\"\r\n        }\r\n];\r\n\r\nexport const dayOfWeek = [ \"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\" ];\r\n\r\nexport const BUSSINESS_HOUR = (open,close) => \r\n( {\r\n    early_time: [open,9],\r\n    mid_time: [10, 16],\r\n    late_time: [17,close]\r\n  }\r\n)\r\n\r\n//-----------------style-------------------\r\nexport const CONFIRMED_COLOR = \"green\"\r\nexport const UNCONFIRMED_COLOR = \"gray\"\r\n\r\nexport const BASE_STYLE = {\r\n    backgroundColor: \"royalblue\",\r\n    color: \"white\"\r\n}\r\nexport const STYLE_2 = {\r\n    backgroundColor: \"ivory\"\r\n}\r\n\r\nexport const LIGHT_GRAY = \"rgb(130,130,130)\"\r\n\r\n//--------aws---------------\r\n\r\nexport const S3_ORIGIN = \"https://qot-images.s3.ap-northeast-1.amazonaws.com/\"\r\n\r\nexport const imageSrc = (elm) => (\r\n    elm && (elm.image ? (S3_ORIGIN + elm.image) : DefaultImage)\r\n)","import { REQUEST_STATUS } from \"../components/const\";\r\n\r\n\r\nexport const initialState = {\r\n    fetchState: REQUEST_STATUS.START,\r\n    employeeList :[]\r\n}\r\n\r\nexport const employeesReducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case \"FETCHING\":\r\n            return {\r\n                ...state,\r\n                fechState: REQUEST_STATUS.LOADING,\r\n            };\r\n        case \"POST\":\r\n            return {\r\n                ...state,\r\n                fechState: REQUEST_STATUS.POST,\r\n            };\r\n        case \"FETCH_END\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                employeeList: action.payload\r\n            };\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\n\r\nexport const SharedSnackbar = ({open,handleClose, variant, content}) => {\r\n \r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n  return (\r\n    <Stack spacing={2} sx={{ zIndex:3 }}>\r\n      <Snackbar \r\n        open={open} \r\n        autoHideDuration={6000}  \r\n        onClose={()=> handleClose()}\r\n        anchorOrigin= {{vertical: 'bottom',horizontal: 'left'}}\r\n        >\r\n        <Alert  severity={variant} sx={{ width: '100%' }}>\r\n          {content}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Stack>\r\n  );\r\n}","import React from \"react\";\r\nimport { createContext, useState } from \"react\";\r\nimport { SharedSnackbar } from \"../components/shared/SharedSnackbar\";\r\n\r\nexport const SnackbarContext = createContext();\r\n\r\nconst initialState = {\r\n  open: false,\r\n  variant: \"\",\r\n  content: \"\"\r\n}\r\n\r\n\r\nexport const SnackbarProvider = ({children}) => {\r\n\r\n  const [snackbar, setSnackBar] = useState(initialState);\r\n\r\n   \r\n  const handleClose = () => {\r\n    setSnackBar({...snackbar,open: false})\r\n  }\r\n\r\n  return (\r\n      <SnackbarContext.Provider value={{\r\n          setSnackBar: setSnackBar\r\n      }}>\r\n          {children}\r\n          <SharedSnackbar\r\n          open={snackbar.open}\r\n          handleClose={handleClose}\r\n          variant={snackbar.variant} \r\n          content={snackbar.content} \r\n    />\r\n      </SnackbarContext.Provider>\r\n  )\r\n}\r\n  ","import React, { createContext, useState } from \"react\";\r\n\r\nexport const ConfigContext = createContext();\r\n\r\n\r\nexport const ConfigProvider = ({children}) => {\r\n\r\n  const [params, setParams] = useState({open:9,close:18});\r\n\r\n   \r\n  return (\r\n      <ConfigContext.Provider value={{\r\n          params: params,\r\n          setParams: setParams\r\n      }}>\r\n          {children}\r\n      </ConfigContext.Provider>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\naxios.defaults.xsrfCookieName = 'CSRF-TOKEN'\r\naxios.defaults.xsrfHeaderName = 'X-CSRF-Token'\r\naxios.defaults.withCredentials = true\r\n\r\nexport default axios","import React from \"react\";\r\nimport { CircularProgress, Stack, Typography } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\"\r\nimport icon from \"../../images/icon.png\"\r\nimport { LIGHT_GRAY, SiteName } from \"../const\"\r\n\r\nconst circleStyle = {\r\n    position: 'absolute',\r\n    height: 80,\r\n    width: 80,\r\n    top:  \"calc(50% - 40px)\",\r\n    left: \"calc(50% - 40px)\",\r\n    color: \"gray\"\r\n}\r\n\r\nexport const MainLogo = () => (\r\n    <Link to=\"/\">\r\n        <Stack\r\n        direction=\"row\" \r\n        alignItems=\"flex-end\"\r\n        spacing={2}\r\n        >\r\n            <img style={{width:40, height:50}} src={icon}/>\r\n            <Typography\r\n                style={{color: LIGHT_GRAY}}\r\n                variant=\"h4\"\r\n            >\r\n                {SiteName}\r\n            </Typography>\r\n        </Stack>\r\n    </Link>\r\n)\r\n\r\nconst PageLoadingCircle = () =>(\r\n    <CircularProgress\r\n        style={circleStyle}\r\n        color=\"inherit\"\r\n    />\r\n)\r\n\r\nexport { PageLoadingCircle }","import React, {createContext, useState } from \"react\";\r\n\r\nexport const BadgeContext = createContext();\r\n\r\nconst initialState = {\r\n  chat: 0,\r\n  notification: 0,\r\n  shift: 0,\r\n  calendar: 0,\r\n  task: 0\r\n}\r\n\r\n\r\n// -------------------login-------------\r\n\r\nexport const BadgeProvider = ({children}) => {\r\n\r\n  const [badge, setBadge] = useState(initialState);\r\n   \r\n\r\n  return (\r\n      <BadgeContext.Provider value={{\r\n          badge,\r\n          setBadge: setBadge\r\n      }}>\r\n          {children}\r\n      </BadgeContext.Provider>\r\n  )\r\n}","import React from \"react\";\r\nimport { Stack, Typography } from \"@mui/material\";\r\nimport icon from \"../../images/icon.png\"\r\nimport { STYLE_2 } from \"../const\";\r\n\r\nconst iconSize = 90;\r\nconst iconArea = {\r\n\ttop: `calc(40% - (${iconSize}px/2)`,\r\n\tmaxWidth: 800,\r\n\tmaxHeight:500,\r\n\tmargin: \"auto\",\r\n\tpadding: 120,\r\n\tborder: \"20px double royalblue\",\r\n\tborderRadius: 5\r\n\r\n}\r\nexport const InitialLoading = () => (\r\n\r\n\t\t<div style={{padding:24}}>\r\n\t\t<Stack style={{...iconArea, ...STYLE_2}} spacing={3} alignItems=\"center\">\r\n\t\t<img \r\n\t\t\tstyle={{animation: \"poping 1.3s infinite\"}}\r\n\t\t\tsrc={icon} width={iconSize} height={iconSize}\r\n\t\t />\r\n\t\t <div>\r\n\t\t\t<div id=\"floatBarsG\">\r\n\t\t\t\t<div id=\"floatBarsG_1\" className=\"floatBarsG\"></div>\r\n\t\t\t\t<div id=\"floatBarsG_2\" className=\"floatBarsG\"></div>\r\n\t\t\t\t<div id=\"floatBarsG_3\" className=\"floatBarsG\"></div>\r\n\t\t\t\t<div id=\"floatBarsG_4\" className=\"floatBarsG\"></div>\r\n\t\t\t\t<div id=\"floatBarsG_5\" className=\"floatBarsG\"></div>\r\n\t\t\t\t<div id=\"floatBarsG_6\" className=\"floatBarsG\"></div>\r\n\t\t\t\t<div id=\"floatBarsG_7\" className=\"floatBarsG\"></div>\r\n\t\t\t\t<div id=\"floatBarsG_8\" className=\"floatBarsG\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<Typography variant=\"h5\">Just a moment please…</Typography>\r\n\r\n\r\n\r\n\r\n\t\t</Stack>\r\n\r\n\t\t\r\n\t\t</div>\r\n\r\n\t\t\r\n\t\r\n\t)\r\n\t\r\n\r\n\r\n","import React, { Component, useContext, useEffect, useState } from \"react\";\r\nimport { checkSession, createSession, deleteSession } from \"../apis/session\";\r\nimport { Redirect, useHistory, withRouter } from \"react-router-dom\";\r\nimport { createContext } from \"react\";\r\nimport { CircularProgress, LinearProgress, Stack } from \"@mui/material\";\r\nimport { PageLoadingCircle } from \"../components/shared/commonPatrs\";\r\nimport { BadgeContext } from \"./badge\";\r\nimport { ConfigContext } from \"./config\";\r\nimport { InitialLoading } from \"../components/signin/initialLoading\";\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst initialState = {\r\n  loading: \"loading\",\r\n  loggedIn: false,\r\n  chief: false,\r\n  name: \"\"\r\n}\r\n\r\n\r\n// const initialState = {\r\n//   loading: \"end\",\r\n//   loggedIn: true,\r\n//   chief: true,\r\n//   name: \"\"\r\n// }\r\n\r\n\r\n// -------------------login---------\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const history = useHistory();\r\n\r\n  const badge = useContext(BadgeContext);\r\n  const orgConfig = useContext(ConfigContext);\r\n  \r\n    const login = (params) =>{\r\n        setState({loading: \"initialLoading\"})\r\n        createSession(params)\r\n        .then(res => {\r\n           switchLogin(res.data)\r\n          }\r\n        )\r\n        .catch((e) => {\r\n          console.log(e)\r\n          switch(e.response.status){\r\n          case 401:\r\n            history.push(\"/login\")\r\n            alert(\"メールアドレスかパスワードが間違っています\")\r\n            break\r\n          case 403:\r\n            history.push(\"/login\")\r\n            alert(\"既にログインされます\")\r\n            break\r\n          case 500:\r\n            history.push(\"/login\")\r\n            alert(\"サーバーエラーが発生しました\")\r\n            break\r\n          }\r\n          setState({loading: \"end\"})\r\n        })\r\n\r\n    }\r\n\r\n     const logout = () => {\r\n        deleteSession()\r\n        .then(res => {\r\n          if(res.status == 200)\r\n            {\r\n            history.push(\"/login\")\r\n            setState({\r\n              loggedIn: false,\r\n              loading: \"end\"})\r\n            sessionStorage.clear()\r\n           }\r\n        }\r\n        )\r\n    }\r\n\r\n    const sessionForbidden = () => {\r\n      setState({\r\n        loggedIn:false,\r\n        loading: \"end\"})\r\n      sessionStorage.clear()\r\n      alert(\"ログイン情報が確認できません\")\r\n    }\r\n\r\n    const switchLogin = (data) => {\r\n      if(data.chief){\r\n        initialSetting(data)\r\n        history.push(\"/Dashboard\")\r\n      }else{\r\n        setState({\r\n          loading: \"end\",\r\n          loggedIn: true,\r\n          name: data.name,\r\n          chief: data.chief})\r\n        history.push(\"/employeeDashboard\")\r\n      }\r\n\r\n    }\r\n\r\n    const initialSetting = (data) => {\r\n      setState({...state,\r\n        loading: \"end\",\r\n        loggedIn: true,\r\n        name: data.name,\r\n        chief: data.chief\r\n      }) \r\n      if(!data.chief){return}\r\n      orgConfig.setParams({\r\n        ...data.config,\r\n        orgName: data.orgName,\r\n        orgAddress: data.orgAddress\r\n      })\r\n      badge.setBadge(data.badges)\r\n\r\n    }\r\n\r\n      \r\n  useEffect(() => {\r\n    checkSession()\r\n    .then(res => {\r\n      initialSetting(res.data)\r\n    })\r\n    .catch((e) => {\r\n      if(typeof(e) == \"String\"){return}\r\n      console.log(e)\r\n      if (e.response.status === 403) {\r\n       sessionForbidden()\r\n      } else {\r\n        throw e;\r\n      }\r\n    })\r\n  },[])\r\n\r\n  const SwitchRender = () => {\r\n    switch(state.loading){\r\n      case \"loading\":\r\n        return <PageLoadingCircle/>\r\n      case \"end\":\r\n       return children\r\n      case \"initialLoading\":\r\n        return <InitialLoading/>\r\n      }\r\n  }\r\n\r\n    return (\r\n      <AuthContext.Provider value={{\r\n        state: state,\r\n        setState: setState,\r\n        login: login,\r\n        logout: logout,\r\n        sessionForbidden: sessionForbidden\r\n      }}>\r\n        <SwitchRender/>      \r\n      </AuthContext.Provider>\r\n\r\n    )\r\n  }\r\n\r\n","\r\nimport axios from \"../lib/axios\"\r\nimport { currentSession, newSession, removeSession } from \"../urls/urlList\"\r\n\r\nexport const createSession = (params) => {\r\n\r\n    return axios.post(newSession, {session: params})\r\n    .then(res => res)\r\n    .catch((e) =>   {throw e;})\r\n\r\n}\r\n\r\n\r\nexport const deleteSession = () => {\r\n\r\n    return axios.delete(removeSession)\r\n    .then(res => res)\r\n    .catch(e => console.log(e))\r\n}\r\n\r\n\r\nexport const checkSession = () => {\r\n    return axios.get(currentSession)\r\n    .then(res => {\r\n        return res\r\n      })\r\n    .catch((e) =>   {\r\n        throw e;})\r\n}","\r\nimport React,{ useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { ConfigContext } from '../../contexts/config';\r\nimport { imageSrc, REQUEST_STATUS, S3_ORIGIN } from \"../../components/const\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Avatar, ButtonBase, FormControl, IconButton, Input, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select, Stack } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { AuthContext } from '../../contexts/auth';\r\n\r\nexport const NewEmployeeForm = ({\r\n    sendParams,\r\n    requestStatus,\r\n    profile={profile:\"\"}\r\n}) => {\r\n\r\n    \r\n  const { register, handleSubmit,setError,clearErrors,  formState: { errors } } = useForm();\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [age, setAge] = useState(20);\r\n  const [validate, setValidates] = useState(false); \r\n  const [password, setPassword] = useState({password:\"\",passwordConfirm:\"\"});\r\n  \r\n  const auth = useContext(AuthContext);\r\n  \r\n  const uploadImage = useRef();\r\n\r\n    \r\n  const ageList = [...Array(47)].map((_, i) => (i + 18)) \r\n\r\n  const handleChange = (e) => {\r\n    setPassword({...password,[e.target.name]: e.target.value});\r\n  }\r\n\r\n const handleUpload = (e) => {\r\n      const img = e.target.files[0]\r\n      register('image').onChange(e)\r\n      uploadImage.current.title = img.name;\r\n      const reader = new FileReader();      \r\n      reader.onload = (event) => {\r\n        uploadImage.current.setAttribute('src', event.target.result)\r\n      };\r\n      reader.readAsDataURL(img);\r\n      \r\n }\r\n \r\n  useEffect(()=> {\r\n   if(password.password !== password.passwordConfirm){\r\n     setValidates(false)\r\n     setError(\"password\",  { type: 'notMatch', message: \"パスワードが一致しません。\" })\r\n   }else{\r\n     clearErrors('password');\r\n     setValidates(true)\r\n   }\r\n }\r\n ,[password]\r\n )\r\n\r\n\r\nreturn (\r\n\r\n    <form onSubmit={handleSubmit(sendParams)}>\r\n    <Stack>\r\n    <label style={{margin:\"auto\"}}>\r\n            <Input\r\n                {...register('image')} \r\n                style={{display: \"none\"}} \r\n                accept=\"image/*\" \r\n                type=\"file\"\r\n                onChange={e =>handleUpload(e)}\r\n            />\r\n        \r\n            <img \r\n                style={{height: 100, width:100}}\r\n                ref={uploadImage} \r\n                src={imageSrc(profile)}\r\n            />    \r\n    </label> \r\n    <input \r\n      {...register('imageUrl')}  \r\n      value={profile.image}\r\n      type=\"hidden\"  \r\n      defaultValue={profile.profile && profile.profile.image}\r\n    />\r\n\r\n    <TextField\r\n       {...register('name',{ required: \"※氏名が入力されてません\"})} \r\n        required\r\n        disabled={!auth.state.chief && auth.state.loggedin}\r\n        label=\"氏名\"\r\n        defaultValue={profile && profile.name}\r\n        className=\"mui-input\"\r\n        size=\"small\"\r\n        margin=\"normal\"\r\n      />\r\n      <span style={{color: \"red\"}}>{errors.name && errors.name.message}</span>\r\n      \r\n      <Stack direction=\"row\" spacing={4}>\r\n      \r\n      <TextField\r\n       {...register('telephone',{ required: \"※電話番号が入力されてません\"})} \r\n        required\r\n        label=\"電話番号\"\r\n        defaultValue={profile && profile.profile.telephone}\r\n        className=\"mui-input\"\r\n        variant=\"filled\"\r\n      />\r\n       <span style={{color: \"red\"}}>{errors.tel && errors.tel.message}</span>\r\n\r\n      <Box sx={{width:\"100px\"}}>\r\n      <FormControl fullWidth>\r\n      <InputLabel >年齢</InputLabel>\r\n      <Select\r\n         {...register('age',{ required: \"※年齢が入力されてません\"})} \r\n         label=\"age\"\r\n         defaultValue={profile && profile.profile.age}\r\n         className=\"mui-input\"\r\n         value={age}\r\n      >\r\n        {\r\n          ageList.map(v => \r\n            <MenuItem \r\n              key={v} \r\n              value={v}\r\n              onChange={e => setAge(e.target.value)}\r\n              >{v}</MenuItem>\r\n            )\r\n        }\r\n      </Select>\r\n      <span style={{color: \"red\"}}>{errors.age && errors.age.message}</span>\r\n\r\n      </FormControl>\r\n\r\n      </Box>\r\n\r\n      </Stack>\r\n      <TextField\r\n       {...register('email',{\r\n          required: \"※メールアドレスが入力されてません\",\r\n          maxLength: {\r\n            value:60,\r\n            message: \"最大文字数(60文字)を越えています。\"}\r\n          })} \r\n        size=\"large\"\r\n        // required\r\n        type=\"email\"\r\n        variant=\"standard\"\r\n        label=\"メールアドレス\"\r\n        defaultValue={profile.profile && profile.profile.email}\r\n        className=\"mui-input\"\r\n        margin=\"normal\"\r\n      />\r\n      <span style={{color: \"red\"}}>{errors.email && errors.email.message}</span>\r\n\r\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n      <FormControl  sx={{my:2}}>\r\n      <InputLabel >パスワード</InputLabel>\r\n      <OutlinedInput\r\n      　　 {...register('password',{\r\n        　　 required: \"※パスワードが入力されてません\",\r\n             minLength: {\r\n               value:8,\r\n               message: \"半角英数字8文字以上で入力してください\"},\r\n              pattern: {\r\n              value: /^[a-zA-Z0-9.?/-]{8,24}$/,\r\n              message: 'パスワードの形式が正しくありません',\r\n              }\r\n            })} \r\n          label=\"パスワード\"\r\n          className=\"mui-input\"\r\n          // required\r\n          type={visible ? 'text' : 'password'}\r\n          onChange={handleChange}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onClick={()=>setVisible(!visible)}\r\n                edge=\"end\"\r\n              >\r\n                {visible ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        </FormControl>\r\n        <FormControl>\r\n        <InputLabel>パスワード(確認)</InputLabel>\r\n         <OutlinedInput\r\n          name=\"passwordConfirm\"\r\n          label=\"パスワード(確認)\"\r\n          className=\"mui-input\"\r\n          // required\r\n          type={visible ? 'text' : 'password'}\r\n          onChange={handleChange}\r\n        />\r\n        <span style={{color: \"red\"}}>{errors.password && errors.password.message}</span>\r\n\r\n      </FormControl>\r\n        \r\n      </Stack>\r\n    \r\n\r\n    <Button \r\n      sx={{my:4}}\r\n      // disabled={!validate} \r\n      type=\"submit\"\r\n      variant=\"contained\" \r\n      color=\"success\"\r\n      endIcon={ requestStatus == REQUEST_STATUS.POST?\r\n        <CircularProgress sx={{width: \"1.2rem\", height:\"1.2rem\"}} color=\"inherit\"/>\r\n        :\r\n        <SendIcon />}>\r\n      登 録　\r\n    </Button>\r\n\r\n      \r\n  </Stack>\r\n\r\n  \r\n\r\n  </form>\r\n  \r\n)\r\n\r\n}","import { useEffect, useState, useContext } from \"react\"\r\nimport { ConfigContext } from \"../contexts/config\";\r\n\r\n\r\nconst useTextFilter = (state,param,text) => {\r\n\r\nconst [filtered, setFiltered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!state){return}\r\n    const newList = state.filter((m) => {\r\n      return m[param].toLowerCase().indexOf(text) !== -1 \r\n    });\r\n    setFiltered(newList); \r\n  }, [text]);\r\n    return filtered;\r\n}\r\n\r\nconst useDateFilter = (list, date) => {\r\n \r\n  const [filtered, setFiltered] = useState([]);\r\n  const formattedDate = `${date.getFullYear()}-${( '00' + (date.getMonth()+1)).slice( -2 )}-${('00'+date.getDate()).slice(-2)}`\r\n\r\n  useEffect(() =>{\r\n    const newList = list.filter(elm => elm.date == formattedDate);\r\n    newList.sort((k, v) => k.date - k.date);\r\n    setFiltered(newList);\r\n  },[date,list]\r\n  );\r\n\r\n  return filtered;\r\n}\r\n\r\nconst useMonthFilter = (list, month) => {\r\n \r\n  const [filtered, setFiltered] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    const newList = list.filter(elm => {\r\n      return (new Date(Date.parse(elm.date)).getMonth() + 1) === month;\r\n    })\r\n    newList.sort((a, b) => a.date - b.date);\r\n    setFiltered(newList);\r\n  },[month]\r\n  );\r\n\r\n  return filtered;\r\n}\r\n\r\n\r\n\r\nexport {useTextFilter, useDateFilter, useMonthFilter};","import { Avatar, Button, Divider, IconButton, List, ListItem, ListItemAvatar, ListItemButton, ListItemText, Modal, Skeleton, Stack, TextField, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport React,{ useState } from \"react\"\r\n\r\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\r\nimport { useTextFilter } from \"../../customeHooks/hooks\";\r\n\r\n\r\nconst style =  {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  overflow:\"scroll\",\r\n  height:400,\r\n  width:270, \r\n  transform: 'translate(50%, -50%)',\r\n  bgcolor: 'white',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\n  \r\nconst avatarColor = (name) => {\r\n    let color = '#';\r\n    let hash = 2;\r\n    let i;\r\n    for (i = 0; i < name.length; i += 1) {\r\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n      const value = (hash >> (i * 8)) & 0xff;\r\n      color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n\r\nexport const SelectMember = ({\r\n  \r\n    params,\r\n    setParams,\r\n    fetch\r\n    \r\n}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [member, setMember] = useState();\r\n    // const [filtered, setFiltered] = useState([]);\r\n    const [value, setValue] = useState();\r\n    \r\n   \r\n    const handleOpen = () => {\r\n\r\n        fetch().then(res => {\r\n          if(res.status === 200){setMember(res.data.employees)}\r\n    })\r\n    setOpen(true)\r\n\r\n    }\r\n    \r\n  const filtered = useTextFilter(member,value)\r\n   \r\n  // useEffect(() => {\r\n  //   if (!member){return}\r\n  //   const newList = member.filter((m) => {\r\n  //     return m.name.toLowerCase().indexOf(value) !== -1 \r\n  //   });\r\n  //   setFiltered(newList); \r\n  // }, [value]);\r\n\r\n\r\n\r\n    return (\r\n       <>\r\n        <IconButton\r\n              component=\"span\"\r\n              onClick={()=>handleOpen()}\r\n              >\r\n            <PersonAddAlt1OutlinedIcon />\r\n        </IconButton>\r\n              <Modal open={open}>\r\n           <Box  sx={style}>\r\n              <Button\r\n                  fullWidth\r\n                  variant=\"text\" \r\n                  onClick={()=>setOpen(false)}\r\n                  >\r\n                      閉じる\r\n                  </Button>\r\n                  { member?\r\n                  <List>\r\n                    <ListItem>\r\n                      <TextField \r\n                      fullWidth\r\n                      placeholder=\"検索\"\r\n                      onChange={(e)=> setValue(e.target.value)}\r\n                      />\r\n                    </ListItem>\r\n                  {filtered.length > 0 ?\r\n                 \r\n                    filtered.map(m => (\r\n                    <div key={m.id}>\r\n                    <ListItemButton\r\n                         selected ={params.id===m.id}\r\n                         onClick={()=>{\r\n                            setParams({...params,id:m.id, name:m.name})}\r\n                         }\r\n                        >\r\n                    <ListItemAvatar>\r\n                      <Avatar alt={m.name}  sx={{ bgcolor: avatarColor(m.name) }}>\r\n                        {m.name.slice(0,2)}\r\n                      </Avatar>\r\n                  \r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={m.name}/>\r\n                </ListItemButton>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    </div>\r\n                )\r\n                )\r\n                  :\r\n                  <>\r\n                  {value && <span style={{color: \"red\"}}>見つかりませんでした。</span>}\r\n                  {\r\n                    member.map(m => (\r\n                      <div key={m.id}>\r\n                      <ListItemButton\r\n                           selected ={params.id===m.id}\r\n                           onClick={()=>{\r\n                              setParams({...params,id:m.id, name:m.name})}\r\n                           }\r\n                          >\r\n                      <ListItemAvatar>\r\n                        <Avatar alt={m.name}  sx={{ bgcolor: avatarColor(m.name) }}>\r\n                          {m.name.slice(0,2)}\r\n                        </Avatar>\r\n                    \r\n                      </ListItemAvatar>\r\n                      <ListItemText primary={m.name}/>\r\n                  </ListItemButton>\r\n                      <Divider variant=\"inset\" component=\"li\" />\r\n                      </div>\r\n                  ))\r\n                  \r\n                  \r\n\r\n                  }</>\r\n                 \r\n                  }\r\n                  </List>\r\n                  :\r\n                  [...Array(6).keys()].map(i => \r\n                    <Box key={i} sx={{ height:50 }}>\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                        <Skeleton variant=\"circular\" width={40} height={40} />\r\n                        <div style={{width: `calc(100% - ${60}px)`}}>\r\n                        <Skeleton variant=\"text\" />\r\n                        <Skeleton variant=\"text\" />\r\n                        </div>\r\n\r\n                        </Stack>\r\n                        \r\n                    </Box>\r\n                  )\r\n                }\r\n          </Box> \r\n        \r\n          </Modal>\r\n          </>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport { assign, assignMember, determineShift, myShifts, newShifts, removeShift, shiftPath, submitShifts, submittedShiftList, unapprovedShifts } from \"../urls/urlList\";\r\n\r\nexport const fetchSubmittedShifts = (period) => {\r\n    return axios.get(submittedShiftList(period))\r\n    .then(res => {\r\n        return res\r\n    })\r\n}\r\n\r\nexport const fetchMyShifts = (period) => {\r\n    return axios.get(myShifts(period))\r\n    .then(res => {\r\n        return res\r\n    })\r\n}\r\n\r\nexport const fetchNewShifts = () => {\r\n    return axios.get(newShifts)\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\n\r\nexport const fetchAssignMember = (date) => {\r\n    return axios.get(assignMember(date))\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\nexport const fetchUnapprovedShift = () => {\r\n    return axios.get(unapprovedShifts)\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\n\r\n\r\nexport const sendShifts = (params) => {\r\n    return axios.post(submitShifts,{shifts: params})\r\n    .then(res => {\r\n\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\n\r\nexport const createShift = (params) => {\r\n    params.date = new Date(params.date.getTime()+1000*3600*9)\r\n    return axios.post(shiftPath,{shifts: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n     .catch((e) => {return e})\r\n}\r\n\r\nexport const assignShift = (params) => {\r\n    return axios.post(assign,{shifts: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => {return e})\r\n}\r\n\r\n\r\n\r\nexport const determineShifts = (params) => {\r\n    console.log(params)\r\n    return axios.patch(determineShift,{shifts: params})\r\n    .then(res =>{\r\n        return res})\r\n     .catch((e) => {return e})\r\n}\r\n\r\nexport const deleteShift = (id) => {\r\n    return axios.delete(removeShift(id))\r\n    .then(res =>{\r\n        return res})\r\n     .catch((e) => {return e})\r\n}","import { dayOfWeek } from \"../components/const\";\r\n\r\nconst getMonAndDate = (date, separater=\"/\") => {\r\n  return `${date.getMonth() + 1}${separater}${date.getDate()}`\r\n}\r\n\r\nconst formattedTime = (param, text) => {\r\n  if (!param){return null}\r\n\r\n  var date = new Date(param * 1000);\r\n  var hour = date.getHours();\r\n  var minute = date.getMinutes();\r\n\r\n  return (`${text || \"\"}${hour.toString().padStart(2,\"0\")}:${minute.toString().padStart(2,\"0\")}`)\r\n}\r\n\r\nconst formattedDate = (date) => \r\n`${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2,\"0\")}-${date.getDate().toString().padStart(2,\"0\")}`\r\n\r\nconst renderMonth = (period) => {\r\n  const days = [];\r\n  const year = period[0],\r\n  　　　 month = period[1]-1\r\n  const lastDay = new Date(year, month,0);\r\n\r\n  for(let i=1;i<=lastDay.getDate();i++){\r\n    const targetDay = new Date(year, month,i);\r\n   \r\n    days.push(\r\n      {id: i,\r\n       date: targetDay,\r\n       dow:`(${dayOfWeek[targetDay.getDay()]})`,\r\n       minWidth: 100\r\n      }\r\n    )\r\n  }\r\n\r\n  return days;\r\n\r\n\r\n}\r\n\r\nexport {getMonAndDate, formattedTime, formattedDate, renderMonth};","import React, {useEffect, useState, useContext} from \"react\";\r\nimport { Button, CircularProgress, Slider, Stack, TextField, Typography } from \"@mui/material\";\r\n\r\nimport { SliderScales } from \"../../components/const\";\r\nimport { SelectMember } from \"../chats/SelectMember\";\r\nimport { fetchAssignMember } from \"../../apis/shifts\";\r\nimport { getMonAndDate } from \"../../lib/calcDate\";\r\n\r\nimport { ConfigContext } from \"../../contexts/config\";\r\n\r\nconst initialState = {\r\n    id:\"\",\r\n    name:\"従業員が選択されてません。\",\r\n    attendance_time: 9,\r\n    leaving_time: 19,\r\n    comment: \"\",\r\n    confirmed: true,\r\n    rest: false\r\n\r\n}\r\n\r\n\r\n    \r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 500,\r\n    maxWidth: \"95%\",\r\n    backgroundColor: 'white',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 2,\r\n  };\r\n  \r\n  \r\nexport const NewShiftForm = ({\r\n    sendShiftParams,\r\n    date,\r\n    loading\r\n\r\n}) => {\r\n\r\n    const [params, setParams] = useState(initialState);\r\n\r\n    const handleChange = (e, newValue) => {\r\n        setParams({...params,\r\n            attendance_time: newValue[0],\r\n            leaving_time: newValue[1]})\r\n    }\r\n\r\n   const  handleSubmit = (e) => {\r\n        setParams({...params, date: date})\r\n        e.preventDefault()\r\n        sendShiftParams(params)\r\n    }\r\n\r\n    const orgConfig = useContext(ConfigContext);\r\n     \r\n    useEffect(() => setParams({...params, date: date}),[date])\r\n\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n        <Stack style={{width:\"90%\", margin:\"auto\"}} spacing={2}>\r\n            <label>\r\n            <SelectMember\r\n            style={style}\r\n            params={params}\r\n            setParams={setParams}\r\n            fetch={()=>fetchAssignMember(date)}\r\n        />\r\n\r\n        </label>\r\n          <Typography variant=\"h6\">\r\n            {params.name}\r\n        </Typography>\r\n         <Typography variant=\"h6\">\r\n            {getMonAndDate(date,\"/\")}\r\n        </Typography>\r\n\r\n        <Slider\r\n            value={[params.attendance_time, params.leaving_time]}\r\n            onChange={handleChange}\r\n            marks={SliderScales}\r\n            valueLabelDisplay=\"auto\"\r\n            min={orgConfig.params.open}\r\n            max={orgConfig.params.close}\r\n            step={0.5}\r\n        />\r\n\r\n        <TextField  \r\n            margin=\"normal\"\r\n            fullWidth\r\n            defaultValue=\"備考\"\r\n            multiline\r\n            rows={3}\r\n            onChange={(e)=>setParams({...params,comment: e.target.value})}\r\n        />\r\n\r\n        <Button\r\n            fullWidth\r\n            disabled={params.id ===\"\"}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            endIcon={loading? \r\n                <CircularProgress style={{width:\"1.2rem\", height: \"1.2rem\"}}/> :\r\n                 \"\"}\r\n        >\r\n            シフトを作成する\r\n        </Button>\r\n       \r\n\r\n        </Stack>\r\n\r\n\r\n        </form>\r\n    </>\r\n       \r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport { inviteEmployees, roomList } from \"../urls/urlList\"\r\n\r\nexport const fetchRooms = () => {\r\n    return axios.get(roomList)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n\r\nexport const fetchInviteEmployees = () => {\r\n    return axios.get(inviteEmployees)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n\r\n\r\nexport const createRoom = (params) => {\r\n    return axios.post(roomList,{rooms: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}","import React from \"react\";\r\nimport { Button, Stack, Typography } from \"@mui/material\";\r\nimport { fetchInviteEmployees } from \"../../apis/room\"\r\nimport { SelectMember } from \"./SelectMember\"\r\nimport { useState, useContext } from \"react\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\n\r\nconst initialState = {id: \"\"};\r\n\r\nexport const NewRoomForm = ({\r\n    sendRoomParams,\r\n    loading,\r\n    setLoading\r\n}) => {\r\n\r\n    const [params, setParams] = useState(initialState);\r\n    const sb = useContext(SnackbarContext)\r\n  \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        if (!params.id){\r\n          sb.setSnackBar({open: true, variant:\"error\",content:\"従業員が選択されてません。\"})\r\n          setLoading(false)\r\n          return false\r\n        }\r\n        sendRoomParams(params)\r\n        setParams(initialState)\r\n\r\n    }\r\n\r\n    return (\r\n        <>   \r\n         <Stack style={{width:\"60%\", height: \"100%\",margin:\"0 auto\"}} spacing={2}>\r\n        <form onSubmit={handleSubmit} >\r\n          <Typography variant=\"subtitle\">\r\n            個別チャットを作成します。\r\n          </Typography>\r\n        <h3>{params.name? params.name : \"従業員を選択\"}</h3>\r\n\r\n        <SelectMember\r\n            params={params}\r\n            setParams={setParams}\r\n            fetch={fetchInviteEmployees}\r\n             />    \r\n            \r\n\r\n          <Button\r\n            fullWidth\r\n            color=\"primary\" \r\n            variant=\"contained\" \r\n            type=\"submit\"\r\n            loading={loading}\r\n          >\r\n              作成\r\n          </Button>\r\n\r\n        \r\n          </form>\r\n\r\n        </Stack>\r\n       \r\n         </>\r\n\r\n    )\r\n}","import { stepButtonClasses } from '@mui/material';\r\nimport AWS from 'aws-sdk';\r\n\r\n\r\nexport const imageUploder = (image, key, sb) => {\r\n   \r\n    // aws setting\r\n    AWS.config.update({\r\n        accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY_ID,\r\n        secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY\r\n    })\r\n\r\n\r\n    const bucket = new AWS.S3({\r\n        params: {Bucket: process.env.REACT_APP_S3_BUCKET},\r\n        region: process.env.REACT_APP_S3_BUCKET_REGION\r\n    })\r\n\r\n  \r\n        const params = {\r\n            Body: image,\r\n            Bucket:  process.env.REACT_APP_S3_BUCKET,\r\n            Key: key\r\n        }\r\n        \r\n        // setUpload(true)\r\n        \r\n        bucket.putObject(params).promise()\r\n        .then(function(data) {\r\n            sb.setSnackBar({open: true, variant: \"success\", content: `プロフィール画像のアップロードに成功しました`})\r\n            return \r\n          }).catch(function(err) {\r\n            sb.setSnackBar({open: true, variant: \"error\", content: `プロフィール画像のアップロードに失敗しました`})\r\n            console.log(err);\r\n            return \r\n          });\r\n}\r\n    ","import React from 'react';\r\n\r\nimport { useState, useContext } from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { sendEmployeeParams } from '../apis/employees';\r\nimport PersonAddAltOutlinedIcon from '@mui/icons-material/PersonAddAltOutlined';\r\n\r\nimport { SnackbarContext } from '../contexts/snackBar';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport { NewEmployeeForm } from '../components/employees/NewEmployeeForm';\r\nimport { NewShiftForm } from '../components/shifts/NewShiftForm';\r\nimport { NewRoomForm } from '../components/chats/NewRoomForm';\r\nimport { createRoom } from '../apis/room';\r\nimport { Box, IconButton, Modal, Step, StepLabel, Stepper, TextField } from '@mui/material';\r\nimport { assignShift } from '../apis/shifts';\r\nimport { imageUploder } from '../lib/imageUploader';\r\n\r\nconst steps = [\r\n  '従業員登録',\r\n  'シフト作成',\r\n  'チャットルーム作成',\r\n];\r\n\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"70%\",\r\n  maxWidth: 500,\r\n  bgcolor: 'white',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 2,\r\n};\r\n\r\n\r\nexport const NewEmployeeModal = ({state, dispatch}) =>{\r\n\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedDate, setDate] = useState(new Date())\r\n  const [stepIndex, setStepIndex] =useState(0)\r\n\r\n  const sb = useContext(SnackbarContext);\r\n \r\n    const sendParams = (params) => {\r\n      try {\r\n        if(params.image){\r\n          const imageUrl = params.name + \"_\" +(new Date()).getTime();\r\n          if(!imageUploder(params.image[0], imageUrl, sb)){\r\n            sb.setSnackBar({open: true, variant:\"error\", content: \"プロフィール画像のアップロードに失敗しました\"})\r\n            // return\r\n          }\r\n          params.image =imageUrl\r\n        \r\n        }\r\n        sendEmployeeParams(params)\r\n        .then(res=> {\r\n          if(res.status !== 201){\r\n            switch(res.status){\r\n              case 422:\r\n                sb.setSnackBar({open: true, variant:\"error\",content:\"このメールアドレスはすでに存在してます\"})\r\n                break\r\n              case 500:\r\n                sb.setSnackBar({open: true, variant:\"error\",content:\"システムエラーが発生しました\"})\r\n                break\r\n            }\r\n            return\r\n          }\r\n\r\n          dispatch({\r\n            type: \"FETCH_END\",\r\n            payload:res.data.employees\r\n          })\r\n          sb.setSnackBar({open: true, variant:\"success\", content: \"従業員を作成しました\"})\r\n          setStepIndex(stepIndex + 1)\r\n      })\r\n      }\r\n      catch(e){console.log(e.message)}\r\n    }\r\n    \r\n    const sendShiftParams = (params) => {\r\n      setLoading(true)\r\n      assignShift(params)\r\n      .then(res => {\r\n          if(res.status !== 201){\r\n              sb.setSnackBar({open: true, variant:\"error\",content:\"エラーが発生しました。\"})\r\n              setOpen(false)\r\n              return\r\n          }\r\n          sb.setSnackBar({open: true, variant:\"success\",content:\"シフトを作成しました。\"})\r\n          setStepIndex(stepIndex + 1)\r\n          \r\n      })\r\n  }\r\n\r\n  const sendRoomParams = (params) => {\r\n     \r\n    createRoom(params)\r\n    .then(res => {\r\n      if(!res.status === 201){\r\n        return false\r\n      }\r\n      setLoading(false)\r\n      sb.setSnackBar({open: true, variant:\"success\",content:\"新しいチャットを作成しました。\"})\r\n    })\r\n\r\n  }\r\n\r\n  const newemp = (\r\n  <NewEmployeeForm\r\n  sendParams={sendParams}\r\n  requestStatus={state.FETCH_STATE}\r\n  setDate\r\n/>\r\n  )\r\n\r\n  const newshift = (\r\n    <Box>\r\n    <IconButton  sx={{float:\"right\"}}> \r\n    <DatePicker\r\n      customInput={\r\n            <DateRangeOutlinedIcon />\r\n      }      \r\n      dateFormat=\"yyyy-MM-dd\"\r\n      selected={selectedDate} \r\n      onChange={(date)=> setDate(date)}\r\n    /> \r\n    </IconButton>\r\n    <Box>\r\n      <NewShiftForm\r\n      sendShiftParams={sendShiftParams}\r\n      date={selectedDate}\r\n      loading={loading}\r\n    />\r\n    </Box>\r\n    <Button \r\n    fullWidth\r\n    onClick={()=>{setStepIndex(stepIndex + 1)}}>スキップ</Button>\r\n  </Box>\r\n  )\r\n\r\n  const newroom = (\r\n    <NewRoomForm\r\n      sendRoomParams={sendRoomParams}\r\n      loading={loading}\r\n      setLoading={setLoading}\r\n      />\r\n  )\r\n\r\n    \r\nconst stepComponents = [ \r\n  newemp,newshift,newroom]\r\n\r\n\r\n    return (\r\n      <>\r\n    \r\n         <Button \r\n          style={{marginLeft: \"auto\"}}\r\n          variant=\"contained\" \r\n          color=\"success\" \r\n          endIcon={<PersonAddAltOutlinedIcon />} \r\n          onClick={() => {setOpen(true)}}\r\n          >\r\n           新規登録\r\n         </Button>\r\n         <Modal\r\n          open={open}\r\n          onClose={()=> setOpen(false)}\r\n          >  \r\n            <Box sx={style}>\r\n                  \r\n            <Stepper activeStep={stepIndex} alternativeLabel>\r\n              {steps.map((label, index) => (\r\n                <Step key={index}>\r\n                  <StepLabel>\r\n                      {label}\r\n                  </StepLabel> \r\n                </Step>\r\n              ))}\r\n              </Stepper>\r\n            {stepComponents[stepIndex]}\r\n          \r\n            </Box>\r\n          </Modal>\r\n      </>\r\n\r\n    )\r\n\r\n}","\r\nimport React, { useEffect, useReducer, useState, useMemo } from \"react\";\r\nimport { deleteEmployee, fetchEmployees } from \"../apis/employees\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport { employeesReducer, initialState} from \"../reducers/empoyees\";\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport { NewEmployeeModal } from \"./NewEmployeeModal\";\r\nimport { Stack, Grow, ImageListItem, ImageListItemBar, IconButton, ButtonBase, Paper, Divider, ListItemButton, ListItemAvatar, Avatar} from \"@mui/material\";\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ListOutlinedIcon from '@mui/icons-material/ListOutlined';\r\n\r\nimport Switch from '@mui/material/Switch';\r\nimport { Box } from \"@mui/system\";\r\nimport Typography from '@mui/material/Typography';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useTextFilter } from \"../customeHooks/hooks\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n//----------------------icons-----------------------\r\n\r\nimport ImageOutlinedIcon from '@mui/icons-material/ImageOutlined';\r\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\r\n\r\nimport { imageSrc, REQUEST_STATUS, S3_ORIGIN, STYLE_2 } from \"../components/const\";\r\n\r\n\r\n\r\nconst steps = [\r\n  'Select master blaster campaign settings',\r\n  'Create an ad group',\r\n  'Create an ad',\r\n];\r\n\r\nconst noSelectedStyle = {\r\n  width:\"100%\",\r\n  textAlign: \"center\"\r\n}\r\n\r\nconst backButtonStyle = {\r\n  postion: \"absolute\",\r\n  bottom: 50,\r\n  left: 20,\r\n  zIndex: 1000\r\n}\r\n\r\nconst displayIconStyle = {\r\n  width:150,\r\n  height:150,\r\n}\r\n\r\nconst deleteMesssage = \"従業員を削除しますか？\\n※関連づくシフト・メッセージも削除されます\"\r\n\r\nexport const Employees = () => {\r\n\r\n\r\nconst [state, dispatch] = useReducer(employeesReducer, initialState);\r\nconst [selected, setSelected] = useState();\r\nconst [index, SetIndex] = useState(false);\r\nconst [text, setText] = useState();\r\n\r\nconst filtered = useTextFilter(state.employeeList, \"name\",text);\r\nconst list = filtered.length > 0? filtered : state.employeeList\r\n\r\nconst handleDelete = () => {\r\n  if(!window.confirm(deleteMesssage) ){\r\n    return\r\n  }else{\r\n    deleteEmployee(selected.id)\r\n    .then(res => {\r\n      if(res.status !== 200){\r\n        return}\r\n      setSelected(null)\r\n      dispatch({\r\n        type: \"FETCH_END\", \r\n        payload: list.filter(l => l.id !== selected.id)\r\n      })\r\n      \r\n    })\r\n  }\r\n \r\n}\r\n\r\nconst ShowImageList = () => (\r\n  <Paper  sx={{ width: \"50%\"}}>\r\n    \r\n    <ImageList cols={3}>\r\n    {\r\n       list.map((elm,index) => \r\n     \r\n        <ButtonBase key={index}>\r\n        <ImageListItem onClick={()=>setSelected(elm)}>\r\n        <Avatar \r\n            style={{width: 100,height:100}}\r\n            src={imageSrc(elm)}\r\n          />\r\n      <ImageListItemBar\r\n        title={elm.name}\r\n      />\r\n    </ImageListItem>\r\n      \r\n      </ButtonBase>\r\n        )\r\n    }\r\n    </ImageList>\r\n\r\n  </Paper>\r\n)\r\n\r\nconst ShowList = () => (\r\n  <List style={{ width: \"50%\",overflow:\"scroll\"}}>\r\n     {list.map((elm,index) => \r\n      <ListItemButton\r\n              key={index}\r\n              sx={{width: 220}}\r\n              selected={selected  && elm.id === selected.id}\r\n              onClick={()=> setSelected(elm)}\r\n            >\r\n        <ListItemAvatar>\r\n          <Avatar \r\n          sx={{width:50,height:50}} src={imageSrc(elm)} alt={elm.name} />\r\n      \r\n        </ListItemAvatar>\r\n        <ListItemText primary={elm.name}/>\r\n    </ListItemButton>\r\n     )\r\n    }\r\n  </List>\r\n\r\n)\r\n\r\nconst InformationDisplay = () => (\r\n  \r\n    selected ?\r\n    <>\r\n      <Stack \r\n        sx={{width: \"100\"} } \r\n        spacing={2} \r\n        alignItems=\"center\"\r\n      >\r\n      <Avatar \r\n            style={displayIconStyle}\r\n            variant=\"square\" \r\n            src={imageSrc(selected)}\r\n          />\r\n            <Typography sx={{my:2}} variant=\"h4\">{selected.name}</Typography>\r\n            <Divider/>\r\n      </Stack> \r\n          <Box>\r\n            <Typography component=\"h5\">合計出勤数：　{selected.attendances}</Typography>\r\n            <Typography component=\"h5\">欠勤数：　{selected.absent}</Typography>\r\n            {/* ||= */}\r\n            <Typography component=\"h5\">シフト提出率：　{selected.shift_submit_rate}</Typography>\r\n            <Typography component=\"h5\">次回出勤日：　{selected.recent_shift || \"未定\"}</Typography>\r\n            <Typography component=\"h5\">システム登録日：　{selected.created}</Typography>\r\n          </Box>\r\n\r\n     <div style={{position: \"absolute\", bottom:0}}>\r\n\r\n         \r\n     <Button \r\n       color=\"error\" \r\n       variant=\"contained\"\r\n       size=\"large\"\r\n       onClick={()=>handleDelete()}\r\n       disabled={!selected.id || selected.chief}\r\n     >\r\n       削除\r\n     </Button>\r\n\r\n     </div>\r\n    </>\r\n  \r\n        :\r\n    <Box style={noSelectedStyle}>\r\n      <Typography style={{marginTop: 220}} variant=\"h5\">\r\n        従業員を選択してください。\r\n    </Typography>\r\n    </Box>       \r\n)\r\n\r\n    useEffect(() => {\r\n     \r\n      try {\r\n        dispatch({type: \"FETCHING\"});\r\n        fetchEmployees()\r\n        .then(res => {\r\n        dispatch({\r\n          type: \"FETCH_END\",\r\n          payload:  res.data.employees\r\n        })\r\n        })\r\n\r\n      }catch (e){\r\n        console.log(e.message);\r\n      }\r\n\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <> \r\n      <Box sx={{px:2, height: 500 }}>\r\n    \r\n        <Stack sx={{my:2}} direction=\"row\" spacing={2}>\r\n          <Stack direction=\"row\" alignItems=\"center\">\r\n          <ImageOutlinedIcon/>\r\n            <Switch\r\n              checked={index}\r\n              onChange={()=> SetIndex(!index)}\r\n            />\r\n            <ListOutlinedIcon />\r\n          </Stack>\r\n        <TextField \r\n          variant=\"standard\"\r\n          placeholder=\"検索\"\r\n          onChange={e => setText(e.target.value)}\r\n        />\r\n      <NewEmployeeModal \r\n          state={state} \r\n          dispatch={dispatch}\r\n        />\r\n     \r\n\r\n      </Stack>\r\n      {\r\n            (text && filtered.length < 1) &&  \r\n            <h5 style={{color: \"red\"}}>見つかりませんでした。</h5>\r\n      }\r\n       \r\n        <Stack \r\n          sx={{height: 500}}\r\n          direction=\"row\" \r\n          spacing={1}\r\n        >\r\n          {state.fetchState === REQUEST_STATUS.OK ?\r\n              index?\r\n              <ShowList/>\r\n              :\r\n              <ShowImageList/>\r\n            :\r\n            <Skeleton variant=\"rectangular\" height= \"100%\" width=\"50%\" />\r\n          }\r\n        <Paper \r\n          sx={{position:\"relative\",p:1, width: \"50%\",maxWidth:700, ...STYLE_2}}\r\n          elevation={2}\r\n          >\r\n            <InformationDisplay />\r\n        </Paper>\r\n  \r\n        </Stack>\r\n          <Link to=\"/Dashboard\">\r\n          <IconButton style={backButtonStyle}>\r\n            <ArrowCircleLeftIcon sx={{width: 50, height: 50}} />\r\n          </IconButton>\r\n          </Link>\r\n      </Box>\r\n  \r\n       </>\r\n    )\r\n}","import React from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { IconButton, Paper } from \"@mui/material\";\r\n\r\nexport const AddTaskCardButton = ({taskCardsList, setTaskCardsList}) =>{\r\n    \r\n    const addTaskCard=()=>{\r\n        const taskCardId = uuid();\r\n        if(taskCardsList.length >= 3){\r\n            alert(\"作成可能なタスクは最大3個までです\")\r\n            return false\r\n        }\r\n\r\n        setTaskCardsList([\r\n            ...taskCardsList,\r\n            {\r\n                id: taskCardId,\r\n                title: \"タイトルを入力\",\r\n                draggableId: `item${taskCardId}`,\r\n                tasks:[]\r\n            }\r\n\r\n        ]);\r\n    };\r\n    \r\n    return (\r\n    \r\n        <IconButton onClick={addTaskCard}>\r\n            <div className=\"addTask\">\r\n             <AddIcon /> \r\n            </div>\r\n        </IconButton>\r\n        \r\n\r\n    );\r\n}","import { TextField, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const TaskCardTitle = ({\r\n    taskCard,\r\n    taskCardsList,\r\n    setTaskCardsList\r\n}) =>{\r\n    const [isClick, setIsClick] = useState(false);\r\n    const [inputText, setInputText] = useState(taskCard.title || \"タイトルを入力\");\r\n    const change = taskCardsList.slice()\r\n    const i = change.indexOf(change.find(v => v.id == [taskCard.id]))\r\n\r\n   \r\n    const handleClick=()=>{\r\n        setIsClick(true);\r\n    };\r\n\r\n    const handleChange= (e) =>{\r\n        setInputText(e.target.value)\r\n    };\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        change[i].title = inputText\r\n        setTaskCardsList(change)\r\n        setIsClick(false);\r\n    };\r\n\r\n    return (\r\n    <div onClick={handleClick}>\r\n       {isClick? \r\n        <form onSubmit={handleSubmit}>\r\n            <TextField  style={{backgroundColor:\"white\"}}size=\"small\" onChange={handleChange} />\r\n        </form>\r\n        :  \r\n        (<Typography style={{textAlign:\"center\"}}variant=\"h5\">\r\n            {inputText}\r\n        </Typography>)}\r\n    </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport const TaskAddInput = ({\r\n    inputText, \r\n    setInputText, \r\n    taskCard,\r\n    taskCardsList,\r\n    setTaskCardsList\r\n}) =>{\r\n\r\n    const taskList = taskCard.tasks\r\n    const change = taskCardsList.slice()\r\n    const i = change.indexOf(change.find(v => v.id == [taskCard.id]))\r\n\r\n\r\n    const handleSubmit=(e)=>{\r\n        const taskId = uuid();\r\n        e.preventDefault();\r\n        if(taskList.length >= 5){\r\n            alert(\"作成可能なタスクは最大5個までです\")\r\n            return false\r\n        }\r\n        if (inputText === \"\"){return};\r\n        change[i].tasks.push({\r\n            id: taskId,\r\n            draggableId: `task${taskId}`,\r\n            content: inputText})\r\n\r\n        setTaskCardsList(change);\r\n        setInputText(\"\");\r\n    };\r\n\r\n    const handleChange=(e)=>{\r\n        if(e.target.value.length > 12){return alert(\"12文字までです\")}\r\n        setInputText(e.target.value);\r\n    } ;\r\n\r\n\r\n\r\n    return (\r\n    <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"タスクを追加する\" \r\n            className=\"taskAddInput\"\r\n            onChange={handleChange}\r\n            value={inputText} />\r\n        </form>\r\n    </div>\r\n    );\r\n}","import { IconButton, Paper, Stack, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nexport const Task = ({\r\n    index,\r\n    task,\r\n    taskCardsList,\r\n    setTaskCardsList,\r\n    taskCard\r\n}) =>{\r\n    \r\n    const change = taskCardsList.slice()\r\n    const i = change.indexOf(change.find(v => v.id == [taskCard.id]))\r\n   \r\n    const handleDelete = () => {\r\n        change[i].tasks = change[i].tasks .filter(elm => elm.id !== task.id)\r\n        setTaskCardsList(change);\r\n    };\r\n\r\n\r\n    return (\r\n    <Draggable \r\n        index={index}\r\n        draggableId={`task-${task.id}`}\r\n    >\r\n        {(provided) => (\r\n            <Paper\r\n            key={task.id} \r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            className=\"taskContent\"\r\n                >\r\n                <Stack \r\n                    sx={{width:\"100%\"}}\r\n                    direction=\"row\" \r\n                    alignItems=\"center\"\r\n                >\r\n                    <Typography variant=\"h6\">{task.content}</Typography>\r\n                    <IconButton style={{marginLeft: \"auto\"}} onClick={handleDelete}>\r\n                        <CancelIcon />\r\n                    </IconButton>\r\n\r\n                </Stack>\r\n        </Paper>\r\n        )}\r\n        \r\n    </Draggable>\r\n\r\n    \r\n    );\r\n}","import React from \"react\";\r\nimport { Task } from \"./Task\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst reorder=(taskList, startIndex, endIndex)=>{\r\n    const remove = taskList.splice(startIndex, 1);\r\n    taskList.splice(endIndex, 0, remove[0])\r\n};\r\n\r\n\r\nexport const Tasks = ({taskCard, taskCardsList, setTaskCardsList}) =>{\r\n\r\n    const taskList = taskCard.tasks \r\n    const handleDragEnd=(result)=>{\r\n        reorder(taskList, result.source.index, result.destination.index);\r\n        setTaskCardsList(taskCardsList)\r\n    }\r\n    return (\r\n    <div>\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n                {(provided) => (\r\n                    <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {taskList.map((task, index)=>(\r\n                            <div key={task.id}>\r\n                            <Task\r\n                                index={index}\r\n                                task={task} \r\n                                taskCardsList={taskCardsList} \r\n                                setTaskCardsList={setTaskCardsList}\r\n                                taskCard={taskCard}\r\n                            />\r\n                        </div>\r\n\r\n                        ))}\r\n                         {provided.placeholder}\r\n\r\n                    </div>\r\n                )}\r\n                \r\n            </Droppable>\r\n\r\n        </DragDropContext>\r\n        \r\n    </div>\r\n    );\r\n}","import { Box, Card, IconButton } from \"@mui/material\";\r\nimport React ,{ useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { TaskCardTitle } from \"./TaskCardTitle\";\r\nimport { TaskAddInput } from \"./TaskInputForm\";\r\nimport { Tasks } from \"./Tasks\";\r\n\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nconst title = [\"掃除\",\"洗濯\",\"料理\",\"仕事\"]\r\nconst init = title.map((t,index) => ({ id: index,\r\n    draggableId: `${index}`,\r\n    text: t})\r\n    )\r\n\r\n\r\nexport const TaskCard = ({\r\n    index,\r\n    taskCardsList, \r\n    setTaskCardsList, \r\n    taskCard\r\n}) =>{\r\n\r\n    const [inputText, setInputText] = useState(\"\");\r\n\r\n    const handleDeleteCard = () => {\r\n       setTaskCardsList(taskCardsList.filter(t => t.id !== taskCard.id))\r\n    }\r\n \r\n    return (\r\n        <Draggable draggableId={`tasksCard-${taskCard.id}`} index={index}>\r\n            {(provided) => (\r\n                <div \r\n                    ref={provided.innerRef} \r\n                    {...provided.draggableProps}\r\n                    className=\"taskCard\"\r\n                >\r\n                    <div\r\n                        {...provided.dragHandleProps}\r\n                    >\r\n                     <IconButton \r\n                        style={{position:\"absolute\", top:0, right:0}}\r\n                        onClick={handleDeleteCard}\r\n                        >\r\n                         <DeleteIcon/>\r\n                        </IconButton>\r\n                        <TaskCardTitle \r\n                        taskCard={taskCard}\r\n                        taskCardsList={taskCardsList}\r\n                        setTaskCardsList={setTaskCardsList}\r\n                        />\r\n                    </div>\r\n                        <TaskAddInput\r\n                            inputText={inputText}\r\n                            setInputText={setInputText}\r\n                            taskCard={taskCard}\r\n                            taskCardsList={taskCardsList}\r\n                            setTaskCardsList={setTaskCardsList}\r\n                        />\r\n                       <Tasks\r\n                        taskCard={taskCard}\r\n                        taskCardsList={taskCardsList}\r\n                        setTaskCardsList={setTaskCardsList}\r\n                    />\r\n\r\n                </div>\r\n            )}\r\n\r\n        </Draggable>\r\n    );\r\n};","import { Button, Grid, SnackbarContent, Stack } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useContext, useEffect, useMemo } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { fetchTask, sendTask } from \"../../apis/task\";\r\nimport { BadgeContext } from \"../../contexts/badge\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\nimport { AddTaskCardButton } from \"./AddTaskCardButton\";\r\n\r\nimport {TaskCard} from \"./TaskCard\"\r\n\r\nconst reorder=(taskCardsList, startIndex, endIndex)=>{\r\n    const remove = taskCardsList.splice(startIndex, 1);\r\n    taskCardsList.splice(endIndex, 0, remove[0])\r\n};\r\n\r\n\r\nexport const TaskCards = () => {\r\n\r\n    const sb = useContext(SnackbarContext);\r\n    const badge =useContext(BadgeContext)\r\n\r\n    const [taskCardsList, setTaskCardsList] = useState([{id: \"0\",draggableId: \"item0\",title: \"\",tasks:[]}]);\r\n    \r\n    const handleDragEnd = (result) => {\r\n        reorder(taskCardsList, result.source.index, result.destination.index);\r\n        setTaskCardsList(taskCardsList);\r\n    };\r\n    \r\n    const saveTask = () => {\r\n        if(window.confirm(\"タスクの状態を保存しますか？ \\n ※削除されたタスクは復元されません\")){\r\n            sendTask(taskCardsList)\r\n            .then(res => {\r\n                if(res.status !== 200){\r\n                    sb.setSnackBar({variant:\"error\", open:true, content:\"タスクを保存できませんでした\"})\r\n                    return\r\n                }\r\n                sb.setSnackBar({variant:\"success\", open:true, content:\"タスクを保存しました\"})\r\n                setTimeout(() => {\r\n                     badge.setBadge({...badge.badge, task: res.data.task_count})\r\n                },2000)\r\n            })\r\n          }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetchTask()\r\n        .then((res) => {\r\n            setTaskCardsList(res.data.task_cards)\r\n        })\r\n    },[])\r\n\r\n   \r\nreturn useMemo(() => {\r\n\r\n   return (\r\n    <div className=\"taskCardsArea\">\r\n        <Stack \r\n        sx={{height:60,width:\"100%\"}} \r\n        direction=\"row\"\r\n        >\r\n        <AddTaskCardButton\r\n            taskCardsList={taskCardsList}\r\n            setTaskCardsList={setTaskCardsList}\r\n        />\r\n        <Button \r\n            style={{marginLeft:\"auto\"}}\r\n            color=\"success\" \r\n            variant=\"contained\"\r\n            onClick={()=> saveTask()}>保存\r\n        </Button>\r\n       \r\n        </Stack>\r\n        \r\n       <DragDropContext onDragEnd={handleDragEnd}>\r\n           \r\n           <Droppable \r\n            droppableId=\"droppable\" \r\n            direction=\"horizontal\"\r\n           >\r\n              {(provided) => (\r\n                <div \r\n                  {...provided.droppableProps} \r\n                  ref={provided.innerRef}\r\n                  style={{width:\"100%\"}}\r\n                  >\r\n                  \r\n                 <Grid \r\n                    container \r\n                    spacing={2} \r\n                    justifyContent=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                 >\r\n                    {taskCardsList.map((taskCard, index) => (\r\n                           \r\n                        <TaskCard\r\n                                key={taskCard.id}\r\n                                index={index}\r\n                                taskCard={taskCard}\r\n                                taskCardsList={taskCardsList}\r\n                                setTaskCardsList={setTaskCardsList}\r\n                        />     \r\n                   \r\n                    ))}\r\n                   {provided.placeholder}\r\n                  \r\n                </Grid>\r\n                      \r\n              </div>\r\n              )}\r\n\r\n           </Droppable>\r\n        </DragDropContext>\r\n        </div>\r\n\r\n\r\n    )\r\n},[taskCardsList])\r\n\r\n}","import axios from \"axios\";\nimport { taskList, updateTask } from \"../urls/urlList\"\n\nexport const fetchTask = () => {\n    return axios.get(taskList)\n    .then(res => {\n        return res\n    })\n    .catch((e) =>   {throw e;})\n}\n\n\nexport const  sendTask = (params) => {\n    console.log(params)\n   \n    return axios.patch(updateTask,{tasks: params})\n    .then(res => {\n        return res\n    })\n    .catch((e) =>   {throw e;})\n}\n\n\n","import React from \"react\"\r\nimport { Modal}  from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { STYLE_2 } from \"../const\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'white',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  \r\n\r\nexport const CalendarModal = ({\r\n    open={open},\r\n    setOpen={setOpen},\r\n    handleClose={handleClose},\r\n    content={content}\r\n}) => {\r\n\r\n    return (\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n      >   \r\n        <Box sx={{...style}}>\r\n            {content}\r\n        </Box>\r\n      </Modal>\r\n        \r\n\r\n    )\r\n}","import axios from \"axios\";\r\nimport { calendarList, deleteCalendar, newCalendar, updateCalendar } from \"../urls/urlList\"\r\n\r\nexport const fetchCalendars = () => {\r\n    return axios.get(calendarList)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n\r\nexport const  createCalendarEvent = (params) => {\r\n    return axios.post(newCalendar,{calendars: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\nexport const updateCalendarEvent = (id, params) => {\r\n    return axios.patch(updateCalendar(id),{calendars: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\nexport const  deleteCalendarEvent = (id) => {\r\n    return axios.delete(deleteCalendar(id))\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n","import { Box, FormControl } from \"@material-ui/core\";\r\nimport { FormControlLabel, FormLabel, Radio, RadioGroup } from \"@mui/material\";\r\nimport React, { useState, useContext } from 'react';\r\nimport { ConfigContext } from \"../../contexts/config\";\r\n\r\n  export const CalendarEventTypes = ({value, handleChange}) =>{\r\n\r\n  const orgConfig = useContext(ConfigContext);\r\n\r\n  const colors=  \r\n  [ \r\n    {\"key\":\"red\",\"value\": orgConfig.params.red},\r\n    {\"key\":\"royalblue\",\"value\": orgConfig.params.royalblue},\r\n    {\"key\":\"green\",\"value\": orgConfig.params.green},\r\n    {\"key\":\"orange\",\"value\": orgConfig.params.orange},\r\n  ]\r\n    \r\n   \r\n\r\n    return(\r\n  \r\n    <Box>\r\n     <FormControl>\r\n      <RadioGroup\r\n        row\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        {colors.map(v =>  \r\n           <FormControlLabel \r\n           key={v.key}\r\n            value={v.key} \r\n            control={<Radio \r\n              sx={{\r\n                color: v.key,\r\n                '&.Mui-checked': {\r\n                  color: v.key[600],\r\n                }}}/>} \r\n            label={v.value}\r\n          />\r\n        )}\r\n       \r\n      </RadioGroup>\r\n    </FormControl>\r\n  </Box>\r\n  )\r\n      }\r\n  ","import { Button, FormControl, Stack, TextField } from \"@mui/material\";\r\nimport React, { useState, useContext } from \"react\"\r\nimport { createCalendarEvent, deleteCalendarEvent, updateCalendarEvent } from \"../apis/calendar\";\r\nimport { CalendarEventTypes } from \"../components/calendars/CalendarEventTypes\";\r\n\r\nimport {SnackbarContext} from \"../contexts/snackBar\"\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { STYLE_2 } from \"../components/const\";\r\n\r\nexport const CalendarForm = ({\r\n    eventId,\r\n    initialParams,\r\n    setOpen, \r\n    setEvents,\r\n    setInitial,\r\n    }) => {\r\n      \r\n    const [params, setParams] = useState(initialParams);\r\n    const [value, setValue] = useState(initialParams.color);\r\n    const sb = useContext(SnackbarContext);\r\n  \r\n    const handleChange= (e) => {\r\n      setParams({...params, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    \r\n    const eventEdit = () => {\r\n      updateCalendarEvent(eventId,params)\r\n      .then(res => {\r\n        setEvents(res.data.events)\r\n        setInitial(res.data.events)\r\n        sb.setSnackBar({variant:\"success\", open:true, content:\"イベントを編集しました\"})\r\n        setOpen(false)\r\n      })\r\n      \r\n    }\r\n  \r\n\r\n    const eventDelete = () => {\r\n      if (window.confirm(\"イベントを削除しますか？\")){\r\n      deleteCalendarEvent(eventId)\r\n      .then(res => {\r\n        setEvents(res.data.events)\r\n        setInitial(res.data.events)\r\n        sb.setSnackBar({variant:\"error\", open:true, content:\"イベントを削除しました\"})\r\n        setOpen(false)\r\n      })\r\n    }\r\n    \r\n    }\r\n  \r\n    const eventCreate = (e) => { \r\n        e.preventDefault()\r\n        try{\r\n        createCalendarEvent(params)\r\n        .then(res => {\r\n          if(res.status !== 201){\r\n            setOpen(false)\r\n            sb.setSnackBar({variant:\"success\", open:true, content:\"イベントを作成できませんでした\"})\r\n            return\r\n          }\r\n          setEvents(res.data.events)\r\n          setInitial(res.data.events)\r\n          sb.setSnackBar({variant:\"success\", open:true, content:\"イベントを作成しました\"})\r\n          setOpen(false)\r\n        })\r\n        }\r\n         catch(e){console.log(e.message)}\r\n      }\r\n  \r\n    const SelectEventType = () => {\r\n      \r\n      const handleSelect = (e) => {\r\n        setValue(e.target.value)\r\n        setParams({...params, color: e.target.value});\r\n      };\r\n    \r\n      return (\r\n        <CalendarEventTypes\r\n          value={value}\r\n          handleChange={handleSelect} />\r\n      )\r\n      \r\n    }\r\n  \r\n    return (\r\n      <div>   \r\n      <FormControl variant=\"standard\">\r\n        <TextField\r\n          margin=\"normal\"\r\n          type=\"text\" \r\n          value={params.title}\r\n          name=\"title\"\r\n          className=\"mui-input\"\r\n          label=\"イベント名\"\r\n          size=\"small\"\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n         margin=\"normal\"\r\n         type=\"text\"\r\n         value={params.start}\r\n         disabled\r\n         name=\"start\"\r\n         label=\"開始日\"\r\n         size=\"small\"\r\n        />\r\n        \r\n        <DatePicker \r\n        customInput={\r\n            <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                size=\"small\"\r\n                className=\"mui-input\"\r\n             />\r\n        }      \r\n        dateFormat=\"yyyy-MM-dd\"\r\n        minDate={new Date()}\r\n        selected={new Date(params.start)} \r\n        onChange={(date) => setParams({...params,start: date})} \r\n      />\r\n       \r\n         <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={params.description}\r\n          name=\"description\"\r\n          className=\"mui-input\"\r\n          onChange={handleChange}\r\n          placeholder=\"詳細\"\r\n          multiline\r\n          rows={3}\r\n        />\r\n\r\n        <SelectEventType />\r\n        {\r\n          eventId ?\r\n          <>\r\n            <Stack sx={{p:1}} spacing={3} direction=\"row\">\r\n            <Button\r\n            size=\"small\"\r\n            variant=\"contained\" \r\n            color=\"success\"\r\n            onClick={()=>eventEdit()}\r\n            >\r\n              　　　編　集 　　\r\n          </Button>\r\n            <Button \r\n            size=\"small\"\r\n            variant=\"contained\" \r\n            color=\"error\" \r\n            onClick={() =>eventDelete()}>\r\n          　　　削　除　　　\r\n        </Button>\r\n        </Stack>\r\n          </>\r\n        :\r\n        <Button\r\n        size=\"medium\"\r\n        variant=\"contained\" \r\n        color=\"primary\"\r\n        onClick={eventCreate}\r\n        >\r\n            作　成\r\n        </Button>\r\n\r\n        }\r\n        </FormControl>\r\n  </div>\r\n  \r\n    )\r\n  }","\r\nconst calcAssignCount = (shifts, time) => {\r\n\r\n  let count = {early:0, mid: 0, late:0};\r\n   \r\n    \r\n  if(!shifts){return count}\r\n\r\n  shifts.forEach(elm => {\r\n    if(!!elm.rest){return}\r\n    const st = Math.ceil(elm.attendance_time)\r\n    const en = Math.ceil(elm.leaving_time)\r\n    const shift = [...Array(en-st)].map((_, i) => i+st)\r\n\r\n    count = {\r\n    early: count.early + Number(shift.some(el => time.early_time.includes(el))),\r\n    mid: count.mid + Number(shift.some(el => time.mid_time.includes(el))),\r\n    late: count.late + Number(shift.some(el => time.late_time.includes(el)))\r\n    }\r\n  })\r\n\r\n  return count;\r\n}\r\n\r\n\r\nconst countToEvent = (shifts, time) => {\r\n  \r\n  const events = Object.keys(shifts).map(\r\n    function(key){\r\n      const count = calcAssignCount(shifts[key], time);\r\n\r\n      return {\r\n        title:`朝:${count.early} 日:${count.mid} 夜:${count.late}`,\r\n        start: key,\r\n        color: \"gray\"\r\n      }\r\n        })\r\n\r\n  return events;\r\n}\r\n\r\n\r\nexport {calcAssignCount, countToEvent};","import React from \"react\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { Button, Chip, Stack, Typography, Divider, Tooltip} from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n\r\nexport const CalendarShifts = ({\r\n    shifts,\r\n    count,\r\n    date,\r\n    setOpenState,\r\n    setPeriod\r\n}) => {\r\n    \r\n    const handleClick = () => {\r\n        setOpenState(\"shift\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Typography variant=\"h5\">勤務:　{shifts.length}人</Typography>\r\n        <Typography variant=\"h5\">シフト:　{count}　</Typography>\r\n        <Divider />\r\n        {\r\n         shifts.map(s => (\r\n                <Box sx={{my:2}}>\r\n                      <Stack direction=\"row\" spacing={2}>\r\n                      <Tooltip title={s.confirmed ? \"\" : \"シフトが未確定です\"} arrow>\r\n                      <Chip\r\n                        key={s.id}\r\n                        variant={s.confirmed ? \"filled\" : \"outlined\"}\r\n                        icon={< AccountCircleIcon />}\r\n                        label={s.name}\r\n                    />\r\n\r\n                      </Tooltip>\r\n                    <Typography variant=\"subtitle1\">\r\n                        {s.attendance_time} ～ {s.leaving_time}\r\n                    </Typography>\r\n\r\n                </Stack>\r\n                </Box>\r\n                )\r\n            )}\r\n            <Button fullWidth \r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    onClick={()=> handleClick()}\r\n            >\r\n                シフトを編集する\r\n            </Button>\r\n        \r\n           \r\n        </>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Button, FormLabel, Switch, Typography } from '@mui/material';\r\n\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport { CalendarModal } from '../components/calendars/CalendarModal';\r\nimport { CalendarForm } from './CalendarForm';\r\nimport { CalendarEventTypes } from '../components/calendars/CalendarEventTypes';\r\nimport { fetchCalendars } from '../apis/calendar';\r\nimport { calcAssignCount, countToEvent } from '../lib/calc';\r\nimport { ConfigContext } from '../contexts/config';\r\nimport { CalendarShifts } from '../components/calendars/CalendarShifts';\r\nimport { formattedDate } from '../lib/calcDate';\r\nimport { BUSSINESS_HOUR } from '../components/const';\r\n\r\nlet content = \"\";\r\nconst shiftColor = \"gray\";\r\n\r\nexport const Calendar = ({\r\n  setOpenState\r\n}) => {\r\n\r\n  const [initial, setInitial] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [events, setEvents] = useState();\r\n  const [shift, setShift] = useState([])\r\n  const [overlay, setOverlay]= useState(true);\r\n\r\n  const orgConfig = useContext(ConfigContext);\r\n  const time = BUSSINESS_HOUR(orgConfig.params.open, orgConfig.params.close);\r\n\r\n\r\n  let initialParams = {title:\"\",description:\"\",start:\"\",end:\"\",color:\"red\"};\r\n\r\n  const handleEventFilter = (e) => {\r\n    setEvents(initial.filter(elm => elm.color == e.target.value))\r\n  }\r\n\r\n  const handleEventClick = (e) => {\r\n\r\n    const ev = e.event;\r\n\r\n    initialParams = {\r\n                   title: ev.title,\r\n                   description: ev.extendedProps.description,\r\n                   start: ev.start.toLocaleString({ timeZone: 'Asia/Tokyo' }),\r\n                   end: ev.end,\r\n                   color: ev.backgroundColor\r\n                  }\r\n      \r\n        ev.backgroundColor === shiftColor ?\r\n        content = <CalendarShifts \r\n                    shifts={shift[formattedDate(ev.start)]}\r\n                    count={ev.title}\r\n                    date={ev.start}\r\n                    setOpenState={setOpenState}\r\n                   />\r\n        :\r\n        content = (\r\n            <CalendarForm  \r\n            eventId={ev.id}\r\n            initialParams={initialParams}\r\n            setOpen={setOpen} \r\n            setEvents={setEvents}\r\n            setInitial={setInitial}\r\n            />       \r\n        )\r\n    \r\n    setOpen(true)   \r\n  }\r\n\r\n  const handleDateClick = (e) => {\r\n   content = (\r\n    <CalendarForm \r\n      initialParams={{...initialParams,start:e.dateStr.toString()}}\r\n      setOpen={setOpen} \r\n      setEvents={setEvents}\r\n      setInitial={setInitial}\r\n      />\r\n    )\r\n    setOpen(true)\r\n  }\r\n\r\n    \r\nuseEffect(() => {\r\n  fetchCalendars()\r\n  .then((res) => {\r\n    setEvents(res.data.events)\r\n    setShift(res.data.shifts)\r\n    setInitial(res.data.events)\r\n  })\r\n\r\n},[]);\r\n\r\n\r\n    return (\r\n    <> \r\n      {events ? \r\n      <div>\r\n        <FormLabel >表示項目</FormLabel>\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n         \r\n              <CalendarEventTypes\r\n               handleChange={handleEventFilter}\r\n              />\r\n          <Stack \r\n            style={{marginLeft: \"auto\"}}\r\n            direction=\"row\" \r\n            spacing={2} \r\n            alignItems=\"center\"\r\n          >\r\n              <Switch \r\n                checked={overlay}\r\n                onChange={()=>setOverlay(!overlay)}\r\n              />\r\n              <Typography variant=\"subtitle1\">シフト反映</Typography>\r\n\r\n          </Stack>\r\n\r\n        \r\n        </Stack>\r\n      \r\n         <FullCalendar\r\n            sx={{height:\"100%\"}}\r\n            plugins={[dayGridPlugin,interactionPlugin,timeGridPlugin ]}\r\n            initialView=\"dayGridMonth\"\r\n            headerToolbar={{\r\n              center: 'dayGridMonth,timeGridWeek'\r\n            }}\r\n            locale=\"ja\" \r\n            contentHeight={700}\r\n            events={\r\n              overlay ? [...countToEvent(shift,time),...events] : events}\r\n            eventClick={handleEventClick}\r\n            dateClick={handleDateClick}\r\n          />\r\n\r\n      </div>\r\n      \r\n      :\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={480} />\r\n      \r\n      }\r\n\r\n      <CalendarModal\r\n        open={open} \r\n        setOpen={setOpen}\r\n        handleClose={()=>setOpen(false)}\r\n        content={content}\r\n        />\r\n    \r\n      </>\r\n \r\n    \r\n    )\r\n}","import { Box, Modal } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    height: \"400px\",\r\n    width: 500,\r\n    maxWidth: \"95%\",\r\n    overflow: \"scroll\",\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 2\r\n  };\r\n  \r\n  \r\nexport const DefaultModal = ({open, setOpen, content, inputStyle}) => {\r\n\r\n    return (\r\n        \r\n        \r\n    <Modal\r\n      open={open}\r\n      onClose={()=>setOpen(false)}\r\n    >\r\n      <Box sx={{...modalStyle,...inputStyle}}>\r\n          {content}\r\n      </Box>\r\n    </Modal>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport { IconButton, ListItemIcon, Stack, Typography } from \"@mui/material\"\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport { getMonAndDate } from \"../../lib/calcDate\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport { useDateFilter } from '../../customeHooks/hooks';\r\n\r\nexport const SelectDate = ({\r\n    list,\r\n    setList,\r\n    setDate=function(date){console.log(date)},\r\n}) => {\r\n  \r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const filtered = useDateFilter(list, selectedDate);\r\n  \r\n  useEffect(() => {setList(filtered)},[filtered, list])\r\n\r\n  \r\n  const handleChangeDate = (type) => {\r\n    switch (type){\r\n      case \"ahead\":\r\n        setSelectedDate(new Date(selectedDate.setDate(selectedDate.getDate() + 1)))\r\n        setDate(selectedDate)\r\n        return\r\n      case \"back\":\r\n        setSelectedDate(new Date(selectedDate.setDate(selectedDate.getDate() - 1)))\r\n        setDate(selectedDate)\r\n        return\r\n\r\n    }\r\n  \r\n  }\r\n\r\n\r\n    return (\r\n    \r\n        <Stack direction=\"row\"alignItems=\"center\">\r\n           <IconButton onClick={() => handleChangeDate(\"back\")}>\r\n            <ArrowBackIosNewIcon />\r\n           </IconButton>  \r\n           <IconButton>\r\n              <DatePicker\r\n              customInput={\r\n                      <DateRangeOutlinedIcon />\r\n              }      \r\n              dateFormat=\"yyyy-MM-dd\"\r\n              selected={selectedDate} \r\n              onChange={(date)=> setSelectedDate(date)}\r\n              /> \r\n             </IconButton>\r\n            <IconButton  onClick={() => handleChangeDate(\"ahead\")}>\r\n              <ArrowForwardIosIcon />\r\n            </IconButton>\r\n       \r\n        <Typography variant=\"h5\">{getMonAndDate(selectedDate, \"/\")}</Typography>\r\n    </Stack>\r\n\r\n    )\r\n\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\n\nimport { autocompleteClasses, Chip, Grid, IconButton, ListItemIcon, Paper, Stack, Typography } from \"@mui/material\"\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { DefaultModal } from './DefaultModal';\nimport { Box } from '@mui/system';\n\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\n\nconst inputStyle={\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }\n  \nconst thisYear = new Date().getFullYear();\nconst years = Array.from(Array(6), (k,v) => (-3+v)+thisYear)\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n  const style = {\n    \"box-shadow\": 0,\n    \"background-color\": \"gray\",\n    \"border\": \"solid 1px rgba(100,100,100,.6)\"\n  }\n\n\n\n  \nexport const YearPicker = ({\n    handleChange\n}) => {\n\n\nconst [open, setOpen] = useState(false)\n\n  \nconst content = <div>\n   \n   <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={{ xs: 2, md: 4 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {years.map((year, index) => (\n          <Grid item xs={2} sm={6} md={6} key={index}>\n          \n            <Item \n                id={year}\n                style={{style}} \n                value={year}\n                onClick={(e)=>{\n                    handleChange(e)\n                    setOpen(false)\n                }\n                }>{year}</Item>\n           \n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n\n\n\n  \n</div>\n\n\n    return (\n    <>\n    <IconButton>\n        <DateRangeOutlinedIcon onClick={()=>setOpen(true)}/>\n    </IconButton>\n        <DefaultModal\n        content={content}\n        open={open}\n        setOpen={setOpen}\n        inputStyle={inputStyle}\n        />\n    </>\n\n    )\n\n\n\n}","import { Button, Chip, CircularProgress, IconButton, Slider, Switch, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState, useContext, useMemo } from \"react\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { assignShift, createShift, deleteShift, determineShifts, fetchSubmittedShifts, fetchUnapproved, fetchUnapprovedShift } from \"../apis/shifts\";\r\nimport { PageLoadingCircle } from \"../components/shared/commonPatrs\";\r\nimport { BadgeContext } from \"../contexts/badge\";\r\nimport { SnackbarContext } from '../contexts/snackBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { Stack } from \"@mui/system\";\r\n\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\nimport { ShiftEdit } from \"./ShiftEdit\";\r\nimport { BUSSINESS_HOUR, dayOfWeek, SliderScales, STYLE_2 } from '../components/const';\r\nimport { DefaultModal } from \"../components/shared/DefaultModal\";\r\nimport { NewShiftForm } from \"../components/shifts/NewShiftForm\";\r\nimport { NewShiftModal } from \"../components/shifts/NewShiftModal\";\r\nimport { getMonAndDate, renderMonth } from \"../lib/calcDate\";\r\nimport { ConfigContext } from \"../contexts/config\";\r\nimport { calcAssignCount } from \"../lib/calc\";\r\nimport { NewEmployeeForm } from \"../components/employees/NewEmployeeForm\";\r\nimport { YearPicker } from \"../components/shared/YearPicker\";\r\nconst initialState = {\r\n  id: \"\",\r\n  name:\"\",\r\n  attendance_time:0,\r\n  leaving_time:0\r\n}\r\n\r\n\r\nconst shiftTerms = [\r\n  {id: \"early\",label:\"朝\",start:9,end:12,color:\"orange\"},\r\n  {id: \"mid\",label:\"日勤\",start:12,end:16,color:\"ivory\"},\r\n  {id: \"late\",label:\"夜\",start:16,end:20,color:\"skyblue\"}\r\n]\r\n\r\nconst today = new Date()\r\nconst initialPeriod = [today.getFullYear(),today.getMonth()+1]\r\n\r\nexport const Shift = ({\r\n \r\n}) => {\r\n   \r\nconst [value, setValue] = useState();\r\nconst [loading, setLoading] = useState(false)\r\nconst [selectedShift, setSelectedShift] = useState(initialState);\r\nconst [unapproved, setUnapproved] = useState(false);\r\nconst [open, setOpen] = useState(false);\r\nconst sb = useContext(SnackbarContext);\r\nconst badge = useContext(BadgeContext);\r\nconst [days, setDays] = useState([])\r\nconst [period, setPeriod] = useState(initialPeriod);\r\n \r\n\r\n  \r\nconst shiftParams = (at,lv, con) => {\r\n\r\n  return{\r\n    unsubmitted:{text: unapproved ? \"×\": \"未提出\",style: {backgroundColor: \"white\", color: \"gray\"}},\r\n    rest:{text: `${\"未) \".repeat(Number(!con))} 休`,style: {backgroundColor: \"rgba(100,100,100,.2)\"}},\r\n    attend: {text: `${\"未) \".repeat(Number(!con))}${at}-${lv}`,style: {backgroundColor: \"pink\"}}\r\n}\r\n}\r\n\r\nconst undo = () => {\r\n  fetchSubmittedShifts(period)\r\n  .then(res =>  setValue(res.data.shifts))\r\n}\r\n\r\nconst unassignShift = (e, id) => {\r\n  e.preventDefault();\r\n  if(!id){return}\r\n  if(window.confirm(\r\n    `シフトを削除しますか？`\r\n    )){    \r\n        setLoading(true)\r\n        deleteShift(id)\r\n        .then(res => {\r\n              if(res.status !== 200){ return sb.setSnackBar({open: true, variant:\"error\",content:\"シフトを確定できませんでした。\"}) }\r\n              setValue(value.filter(v=>v.id!==id))\r\n              setOpen(false)\r\n        \r\n              sb.setSnackBar({open: true, variant:\"success\",content:\"シフトを削除しました。\"})\r\n              // badge.setBadge({\r\n              //   ...badge.badge, shift: res.data.shifts.filter(elm => elm.confirmed == false).length\r\n              // })\r\n        })\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n  \r\nconst updateShifts = (params) => {\r\n\r\n}\r\n\r\nconst handleSwitch = () => {\r\n  console.log(value)\r\n  unapproved ? \r\n  fetchSubmittedShifts(period)\r\n  .then((res) => {\r\n  setValue(res.data.shifts.sort((ago, next)=>ago.date - next.date))\r\n  renderMonth(period)\r\n})\r\n  :\r\n  setValue(value.filter(v => !v.confirmed))\r\n  setUnapproved(!unapproved)\r\n}\r\n\r\nconst orgConfig = useContext(ConfigContext)\r\n\r\nconst collectShift = (params) => {\r\n  const ids =  [...new Set(value.map(s => s.employee_id))]\r\n  const list = []\r\n  ids.map(id => {\r\n    list.push(params.filter(s => s.employee_id == id));\r\n  })\r\n  \r\n  return list;\r\n}\r\n\r\nconst renderShift = (shift,employee,elm, i) => {\r\n  let onClick = \"\";\r\n  let params = \"\";\r\n\r\n  if(!shift){\r\n    params = shiftParams(\"\",\"\",false).unsubmitted\r\n    onClick = () => shiftClick(null,{employee_id: employee.employee_id,date: elm.date, name: employee.name})\r\n  }else{\r\n    onClick = () => shiftClick(shift)\r\n    shift.rest ?\r\n    params = shiftParams(\"\",\"\",shift.confirmed).rest\r\n    :\r\n    params = shiftParams(shift.attendance_time,shift.leaving_time,shift.confirmed).attend\r\n  }\r\n\r\n  return (\r\n    <TableCell \r\n    key={i} \r\n    style={params.style}\r\n    onClick={()=>onClick()}\r\n  >{params.text}</TableCell>\r\n  )\r\n}\r\n\r\nconst handleValue = (e, newValue, activeThumb) => {\r\n  \r\n  if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (activeThumb === 0) {\r\n      // selectedShift.attendance_time = Math.min(newValue[0], e.target.value[1] - orgConfig.params.min_work_time)\r\n      setSelectedShift({...selectedShift,attendance_time: Math.min(newValue[0], e.target.value[1] - orgConfig.params.min_work_time)});\r\n    } else {\r\n      setSelectedShift({...selectedShift,leaving_time: Math.max(newValue[1], e.target.value[0] + 2)})\r\n      // setSelectedShift(change);\r\n    }\r\n  }\r\n\r\n  const handleSelectMonth = (type) => {\r\n    switch (type){\r\n      case \"ahead\":\r\n        setPeriod([period[0] + Math.floor(period[1] / 12),(period[1] % 12)+1])\r\n        return\r\n      case \"back\":\r\n        const next = 12-((12- (period[1] -1)) % 12)\r\n        setPeriod([period[0] - Math.floor(next /12),next])\r\n        return\r\n      }\r\n    } \r\n\r\n  const handleChange = (e) => {\r\n    setPeriod([Number(e.target.id),6])\r\n  }\r\n\r\n \r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  if(window.confirm(\r\n    `シフトを確定しますか？\\n※編集された場合従業員に通知されます。`\r\n    )){\r\n  (selectedShift.id ? assignShift(selectedShift) : createShift(selectedShift))\r\n  .then(res => {\r\n        if(res.status !== 201){ return sb.setSnackBar({open: true, variant:\"error\",content:\"シフトを確定できませんでした。\"}) }\r\n        const copy = value.slice().filter(l => l.id !== selectedShift.id)\r\n        setValue([...copy,res.data.shift])\r\n        sb.setSnackBar({open: true, variant:\"success\",content:\"シフトを確定しました。\"})\r\n        setOpen(false)\r\n  })\r\n\r\n  }\r\n\r\n}\r\n\r\nconst handleDetermine = (e) => {\r\n  if(value.length === 0){return sb.setSnackBar({open: true, variant:\"error\",content:\"当月の未承認シフトがありません\"})}\r\n  determineShifts(value)\r\n  .then(res => {\r\n        if(res.status !== 200){ return sb.setSnackBar({open: true, variant:\"error\",content:\"シフトを確定できませんでした。\"}) }\r\n        setValue(res.data.shifts.sort((ago, next)=>ago.date - next.date))\r\n        sb.setSnackBar({open: true, variant:\"success\",content:\"シフトを確定しました。\"})\r\n  })\r\n  \r\n  }\r\n\r\n\r\nconst shiftClick = (shift,params) => {\r\n  console.log(\"click\")\r\n  \r\n  if(shift){\r\n      setSelectedShift(shift)\r\n  }else{\r\n    const newShiftParams = {\r\n      employee_id: params.employee_id,\r\n      date: params.date,\r\n      name: params.name,\r\n      attendance_time: orgConfig.params.open,\r\n      leaving_time: orgConfig.params.close\r\n    }\r\n    setSelectedShift(newShiftParams)\r\n  }\r\n  \r\n  setOpen(!open)\r\n  \r\n}\r\n\r\nconst shiftCount = (index) => {\r\n  const time  = BUSSINESS_HOUR(orgConfig.params.open, orgConfig.params.close);\r\n  \r\n  const shift = value.filter(elm => new Date(elm.date).getDate() == days[index].date.getDate())\r\n  return calcAssignCount(shift,time)\r\n}\r\n\r\n\r\n\r\nconst content = \r\n  <form onSubmit={(e)=>handleSubmit(e)}>\r\n  <Stack style={{width:\"90%\", margin:\"auto\"}} spacing={2} >\r\n  <Typography variant=\"h6\">\r\n      {getMonAndDate(new Date(selectedShift.date),\"/\")}\r\n  </Typography>\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n    <Typography variant=\"h6\">\r\n      {selectedShift.name}\r\n  </Typography>\r\n  {selectedShift.confirmed ?\r\n    <Chip \r\n      variant=\"filled\"\r\n      color=\"success\"\r\n      label=\"承認済\"\r\n      />     :\r\n      <Chip \r\n      variant=\"outlined\"\r\n      label=\"未承認\"\r\n      />   \r\n   } \r\n    </Stack>\r\n    \r\n\r\n\r\n  <Slider\r\n      name={selectedShift.id}\r\n      value={[selectedShift.attendance_time, selectedShift.leaving_time]}\r\n      onChange={(e, newValue, activeThumb)=>handleValue(e, newValue, activeThumb)}\r\n      marks={SliderScales}\r\n      valueLabelDisplay=\"auto\"\r\n      min={orgConfig.params.open}\r\n      max={orgConfig.params.close}\r\n      disabled={selectedShift.rest}\r\n      step={0.5}\r\n      style={{\"margin\": \"50px 0\"}}\r\n  />\r\n   <Switch \r\n        checked={selectedShift.rest}\r\n        onChange={()=>{setSelectedShift({...selectedShift,rest: !selectedShift.rest})}}\r\n   />休\r\n  <Button\r\n      fullWidth\r\n      disabled={selectedShift.id ===\"\"}\r\n      type=\"submit\"\r\n      variant=\"contained\"\r\n      color=\"success\"\r\n      endIcon={loading? \r\n          <CircularProgress style={{width:\"1.2rem\", height: \"1.2rem\"}}/> :\r\n           \"\"}\r\n  >\r\n      シフトを作成する\r\n  </Button>\r\n  <Button\r\n      fullWidth\r\n      disabled={!selectedShift.id}\r\n      type=\"button\"\r\n      variant=\"contained\"\r\n      color=\"error\"\r\n      endIcon={loading? \r\n          <CircularProgress style={{width:\"1.2rem\", height: \"1.2rem\"}}/> :\r\n           \"\"}\r\n      onClick={(e)=>unassignShift(e,selectedShift.id)}\r\n  >\r\n      削除\r\n  </Button>\r\n \r\n\r\n  </Stack>\r\n\r\n\r\n  </form>;\r\n\r\nuseEffect(() => {\r\n  try {\r\n      fetchSubmittedShifts(period)\r\n      .then((res) => {\r\n      const shifts = unapproved ? res.data.shifts.filter(s=> s.confirmed == false) : res.data.shifts\r\n      setValue(shifts.sort((ago, next)=>ago.date - next.date))\r\n      setDays(renderMonth(period))\r\n})\r\n} \r\ncatch(e){\r\n  console.log(e)\r\n}\r\n\r\n},[period])\r\n\r\n\r\n  return (\r\n    <>\r\n  \r\n    {\r\n    value ? \r\n\r\n    <div>\r\n      <DefaultModal\r\n        open={open}\r\n        setOpen={setOpen}\r\n        content={content}\r\n      />\r\n    \r\n       <Stack direction=\"row\"alignItems=\"center\" justifyContent=\"space-between\">\r\n           <div>\r\n           <h2>{period[0]}-{period[1]}</h2>\r\n           <IconButton onClick={() => handleSelectMonth(\"back\")}>\r\n            <ArrowBackIosNewIcon />\r\n           </IconButton>  \r\n           <YearPicker  handleChange={(e)=>handleChange(e)}/>\r\n         <IconButton  onClick={() => handleSelectMonth(\"ahead\")}>\r\n              <ArrowForwardIosIcon />\r\n        　</IconButton>\r\n        <Switch \r\n                checked={unapproved}\r\n                onChange={()=>handleSwitch()}\r\n          />\r\n          未承認のみ\r\n            </div>\r\n          <Button  \r\n                disabled={loading}\r\n                endIcon={loading ? <CircularProgress style={{width: \"1.2rem\", height:\"1.2rem\"}}/>:<SendIcon color=\"inherit\"/>}\r\n                size=\"medium\"\r\n                variant=\"contained\" \r\n                onClick={(e)=> {if(window.confirm(\r\n                  `表示されているシフトを確定しますか？\\n※編集された場合従業員に通知されます。`\r\n                  )){handleDetermine(e)}}}\r\n                >\r\n            　　　全て承認　　　\r\n          </Button>\r\n\r\n        </Stack>\r\n      \r\n\r\n      <TableContainer style={{maxHeight: 600}}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                  style={{ minWidth: 100 }}\r\n                >\r\n                  <span>従業員名</span>\r\n              </TableCell>\r\n              {days.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.date.getDate().toString()}{column.dow}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {\r\n          collectShift(value).map((row,i) => (\r\n            <TableRow key={i}>\r\n              <TableCell\r\n                  key={i}\r\n                >\r\n                  {row[0].name}\r\n                </TableCell>\r\n             {days.map((elm,i) =>      \r\n              renderShift(row[row.findIndex(e => new Date(e.date).getDate() == elm.date.getDate())],row[0],elm,i)\r\n              )}  \r\n            </TableRow>\r\n          \r\n            ))\r\n            \r\n          }\r\n\r\n           {shiftTerms.map(term =>{\r\n            \r\n          return (\r\n            <TableRow key={term.label}>\r\n            <TableCell\r\n                style={{\"background\":term.color}} \r\n              >{term.label}\r\n             </TableCell>\r\n             \r\n            {days.map((_,i) =>\r\n              (<TableCell\r\n                style={{\"background\":term.color, color: \"red\".repeat(Number(!shiftCount(i)[term[\"id\"]]))}} \r\n              >{shiftCount(i)[term[\"id\"]]}\r\n             </TableCell>)\r\n            )\r\n          }\r\n           </TableRow>\r\n          )\r\n           \r\n            }\r\n           )}\r\n    \r\n        </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n      {/* <ShiftEdit\r\n        value={value}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        undo={undo}\r\n        updateShifts={updateShifts}\r\n        unassignShift={unassignShift}\r\n      /> */}\r\n    </div>\r\n     :\r\n    <PageLoadingCircle />\r\n}\r\n\r\n    </>\r\n\r\n)\r\n\r\n}\r\n","import { REQUEST_STATUS } from \"../components/const\";\r\n\r\nexport const initialState = {\r\n    fetchState: REQUEST_STATUS.START,\r\n    attendanceData :[]\r\n}\r\n\r\nexport const AttendanceReducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case \"FETCHING\":\r\n            return {\r\n                ...state,\r\n                fechState: REQUEST_STATUS.LOADING,\r\n            };\r\n        case \"FETCH_END\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                attendanceData : action.payload\r\n            };\r\n            case \"FILTER\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                attendanceData : action.payload\r\n            };\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n\r\n\r\n}","const timeConvert = (min, type) => {\r\n    \r\n    switch(type){\r\n        case \"full\":\r\n            return `${Math.floor(min/60)}時間${(min % 60)}分`\r\n        case \"colon\":\r\n            return `${Math.floor(min/60)}:${(min % 60)}`\r\n        case \"decimal\":\r\n            return `${Math.floor(min/60) + (0.25 * Math.floor((min % 60)/15))}`\r\n    }\r\n\r\n}\r\n\r\n\r\nconst totalingTimes = (attendances) => {\r\n\r\n    let result = {\r\n        workDate: 0,\r\n        totalWorkTime: 0,\r\n        over_time: 0,\r\n        midnight_time: 0,\r\n        midnight_over_time: 0\r\n\r\n    }\r\n\r\n\r\n\r\n    if (!attendances.length){ return result }\r\n\r\n\r\n    const add = (key) => {\r\n        const calc = attendances.reduce(function(sum, elm){\r\n            return sum + elm[key];\r\n        },0);\r\n\r\n        return calc\r\n\r\n    }\r\n\r\n    result = {\r\n        workDate: attendances.length,\r\n        totalWorkingTime: add(\"working_time\"),\r\n        overtime: add(\"overtime\"),\r\n        midnight_time: add(\"midnight_time\"),\r\n        midnight_overtime: add(\"midnight_overtime\")\r\n    }\r\n\r\n\r\n    return result;\r\n}\r\n\r\nexport { totalingTimes, timeConvert }\r\n","import React from \"react\";\r\nimport { Stack, Typography } from \"@mui/material\";\r\nimport { timeConvert } from \"../../lib/calcTimes\";\r\nimport { BASE_STYLE, STYLE_2 } from \"../const\";\r\n\r\nexport const IrregularTime = ({params}) => (\r\n \r\n<Stack spacing={2}>\r\n  { console.log(params)\r\n\r\n}\r\n\r\n <div>\r\n    <Typography style={BASE_STYLE} variant=\"h6\"> \r\n      残業時間\r\n    </Typography> \r\n    <Typography style={STYLE_2} variant=\"h6\">\r\n      {timeConvert(params.overtime,\"full\")} \r\n    </Typography> \r\n\r\n </div>\r\n\r\n <div>\r\n    <Typography style={BASE_STYLE} variant=\"h6\"> \r\n      深夜時間\r\n    </Typography> \r\n    <Typography style={STYLE_2}variant=\"h6\">\r\n      {timeConvert(params.midnight_time,\"full\")} \r\n    </Typography> \r\n\r\n </div>\r\n <div>\r\n    <Typography style={BASE_STYLE} variant=\"h6\"> \r\n      深夜残業時間\r\n    </Typography> \r\n    <Typography style={STYLE_2} variant=\"h6\">\r\n     {timeConvert(params.midnight_overtime,\"full\")} \r\n    </Typography> \r\n\r\n </div>\r\n\r\n</Stack>\r\n\r\n)","import React, { useState } from \"react\";\r\nimport { Button, Divider, Stack }  from \"@mui/material\"\r\nimport Typography from '@mui/material/Typography';\r\nimport { DefaultModal } from \"../shared/DefaultModal\";\r\nimport { formattedTime } from \"../../lib/calcDate\";\r\nimport { BASE_STYLE, STYLE_2 } from \"../const\";\r\nimport { IrregularTime } from \"./irregularTime\";\r\nimport { timeConvert } from \"../../lib/calcTimes\";\r\n\r\nconst style= {\r\ntextAlign: \"center\",\r\n\r\n}\r\n\r\nexport const DetailModal = ({params}) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const content = (\r\n      <div style={style}>\r\n          <Typography sx={{py:1}} variant=\"h4\">\r\n          {params.name}\r\n        </Typography>\r\n        <Divider />\r\n    \r\n        <Stack \r\n          sx={{my:2}}\r\n          alignItems=\"center\"\r\n          spacing={3} \r\n          direction=\"row\"\r\n          divider={<Divider orientation=\"vertical\" flexItem/>}\r\n        >\r\n        <Typography variant=\"h6\">\r\n         {params.date.slice(-2)}日\r\n       </Typography>\r\n       <Typography variant=\"h6\">\r\n         出勤 <br />\r\n         {formattedTime(params.attendance_time)}\r\n       </Typography>\r\n       <Typography variant=\"h6\">\r\n         退勤 <br /> \r\n         {formattedTime(params.leaving_time)}\r\n       </Typography> \r\n       <Typography variant=\"h6\">\r\n         休憩 <br />\r\n         {params.rest_time} 分\r\n       </Typography>\r\n     </Stack>\r\n     <Typography style={{fontWeight: \"bold\"}} variant=\"h6\"> \r\n      労働時間 <br />\r\n      {timeConvert(params.working_time, \"full\")} \r\n    </Typography> \r\n     <IrregularTime params={params} />\r\n\r\n     \r\n\r\n   \r\n      </div>\r\n   \r\n     \r\n    )\r\n\r\n    return (\r\n        <>\r\n        \r\n         <DefaultModal\r\n            open={open}\r\n            setOpen={setOpen}\r\n            content={content}\r\n          />\r\n       \r\n\r\n        <Button onClick={() => setOpen(true)} variant=\"contained\" color=\"primary\" >\r\n        詳 細\r\n        </Button>\r\n        \r\n        </>\r\n       \r\n    )\r\n\r\n\r\n\r\n}\r\n","import React from \"react\"\r\n\r\nimport { DetailModal } from \"./DetailModal\";\r\n\r\nimport { DataGrid, GridColDef, jaJP } from '@mui/x-data-grid';\r\nimport styled from \"styled-components\"\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { PageLoadingCircle } from \"../shared/commonPatrs\";\r\nimport { Box } from \"@mui/system\";\r\nimport { formattedTime } from \"../../lib/calcDate\";\r\n\r\nconst SCALE = 4;\r\n\r\nconst Graph = styled.span`\r\nheight:30px;\r\nopacity:.5;\r\nbackground: ${(props) =>props.bgColor};\r\nwidth: ${(props) => SCALE*(props.width)}px;\r\nmargin-left: ${(props) => SCALE*(props.margin)}px;\r\ntext-align: center;\r\ncolor: black;\r\nfont-weight:bold\r\n`;\r\n\r\n\r\nexport const AttendanceGraph = ({\r\n    state, \r\n    list,\r\n    handleCheck\r\n  }) => {\r\n\r\n  let config = 6;\r\n  \r\n  \r\n  //----------------グラフ関連---------\r\n\r\n\r\n  const timeToGraph =(time) => {\r\n   \r\n    const calc = (elm) => {\r\n      return (\r\n        Math.floor(elm/15)\r\n      )\r\n\r\n    }\r\n    \r\n    return ({\r\n      time: calc(time.working_time),\r\n      start: calc(formattedTime(time.attendance_time)) - (4*config),\r\n      rest: calc(time.rest_time),\r\n      overTime: calc(time.overtime)\r\n    })\r\n  }\r\n\r\n  const attendanceGraph = (params) => {\r\n\r\n    var result = timeToGraph(params)\r\n    var time = result.time;\r\n    var space = result.start;\r\n    var overTime = result.overTime\r\n    var rest = result.rest\r\n\r\n    return(\r\n        <>\r\n          <Graph className=\"graph\" bgColor=\"royalblue\" width={time/2} margin={space}>{time/4}h</Graph>\r\n          <Graph bgColor=\"gray\" width={rest} />\r\n          <Graph bgColor=\"royalblue\" width={time/2} />\r\n          <Graph bgColor=\"#f3a68c\" width={overTime} />\r\n        </>\r\n    )\r\n  }\r\n\r\n\r\n  //------グラフ化-----------\r\n\r\n    const columns: GridColDef[] = [\r\n      {field: \"confirmed\", headerName:\"承認\", width: 60,\r\n      renderCell: (params) => (\r\n        <span style={{color:\"green\",fontWeight:\"bold\"}}>\r\n          {params.row.confirmed && \"承認\"}\r\n        </span>   \r\n    )},\r\n      {field: \"check\", headerName:\"\",width:150,\r\n      renderCell: (params) => (\r\n      <FormGroup>\r\n        <FormControlLabel \r\n        control={\r\n          <Checkbox color=\"success\"\r\n                    className=\"check\"\r\n                    id={params.row.id.toString()} \r\n                    name={params.row.name}\r\n                    onChange={(e)=> handleCheck(e)}\r\n                    disabled={params.row.confirmed}\r\n                    />} \r\n                    label={params.row.name} \r\n                    />\r\n       </FormGroup>\r\n      )},\r\n        \r\n      {field: \"date\", headerName:\"日時\", width:100},\r\n      {field: \"attendance\", headerName:\"グラフ\", width: 250,\r\n      renderCell: (params) => \r\n        attendanceGraph(params.row)\r\n      },\r\n\r\n      {field: \"attendance_time\", headerName:\"出\", width:70,\r\n        renderCell: (params) => \r\n        <div>\r\n         <h5 style={{color: \"red\"}}>\r\n         {formattedTime(params.row.updated_attendance_time,\"(申)\")}\r\n          </h5>\r\n          <h5>{formattedTime(params.row.attendance_time)}</h5>\r\n        </div>\r\n      },\r\n        {field: \"leaving_time\", headerName:\"退\", width:70,\r\n        renderCell: (params) => \r\n        <div>\r\n          <h5 style={{color: \"red\"}}>\r\n            {formattedTime(params.row.updated_leaving_time,\"(申)\")}\r\n          </h5>\r\n          <h5>  {formattedTime(params.row.leaving_time)}</h5>\r\n        </div>},\r\n        {field: \"rest_time\", headerName:\" 休\", width:40,\r\n        renderCell: (params) => \r\n        <div>\r\n         <h5 style={{color: \"red\"}}>\r\n          {params.row.updated_rest_time}\r\n        </h5>\r\n          <h5>{params.row.rest_time || 0}　分</h5>\r\n        </div>\r\n      },\r\n      {field: \"detail\", headerName:\"\", width: 80,\r\n      renderCell: (params) => (\r\n        <DetailModal params={params.row} formattedTime={formattedTime}/>\r\n      )},\r\n        {field: \"comment\", headerName:\"備考\"},\r\n       \r\n      ];\r\n\r\n      return(\r\n      <>  \r\n          <Box sx={{height: \"100%\", position: \"relative\"}}>\r\n          {state == 'OK' ?\r\n            <DataGrid\r\n            rows={list}\r\n            columns={columns}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[5]}\r\n\r\n            localeText={jaJP.components.MuiDataGrid.defaultProps.localeText}\r\n            />\r\n            :\r\n            <PageLoadingCircle/>\r\n      }\r\n       \r\n\r\n            </Box>\r\n\r\n           \r\n      </>\r\n\r\n    )\r\n}","import React, { useEffect, useReducer, useState, useContext, useMemo } from \"react\"\r\n\r\nimport { Button, CircularProgress, List, Stack, Switch, Typography } from \"@mui/material\";\r\nimport { AttendanceReducer, initialState } from \"../reducers/attendances\";\r\nimport { AttendanceGraph } from \"../components/attendances/AttendanceGraph\";\r\nimport { approveRequest, fetchManageAttendance } from \"../apis/attendance\";\r\nimport { SelectDate } from \"../components/shared/SelectDate\";\r\nimport { BadgeContext } from \"../contexts/badge\";\r\nimport { SnackbarContext } from \"../contexts/snackBar\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst SCALE = 4;\r\n\r\n\r\nexport const ManageAttendance = ({\r\n \r\n}) => {\r\n\r\n  //------------------state----------------\r\n\r\nconst [checked, setChecked]= useState([]);\r\nconst [list, setList] = useState([]);\r\nconst [filter, setFilter] = useState(false);\r\nconst [loading, setLoading] = useState(false);\r\n\r\nconst [state, dispatch] = useReducer(AttendanceReducer, initialState);\r\nconst sb = useContext(SnackbarContext)\r\n\r\nconst handleCheck = (e) => {\r\n  console.log(e.target.checked)\r\n\r\n    \r\n  if (e.target.checked){\r\n    setChecked([...checked,\r\n    {id: e.target.id,\r\n    name: e.target.name}])\r\n \r\n  }else{\r\n    var filtered = checked.filter(elm => {\r\n      return elm.id != e.target.id\r\n    })\r\n    setChecked(filtered)\r\n  } \r\n  console.log(checked)\r\n} \r\n\r\n\r\nconst approveTimecard = () => {\r\n  setLoading(true)\r\n  console.log(checked)\r\n  var ids = checked.map(elm => elm.id)\r\n  try {\r\n    approveRequest(ids)\r\n    .then(res => {\r\n      if(res.status !== 200){\r\n        sb.setSnackBar({variant: \"error\", content: \"承認できませんでした\", open: true})\r\n        setLoading(false)\r\n        return\r\n      }\r\n      sb.setSnackBar({variant: \"success\", content: \"勤怠を承認しました\", open: true})\r\n      setLoading(false)\r\n    }\r\n      )\r\n  }catch (e){\r\n    console.log(e.message);\r\n  }\r\n\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dispatch({type: \"FETCHING\"});\r\n      fetchManageAttendance()\r\n      .then((res) => {\r\n      dispatch({type: \"FETCH_END\",\r\n      payload: res.data.attendances\r\n    })\r\n  })\r\n    }catch (e){\r\n      console.log(e.message);\r\n    }\r\n  },[]);\r\n\r\n  return useMemo(() => {\r\n\r\n  return(\r\n      <>      \r\n      <div style={{ height: 450, width: '95%' }}>\r\n        <Stack sx={{my:1}} direction=\"row\">\r\n        {filter ? \r\n          \"\"\r\n          :\r\n            <SelectDate \r\n            list={state.attendanceData}\r\n            setList={setList}\r\n            />\r\n        }\r\n\r\n        <Box  style={{marginLeft:\"auto\"}}>\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n            <Switch\r\n              checked={filter}\r\n              onChange={() => setFilter(!filter)}\r\n            />\r\n            <Typography variant=\"subtitle1\">未承認のみ</Typography>\r\n            <Button \r\n            style={{marginLeft:\"auto\"}}\r\n            variant=\"contained\" \r\n            color=\"success\"\r\n            // disabled={(checked.length == 0 || loading)}\r\n            onClick={() => \r\n              {if (window.confirm(\"選択中の勤怠を承認しますか？\"))\r\n              {approveTimecard()}\r\n            }}\r\n            endIcon={loading ? <CircularProgress sx={{width: \"1rem\", height: \"1rem\"}} />:\"\"}\r\n            >\r\n            　　　承　認　　　\r\n        </Button>\r\n          </Stack>\r\n          \r\n\r\n        </Box>\r\n\r\n        </Stack>\r\n          <AttendanceGraph \r\n            state={state.fetchState} \r\n            list={filter ? state.attendanceData.filter(l => !l.confirmed) : list}\r\n            handleCheck={handleCheck}\r\n          />\r\n\r\n      </div>\r\n\r\n      \r\n      </>\r\n\r\n    )\r\n  },[list,filter,state,checked])\r\n}","import axios from \"axios\";\r\nimport { approveTimestamp, attendanceList, manageAttendance } from \"../urls/urlList\"\r\n\r\nexport const fetchManageAttendance = () => {\r\n    return axios.get(manageAttendance)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\nexport const fetchAttendance = () => {\r\n    return axios.get(attendanceList)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\nexport const approveRequest = (ids) => {\r\n    return axios.patch(approveTimestamp,{ids: ids})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\r\nimport Image from \"./mountain.jpg\";\r\nimport { updateNotificationRead } from \"../../apis/notification\";\r\nimport { BadgeContext } from \"../../contexts/badge\";\r\nimport { formattedTime } from \"../../lib/calcDate\";\r\n\r\n\r\nexport const NotificationFeed = ({\r\n    index,\r\n    notification, \r\n    selected, \r\n    setSelected\r\n}) => {\r\n\r\n    const [read, setRead] = useState(notification.read);\r\n    const badge = useContext(BadgeContext)\r\n    const time = formattedTime(new Date(notification.created_at).getTime() /1000)\r\n\r\n    const handleClick = () => {\r\n        setSelected(index)\r\n        if(!read){\r\n            updateNotificationRead(notification.id)\r\n            .then((res) =>{\r\n                if(res.status !== 200){return}\r\n            setRead(true)\r\n            badge.setBadge({...badge.badge, notification: badge.badge.notification -1})\r\n            })\r\n    }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setRead(notification.read);\r\n    },[])\r\n    \r\n    return (\r\n    <div>\r\n    <ListItem\r\n        style={read ?  {backgroundColor: \"rgb(180,180,180)\"} : {}}\r\n        button \r\n        selected={selected==index}\r\n        onClick={() => handleClick()}\r\n   >\r\n        <ListItemIcon>\r\n        <Avatar src={Image} />\r\n    </ListItemIcon>\r\n    \r\n    <ListItemText primary={notification.title}/>\r\n    <span>{time}</span>\r\n    </ListItem>\r\n    </div>\r\n    )\r\n\r\n\r\n}","import axios from \"axios\";\r\nimport { allNotifications, newNotification, notificationList, updateNotification} from \"../urls/urlList\";\r\n\r\nexport const fetchNotifications = () => {\r\n    return axios.get(notificationList)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n\r\nexport const fetchAllNotifications = () => {\r\n    return axios.get(allNotifications)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\nexport const createNotification = (params) => {\r\n    return axios.post(newNotification, {notification: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n\r\n\r\nexport const updateNotificationRead = (id) => {\r\n    return axios.patch(updateNotification,{id: id})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n","import { REQUEST_STATUS } from \"../components/const\";\r\n\r\nexport const notificationsInitialState  = {\r\n    fetchState: REQUEST_STATUS.START,\r\n    notificationsList :[]\r\n}\r\n\r\n\r\nexport const notificationsReducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case \"FETCHING\":\r\n            return {\r\n                ...state,\r\n                fechState: REQUEST_STATUS.LOADING,\r\n            };\r\n        case \"FETCH_END\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                notificationsList: action.payload\r\n            };\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n\r\n\r\n}","import { Button, Drawer, List, Paper, Skeleton, Typography} from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport React, { Fragment, useContext, useEffect, useReducer, useState } from \"react\"\r\nimport { fetchAllNotifications, fetchNotifications } from \"../apis/notification\"\r\nimport { STYLE_2 } from \"../components/const\"\r\nimport { NotificationFeed } from \"../components/notifications/Feed\"\r\nimport { AuthContext } from \"../contexts/auth\"\r\nimport { SnackbarContext } from \"../contexts/snackBar\"\r\nimport { notificationsInitialState, notificationsReducer } from \"../reducers/notifications\"\r\n\r\nexport const Notification = () => {\r\n\r\n    const [selected, setSelected] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const sb = useContext(SnackbarContext);\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [state, dispatch] = useReducer(notificationsReducer, notificationsInitialState)\r\n\r\n    const drawerWidth = 220;\r\n\r\n    const viewAll = () => {\r\n      try{\r\n        dispatch({type: \"FETCHING\"})\r\n        fetchAllNotifications()\r\n        .then(res => {\r\n            dispatch({\r\n              type: \"FETCH_END\",\r\n              payload: res.data.notifications\r\n            })\r\n        })\r\n      .catch(e => {\r\n        if (e.response.status === 403) {\r\n          auth.sessionForbidden()\r\n          } else {\r\n            throw e;\r\n          }\r\n        })\r\n      }\r\n      catch(e){console.log(e)}\r\n    }\r\n\r\n    const sortByRead = state.notificationsList.sort((a,b) =>{\r\n      return (Number(a.read) - Number(b.read))\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n      try{\r\n        dispatch({type: \"FETCHING\"})\r\n        fetchNotifications()\r\n        .then(res => {\r\n            dispatch({\r\n              type: \"FETCH_END\",\r\n              payload: res.data.notifications\r\n            })\r\n        })\r\n        .catch(e => {\r\n        if (e.response.status === 403) {\r\n          auth.sessionForbidden()\r\n         } else {\r\n           throw e;\r\n         }\r\n        })\r\n      }\r\n      catch(e){console.log(e)}\r\n     \r\n    },[])\r\n\r\n    \r\nreturn (\r\n    <>\r\n      <Fragment>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          open={true}\r\n          anchor=\"right\"\r\n        >\r\n        <Box\r\n        sx={{ width:drawerWidth}}\r\n        role=\"presentation\"\r\n        >\r\n                       \r\n    {state.fetchState == \"OK\" ?\r\n    <>\r\n        {state.notificationsList.length > 0 ?\r\n        <List>\r\n          {sortByRead.map((notification, index) => (\r\n              <NotificationFeed \r\n                key={index}\r\n                index={index} \r\n                notification={notification}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n               \r\n              />\r\n          ))}\r\n        </List>\r\n        :\r\n          <Box sx={{ p:1, height:200 }}>\r\n            <Typography component=\"div\" variant=\"subtitle\">\r\n              現在通知はありません\r\n            </Typography>\r\n          </Box>\r\n        }\r\n    </>\r\n    :  \r\n    <>\r\n     {\r\n      [...Array(4).keys()].map(i => \r\n        <Box key={i} sx={{ height:50 }}>\r\n          <Typography component=\"div\" key={i} variant=\"caption\">\r\n            <Skeleton />\r\n            <Skeleton />\r\n          </Typography>\r\n        </Box>\r\n      )\r\n     }\r\n    \r\n    </>\r\n    }\r\n   \r\n    </Box>\r\n    <Box sx={{p:1}}>\r\n    <Button \r\n      id=\"allNotifications\"\r\n      fullWidth \r\n      variant=\"outlined\" \r\n      color=\"primary\"\r\n      disabled={loading}\r\n      onClick={() => viewAll()}\r\n       >すべて見る</Button>\r\n      \r\n    </Box>\r\n  \r\n    </Drawer>\r\n  </Fragment>\r\n  <Paper elevation={3} sx={{width: `calc(100% - ${drawerWidth}px)`, height: 400, ...STYLE_2}}>\r\n      <Box sx={{p: 2}}>\r\n                    \r\n    {state.notificationsList.length > 0 &&\r\n      <div>\r\n          <h2>{state.notificationsList[selected].title}</h2>\r\n          <h3>送信者：　{state.notificationsList[selected].name}</h3>\r\n          <div>{state.notificationsList[selected].content}</div>\r\n      </div>\r\n    }\r\n      </Box>\r\n  </Paper>\r\n   \r\n</>\r\n)\r\n\r\n\r\n}\r\n","import React, { useState, useContext, useMemo } from \"react\";\r\nimport { Button, Checkbox, Divider, FormControl, FormControlLabel, FormGroup, FormLabel, IconButton, InputLabel, NativeSelect, Paper, Radio, RadioGroup, Stack, TextField, Tooltip, Typography } from \"@mui/material\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { STYLE_2 } from \"../components/const\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport { ConfigContext } from \"../contexts/config\";\r\nimport { formattedDate } from \"../lib/calcDate\";\r\nimport { sendOrgParams } from \"../apis/config\";\r\nimport { SnackbarContext } from \"../contexts/snackBar\";\r\n\r\n\r\nexport const Setting = () => {\r\n   \r\n  const orgConfig = useContext(ConfigContext);\r\n  const sb = useContext(SnackbarContext);\r\n  const colors=  \r\n  [ \r\n    {\"key\":\"red\",\"value\": orgConfig.params.red},\r\n    {\"key\":\"royalblue\",\"value\": orgConfig.params.royalblue},\r\n    {\"key\":\"green\",\"value\": orgConfig.params.green},\r\n    {\"key\":\"orange\",\"value\": orgConfig.params.orange},\r\n  ]\r\n    \r\n  const initialDate = {\r\n    submittable_start: new Date(orgConfig.params.submittable_start),\r\n    submittable_end: new Date(orgConfig.params.submittable_end), \r\n  }  \r\n  const month = useMemo(()=>([...Array(29)].map((_,i)=>`${i +1}日`)),[]);\r\n  const hours = useMemo(()=>([...Array(25).keys()]),[]);\r\n  const [date, setDate] = useState(initialDate);\r\n  const [event, setEvent] = useState({})\r\n \r\n  \r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const handleChange = (e) => {\r\n    setEvent({\r\n      ...event,\r\n      [e.target.name]: e.target.value\r\n   })\r\n    console.log(event)\r\n  }\r\n\r\n   \r\n\r\n  const onSubmit = (params) => {\r\n    sendOrgParams({...params, ...date, ...event})\r\n    .then(res => {\r\n      if(res.status !== 200){return}\r\n      orgConfig.setParams({\r\n        ...res.data.config,\r\n        orgName: res.data.orgName,\r\n        orgAddress: res.data.orgAddress\r\n      })\r\n      sb.setSnackBar({open: true, variant: \"success\", content: \"情報をしました。\"})\r\n\r\n    })\r\n  }\r\n\r\n    return (\r\n      <Paper sx={{p:1, ...STYLE_2}}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack \r\n          sx={{py:2}}\r\n          direction=\"row\" \r\n          alignItems=\"center\"\r\n          spacing={2} \r\n          justifyContent=\"end\"\r\n          >\r\n          <Typography varinat=\"h6\">責任者： {orgConfig.params.name} </Typography>\r\n          <TextField \r\n             {...register('name',{ required: \"※組織名が入力されてません\"})} \r\n            label=\"組織名\" \r\n            className=\"mui-input\"\r\n            defaultValue={orgConfig.params.orgName}\r\n          />\r\n        </Stack>\r\n        <Stack>\r\n        <TextField \r\n         {...register('address',{ required: \"※所在地が入力されてません\"})} \r\n          fullWidth \r\n          sx={{my:1, maxWidth: 400, marginLeft: \"auto\"}}\r\n          label=\"所在地\"\r\n          className=\"mui-input\"\r\n          defaultValue={orgConfig.params.orgAddress}\r\n          />\r\n        </Stack>\r\n       \r\n        <Stack \r\n          direction=\"row\" \r\n          spacing={2} \r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n        <Tooltip title=\"営業時間はシフト提出で勤務可能な時間に反映されます。\">\r\n          <Typography variant=\"subtitle1\">営業時間</Typography>\r\n        </Tooltip>\r\n        <div>\r\n          <FormControl sx={{m:1, width:50}} >\r\n          <InputLabel>時</InputLabel>\r\n              <NativeSelect\r\n                 {...register('open',{ required: \"※営業開始時間が入力されてません\"})} \r\n                className=\"mui-input\"\r\n                label=\"時\"\r\n                defaultValue={orgConfig.params.open}\r\n              > \r\n              {hours.map(n => \r\n                  <option key={n} value={n}>{n}</option>\r\n                  )\r\n              }   \r\n              </NativeSelect>\r\n              </FormControl>　～\r\n              <FormControl sx={{ m: 1, width:50}} >\r\n              <InputLabel>時</InputLabel>\r\n              <NativeSelect\r\n                {...register('close',{ required: \"※営業終了時間が入力されてません\"})} \r\n                className=\"mui-input\"\r\n                label=\"時間\"\r\n                defaultValue={orgConfig.params.close}\r\n              > \r\n              {hours.map(n => \r\n                  <option key={n} value={n}>{n}</option>\r\n                  )\r\n              }   \r\n              </NativeSelect>\r\n            </FormControl>\r\n\r\n        </div>\r\n        </Stack>\r\n\r\n        <Divider sx={{my:1}} />\r\n\r\n      {/* <Typography variant=\"h6\">チャット</Typography>\r\n      <Stack\r\n          direction=\"row\" \r\n          spacing={2} \r\n          alignItems=\"center\"\r\n          justifyContent=\"end\"\r\n          >\r\n        <Tooltip title=\"ON状態だとチャット画面を離れていてもブラウザに通知が届きます。\">\r\n          <FormGroup>\r\n            <FormControlLabel \r\n              control=\r\n              {<Checkbox\r\n                　{...register('chat_notice')} \r\n                 checked={orgConfig.params.chat_notice}\r\n                 />}\r\n              label=\"ブラウザ通知\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </FormGroup>\r\n          </Tooltip>\r\n       \r\n        </Stack>\r\n      */}\r\n        \r\n        <Divider sx={{my:1}} />\r\n\r\n        <Typography variant=\"h6\">シフト</Typography>\r\n        <Stack\r\n         direction=\"row\" \r\n         spacing={2} \r\n         alignItems=\"center\"\r\n         justifyContent=\"space-between\"\r\n        >\r\n        \r\n          <Typography variant=\"subtile1\">最低勤務時間</Typography>\r\n          <div>\r\n       \r\n          <FormControl sx={{ m: 1, width:50}}>\r\n          <InputLabel>時間</InputLabel>\r\n              <NativeSelect\r\n                {...register('min_work_time')} \r\n                className=\"mui-input\"\r\n                label=\"時間\"\r\n                defaultValue={orgConfig.params.min_work_time}\r\n              > \r\n              {hours.map(n => \r\n                  <option key={n} value={n}>{n}</option>\r\n                  )\r\n              }   \r\n              </NativeSelect>\r\n          </FormControl>　\r\n          </div>\r\n        </Stack>\r\n        <Typography variant=\"subtile1\">シフト提出対象期間</Typography>\r\n       \r\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"end\">\r\n      \r\n          <FormControl sx={{width:100}}>\r\n           \r\n          {/* <IconButton> */}\r\n          <Typography variant=\"h6\">毎月</Typography>\r\n          <NativeSelect\r\n                {...register('min_work_time')} \r\n                className=\"mui-input\"\r\n                label=\"日付\"\r\n                defaultValue={orgConfig.params.shift_start_day || 1}\r\n              > \r\n              {month.map(n => \r\n                  <option key={n} value={n}>{n}</option>\r\n                  )\r\n              }   \r\n              </NativeSelect>\r\n\r\n          {/* </IconButton> */}\r\n          \r\n          </FormControl>\r\n\r\n          \r\n          {/* <Typography variant=\"h6\">提出日数</Typography>\r\n          <FormControl sx={{ width:100}}>\r\n    \r\n          <IconButton>\r\n          <NativeSelect\r\n                {...register('min_work_time')} \r\n                className=\"mui-input\"\r\n                label=\"日数\"\r\n                defaultValue={orgConfig.params.span}\r\n              > \r\n              {month.map(n => \r\n                  <option key={n} value={n}>{n}</option>\r\n                  )\r\n              }   \r\n              </NativeSelect>\r\n\r\n          </IconButton>　\r\n          \r\n          </FormControl>\r\n          */}\r\n        </Stack>\r\n        <Divider sx={{my:2}} />\r\n        <Typography variant=\"h6\">勤怠打刻</Typography>\r\n        <Stack \r\n          sx={{py:2}}\r\n          direction=\"row\" \r\n          alignItems=\"center\"\r\n          spacing={2} \r\n          justifyContent=\"space-between\"\r\n          >\r\n        <Tooltip title=\"従業員が打刻可能な所在地からの距離を変更できます。\">\r\n          <Typography variant=\"subtitle1\">打刻可能な距離</Typography>\r\n        </Tooltip>\r\n          <TextField \r\n            {...register('stampable_distance')} \r\n            label=\"m\" \r\n            className=\"mui-input\"\r\n            type=\"number\"\r\n            defaultValue={orgConfig.params.stampable_distance}\r\n          />\r\n        </Stack>\r\n  \r\n        <Divider sx={{my:2}} />\r\n        <Typography variant=\"h6\">カレンダー</Typography>\r\n        <Stack \r\n          sx={{py:2}}\r\n          direction=\"row\" \r\n          justifyContent=\"space-between\"\r\n        >\r\n        <Tooltip title=\"カレンダーのイベント名を変更できます。\">\r\n          <Typography variant=\"subtitle1\">イベント名</Typography>\r\n        </Tooltip>\r\n        <div>\r\n          <FormControl>\r\n            <RadioGroup row >\r\n            {colors.map(c =>  \r\n            <div key={c.key}>\r\n              <TextField  \r\n                style={{width:80, backgroundColor:\"white\"}}\r\n                size=\"small\"\r\n                name={c.key}\r\n                defaultValue={c.value}\r\n                onChange={handleChange}\r\n              />\r\n           \r\n              <FormControlLabel\r\n              key={c.key}\r\n                value={c.key} \r\n                control={\r\n                <Radio\r\n                  sx={{color: c.key}}\r\n                  />} \r\n              />  \r\n            </div>\r\n            )}\r\n          \r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n       \r\n      </Stack>\r\n      <Stack sx={{my:2}}>\r\n      <Button \r\n          fullWidth\r\n          type=\"submit\"\r\n          style={{margin:\"0 auto\", maxWidth:300}}\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n        >\r\n          保存\r\n        </Button>\r\n       \r\n\r\n      </Stack>\r\n    \r\n       \r\n        </form>\r\n      </Paper>\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport { newProfile, updateOrgConfig, updateProfile } from \"../urls/urlList\";\r\n\r\n\r\nexport const fetchProfile = () => {\r\n    return axios.get(newProfile)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\nexport const fetchOrgParams = () => {\r\n    return axios.get(newProfile)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\nexport const sendProfile = (params) => {\r\n    return axios.patch(updateProfile, {profile: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\nexport const sendOrgParams = (params) => {\r\n    return axios.patch(updateOrgConfig, {config: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\r\nimport BadgeOutlinedIcon from '@mui/icons-material/BadgeOutlined';\r\nimport AccessTimeOutlinedIcon from '@mui/icons-material/AccessTimeOutlined';\r\nimport TaskOutlinedIcon from '@mui/icons-material/TaskOutlined'; \r\nimport NotificationsActiveOutlinedIcon from '@mui/icons-material/NotificationsActiveOutlined';\r\nimport Badge from '@mui/material/Badge';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport { TaskCards } from '../components/tasks/TaskCards';\r\nimport { Calendar} from './Calendar';\r\nimport { Shift } from './Shift';\r\n\r\nimport { ManageAttendance } from './ManageAttendance';\r\nimport { Notification } from './Notification';\r\nimport { fetchInitialNotifications } from '../apis/employees';\r\nimport { AuthContext } from '../contexts/auth';\r\nimport { SnackbarContext } from '../contexts/snackBar';\r\n\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { NewEmployeeModal } from './NewEmployeeModal';\r\nimport { BadgeContext } from '../contexts/badge';\r\nimport { Setting } from './Setting';\r\nimport { ConfigContext } from '../contexts/config';\r\n\r\nconst today = new Date()\r\nconst initialPeriod = [today.getFullYear(),today.getMonth()+1]\r\n\r\n\r\nexport const Management = () => {\r\n \r\n  const drawerWidth = 220;\r\n  \r\n  const [openState, setOpenState] = useState(\"task\");\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [period, setPeriod] = useState(initialPeriod);\r\n \r\n\r\n  const history = useHistory();\r\n\r\n  const auth = useContext(AuthContext);\r\n  const badge = useContext(BadgeContext); \r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n\r\nconst handleLogout = () => {\r\n  if(window.confirm(\"ログアウトしますか？\")){auth.logout()}\r\n}\r\n\r\nconst handlePush = (message) => {\r\n  \r\n  // Push.create(`${message.name}さんよりメッセージ`,\r\n  // {\r\n  //   body: message.content,\r\n  //   icon: message.image,\r\n  //   timeout:5000,\r\n  //   onClick: function () {\r\n  //   history.push(\"/chat\")\r\n  //   }\r\n  // })\r\n}\r\n\r\n\r\n  const switchRender = () => {\r\n   \r\n    switch(openState){\r\n\r\n      case \"shift\":\r\n        return (<Shift  />)\r\n      case \"attendance\":\r\n        return (<ManageAttendance />)\r\n      case \"calendar\":\r\n        return (<Calendar setOpenState={setOpenState}/>)\r\n      case \"task\":\r\n        return (<TaskCards/>)\r\n      case \"notification\":\r\n        return (<Notification />)\r\n      case \"setting\":\r\n        return (<Setting />) \r\n\r\n    }\r\n  }\r\n\r\n\r\n  const drawer = (\r\n    <div>\r\n    <Toolbar>\r\n    <Link to =\"/employeeDashboard\">\r\n      {auth.state.name}\r\n      </Link>\r\n\r\n    </Toolbar>\r\n     \r\n     \r\n      <Divider />\r\n      <List>\r\n      <Link to=\"/employees\">\r\n        <ListItem button >\r\n          <ListItemIcon>\r\n               <PersonOutlineOutlinedIcon /> \r\n            </ListItemIcon>\r\n            <ListItemText primary=\"従業員管理\" />\r\n          </ListItem>\r\n          </Link>\r\n        <Link to=\"/chat\">\r\n        <ListItem button key=\"chat\">\r\n          <ListItemIcon>\r\n              <Badge color=\"error\" badgeContent={badge.badge.message}>\r\n                <ChatOutlinedIcon /> \r\n              </Badge>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"チャット\" />\r\n          </ListItem>\r\n          </Link>\r\n{/*        \r\n          <ListItem button key=\"notification\"  onClick={()=>{setOpenState(\"notification\")}}>\r\n            <ListItemIcon>\r\n            <Badge color=\"error\" badgeContent={badge.badge.notification}>\r\n               <NotificationsActiveOutlinedIcon  /> \r\n            </Badge>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"通知\" />\r\n          </ListItem> */}\r\n        \r\n       \r\n          <ListItem button key=\"shift\" onClick={()=>{setOpenState(\"shift\")}}>\r\n            <ListItemIcon>\r\n            <Badge color=\"error\" badgeContent={badge.badge.shift}>\r\n                <BadgeOutlinedIcon /> \r\n            </Badge>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"シフト\" />\r\n          </ListItem>\r\n         \r\n        <ListItem button key=\"attendance\" onClick={()=>{setOpenState(\"attendance\")}}>\r\n          <ListItemIcon>\r\n          <Badge color=\"error\" badgeContent={badge.badge.attendance}>\r\n            <AccessTimeOutlinedIcon /> \r\n            </Badge>\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"打刻履歴\" />\r\n        </ListItem> \r\n\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n\r\n      <ListItem button key=\"carender\" onClick={()=>{setOpenState(\"calendar\")}}>\r\n            <ListItemIcon >\r\n            <Badge color=\"error\" badgeContent={badge.badge.calendar}>\r\n              <DateRangeOutlinedIcon  />\r\n            </Badge>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"カレンダー\" />\r\n          </ListItem>\r\n        \r\n          <ListItem button key=\"task\" onClick={()=>{setOpenState(\"task\")}}>\r\n            <ListItemIcon >\r\n            <Badge color=\"error\" badgeContent={badge.badge.task}>\r\n              <TaskOutlinedIcon />\r\n            </Badge>\r\n            </ListItemIcon>\r\n              <ListItemText primary=\"タスク\" />\r\n          </ListItem>\r\n\r\n          <ListItem button key=\"setting\" onClick={()=>{setOpenState(\"setting\")}}>\r\n          <ListItemIcon>\r\n            < SettingsOutlinedIcon /> \r\n          </ListItemIcon>\r\n          <ListItemText primary=\"設定\" />\r\n        </ListItem> \r\n        \r\n\r\n          <ListItem>\r\n            <Button \r\n              fullWidth \r\n              color=\"error\" \r\n              variant=\"outlined\"\r\n              onClick={() => handleLogout()}>\r\n              ログアウト\r\n            </Button>\r\n          </ListItem>\r\n      \r\n      </List>\r\n    </div>\r\n  );\r\n  \r\n    \r\n// const sock = new WebSocket(\"ws://127.0.0.1:5500\");\r\n// function click(){\r\n//   sock.send(text);\r\n//   };\r\n\r\n    \r\n// sock.addEventListener(\"open\", e => {\r\n//   console.log(\"接続が開かれたときに呼び出されるイベント\");\r\n// });\r\n\r\n// sock.addEventListener(\"message\", e => {\r\n// console.log(e.data)\r\n//   setDisplay(e.data)\r\n// });\r\n\r\n// sock.addEventListener(\"close\", e => {\r\n//   console.log(\"接続が閉じられたときに呼び出されるイベント\");\r\n// });\r\n\r\n// sock.addEventListener(\"error\", e => {\r\n//   console.log(\"エラーが発生したときに呼び出されるイベント\");\r\n// });\r\n\r\n// return ()=> sock.close()\r\n    \r\n//   joinedSocket.connect().on(\"PUSH_MESSAGE\",function(message){\r\n//     if(orgConfig.params.chat_notice){return}\r\n//     handlePush(message)\r\n// })\r\n\r\n// joinedSocket.connect().on(\"getJoinedIds\",function(){\r\n//   const ids = JSON.parse(sessionStorage.getItem(\"qotRoomIds\"))\r\n//   joinedSocket.emit(\"reConnect\",ids)\r\n// })\r\n\r\n  // const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\r\nreturn useMemo(() => {\r\n\r\n    return (\r\n  \r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { szpshim: 'none' } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        \r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          // container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: 'none', sm: 'block' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)` } }}\r\n      >\r\n        <Toolbar />\r\n        {switchRender()}\r\n    \r\n      </Box>\r\n    </Box>\r\n      )},[openState])\r\n    \r\n    \r\n    }\r\n\r\n  \r\n\r\n","import { Button } from \"@mui/material\";\r\nimport React,{ useEffect, useState } from \"react\";\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nexport const Clock = () => {\r\n    \r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [date, setDate] = useState(new Date());\r\n  \r\n  \r\n    const tick = () => { \r\n        setDate(new Date());\r\n    }\r\n\r\n    \r\n\r\n    useEffect(()=>{ \r\n        setInterval(tick, 1000);\r\n    },[]\r\n  \r\n    );\r\n  \r\n        \r\n    return (\r\n      <div>\r\n        <Typography variant=\"h1\" component=\"div\" gutterBottom>\r\n        {date.toLocaleTimeString()}\r\n        </Typography>\r\n       \r\n         </div>\r\n    );\r\n  \r\n  \r\n  \r\n}","import React from \"react\"\r\nimport { GoogleMap, LoadScript, Marker, Circle } from \"@react-google-maps/api\";\r\n\r\nimport Icon from \"../../images/offices-buildings-svgrepo-com.svg\";\r\nconst containerStyle = {\r\n    width: \"100%\",\r\n    height: \"300px\",\r\n  };\r\n\r\n  const circleOptions = {\r\n    strokeColor: \"#FF0000\",\r\n    strokeOpacity: 0.8,\r\n    strokeWeight: 2,\r\n    fillColor: \"#FF0000\",\r\n    fillOpacity: 0.35,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    visible: true,\r\n    radius: 30000,\r\n  };\r\n \r\nexport const TimestampMap = ({officePosition, myPosition}) => (\r\n  <LoadScript googleMapsApiKey={process.env.GOOGLE_MAP_API}>\r\n\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={myPosition}\r\n                zoom={18}\r\n            >\r\n            <Marker position={myPosition} zIndex={2} />\r\n            <Marker \r\n              position={officePosition}\r\n              icon={{\r\n                url:Icon,\r\n                scale: 0.05\r\n              }}\r\n              \r\n            />\r\n\r\n            <Circle\r\n            center={myPosition}\r\n            radius={30}\r\n            options={circleOptions}\r\n            />\r\n            </GoogleMap>\r\n          </LoadScript>\r\n)","import React, { useContext, useState } from \"react\"\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport { DefaultModal } from \"../shared/DefaultModal\";\r\nimport {TimestampMap} from \"./TimestampMap\"\r\nimport { createTimestamp } from \"../../apis/timestamp\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\n\r\nexport const AttendanceButton = ({\r\n  checkDistance,\r\n  officePosition,\r\n  style,\r\n  buttonState,\r\n  setButtonState}) => { \r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [content, setContent] =useState(\"\");\r\n  const sb = useContext(SnackbarContext);\r\n\r\n  //---------------gps-------------------\r\n  \r\n  const options = {\r\n    enableHightAccuracy: true,\r\n    timeout: 10000,    \r\n}\r\n\r\nconst dynamicStyle = {\r\n  ...style,\r\n  backgroundColor: buttonState.at? \"\":\"green\" ,\r\n  color:  buttonState.at? \"gray\" : \"white\"\r\n}\r\n\r\n// const dateTime = new Date(position.timestamp)\r\n\r\n// return(\r\n//     <>\r\n//     <div style={{fontWeight: \"bold\"}}>\r\n//       <span>{dateTime.getMonth()+1}</span>月\r\n//       <span>{dateTime.getDate()}</span>日\r\n//       <span>{dateTime.getHours()}</span>時\r\n//       <span>{dateTime.getMinutes()}</span>分\r\n//     </div>\r\n//     </>\r\n// )\r\n\r\nconst success = (position) => {\r\n    const coords = position.coords\r\n      var myPosition = {\r\n        lat: coords.latitude,\r\n        lng: coords.longitude\r\n      }\r\n      console.log(\"success\")\r\n     \r\n      // if (!checkDistance(myPosition)){\r\n       \r\n      //   return false\r\n      // }\r\n\r\n\r\n      createTimestamp({attendance_time: (position.timestamp / 1000)})\r\n      .then((data) => {\r\n        \r\n          var content = (\r\n            <div>\r\n               <TimestampMap\r\n                  officePosition={officePosition} \r\n                  myPosition={myPosition}\r\n                />\r\n\r\n                <h1 style={{color:\"green\"}}>出　勤</h1>\r\n                {/* {defaultText(position)} */}\r\n                <h5>{data.name}</h5>\r\n                <p>本日も一日頑張りましょう！</p>\r\n            </div>\r\n          )\r\n        \r\n        setContent(content)\r\n     \r\n    })\r\n      .catch((e) => console.log(e.message))\r\n    }\r\n\r\n    const error = (err) => {\r\n        switch(err.code){\r\n          case \"Network location\":\r\n        }\r\n        console.error(`${err.code}: ${err.message}`);\r\n    }\r\n\r\n    \r\n    //---------------------------------------\r\n\r\n\r\n  \r\n  const handleClick = () => {\r\n\r\n    setButtonState({...buttonState, at: true})\r\n    navigator.geolocation.getCurrentPosition(success, error, options);\r\n    setOpen(true)\r\n\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <>\r\n   <button\r\n    style={dynamicStyle}\r\n    className=\"stampingButton\"\r\n    onClick={(e) => handleClick(e)}\r\n    disabled={buttonState.at}\r\n    >出　勤\r\n    </button>\r\n\r\n\r\n    <DefaultModal\r\n     open={open} \r\n     setOpen={setOpen} \r\n     content={content} \r\n     />\r\n      \r\n    </>\r\n\r\n    \r\n  )\r\n\r\n\r\n\r\n}","import axios from \"axios\";\r\nimport { approveTimestamp, modulateTimestamp, newTimestamp, timestampStandby } from \"../urls/urlList\"\r\n\r\n//-----------------fetch-----------------\r\nexport const getTimestampStandby = () => {\r\n    return axios.get(timestampStandby)\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n//-------------------post-------------------\r\nexport const createTimestamp = (params) => {\r\n    return axios.post(newTimestamp, {timestamps: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n//-------------patch--------------------\r\n\r\nexport const updateTimestamp = (params) => {\r\n    return axios.patch(newTimestamp, {timestamps: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\nexport const modulateRequest = (params) => {\r\n    return axios.patch(modulateTimestamp,{timestamps: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\nexport const approveRequest = (params) => {\r\n    return axios.patch(approveTimestamp,{ids: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) => console.log(e))\r\n}\r\n\r\n\r\n","import React, { useState, useContext } from \"react\"\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport { DefaultModal } from \"../shared/DefaultModal\";\r\nimport {TimestampMap} from \"./TimestampMap\"\r\nimport { updateTimestamp } from \"../../apis/timestamp\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\n\r\n\r\nexport const LeavingButton = ({\r\n  checkDistance,\r\n  officePosition,\r\n  style,\r\n  buttonState,\r\n  setButtonState\r\n}) => { \r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [content, setContent] =useState(\"\");\r\n  const sb = useContext(SnackbarContext)\r\n\r\n  //---------------gps-------------------\r\n  \r\n  const options = {\r\n    enableHightAccuracy: true,\r\n    timeout: 10000,    \r\n}\r\n\r\n\r\nconst dynamicStyle = {\r\n  ...style,\r\n  backgroundColor: buttonState.lv? \"\":\"orange\" ,\r\n  color:  buttonState.lv? \"gray\" : \"white\"\r\n}\r\n\r\nconst success = (position) => {\r\n    const coords = position.coords\r\n  \r\n      // if (!checkDistance(coords)){\r\n      //   return false\r\n      // }\r\n\r\n      \r\n      const myPosition = {\r\n        lat: coords.latitude,\r\n        lng: coords.longitude,\r\n        zIndex: 1,\r\n      }\r\n            \r\n\r\n      updateTimestamp({leaving_time: (position.timestamp / 1000)})\r\n      .then((data) => {\r\n        \r\n          var content = (\r\n            <div>\r\n                <TimestampMap\r\n                  officePosition={officePosition} \r\n                  myPosition={myPosition}\r\n                />\r\n                <h1 style={{color:\"orange\"}}>退　勤</h1>\r\n                {/* {defaultText(position)} */}\r\n                <h5>{data.name}</h5>\r\n                <p>本日もお疲れ様でした。</p>\r\n            </div>)\r\n        \r\n        setContent(content)\r\n      \r\n    })\r\n      .catch((e) => console.log(e.message))\r\n    }\r\n\r\n\r\n    const error = (err) => {\r\n        console.error(`${err.code}: ${err.message}`);\r\n    }\r\n\r\n    \r\n    //---------------------------------------\r\n\r\n\r\n  \r\n  const handleClick = (e) => {\r\n    if(!window.navigator.onLine){\r\n      sb.setSnackBar({open: true, variant:\"error\", content:\"インターネットに接続されていません\"})\r\n      return\r\n    }\r\n    setButtonState({...buttonState, lv: true})\r\n    navigator.geolocation.getCurrentPosition(success, error, options);\r\n    setOpen(true)\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n  <button\r\n    style={dynamicStyle}\r\n    className=\"stampingButton\"\r\n    onClick={(e) => handleClick(e)}\r\n    disabled={buttonState.lv}\r\n    >退　勤\r\n    </button>\r\n\r\n\r\n    <DefaultModal\r\n     open={open} \r\n     setOpen={setOpen} \r\n     content={content} \r\n     />\r\n      \r\n    </>\r\n\r\n    \r\n  )\r\n\r\n\r\n\r\n}","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { Clock } from \"../../components/timestamps/Clock\"\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { getTimestampStandby } from \"../../apis/timestamp\";\r\nimport { AttendanceButton } from \"../../components/timestamps/AttendanceButton\";\r\nimport { LeavingButton } from \"../../components/timestamps/LeavingButton\";\r\nimport { hubenyDistance } from \"../../lib/calcDistance\"\r\nimport { ConfigContext } from \"../../contexts/config\";\r\n\r\nconst buttonStyle = {\r\n  width: 200,\r\n  display: \"inline-block\",\r\n  height: 100,\r\n  lineHeight: \"100px\",\r\n  fontSize: 40,\r\n  fontFamily: \"Roboto Helvetica Arial sans-serif\",\r\n  color: \"white\",\r\n  borderRadius: 5,\r\n  margin: 30,\r\n  opacity: 0.8,\r\n  cursor: \"pointer\",\r\n  transitionDuration: \".2s\"\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    transform: 'translate(-50%, -50%)' \r\n}\r\n\r\nexport const TimeStamp = () =>{\r\n\r\n  const [officePosition, setPosition] = useState();\r\n  const [buttonState, setButtonState] = useState({at: true, lv: true})\r\n  const orgConfig = useContext(ConfigContext);\r\n  // gps --------------------------------------------------\r\n\r\n      const checkDistance = (coords) => {\r\n        const distance = hubenyDistance(\r\n          officePosition.lat, \r\n          officePosition.lng, \r\n          coords.lat, \r\n          coords.lng\r\n        )\r\n          if(distance > orgConfig.params.stampable_distance){\r\n            return false\r\n          }\r\n\r\n        return false\r\n      } \r\n\r\n      useEffect(() => {\r\n        \r\nconsole.log(\"render\")\r\n        getTimestampStandby()\r\n        .then(res => {\r\n        setPosition(res.data.positions)\r\n        setButtonState(res.data.status)\r\n        })\r\n      \r\n      },[]);\r\n\r\n\r\n\r\n    //-------------------functions---------------------\r\n\r\n  \r\nreturn (\r\n    <Box style={style}>\r\n    <Clock/>\r\n    <AttendanceButton\r\n      checkDistance={checkDistance} \r\n      officePosition={officePosition}\r\n      buttonState={buttonState}\r\n      setButtonState={setButtonState}\r\n      style={buttonStyle}\r\n    />\r\n    \r\n    <LeavingButton\r\n       checkDistance={checkDistance} \r\n       officePosition={officePosition}\r\n       buttonState={buttonState}\r\n       setButtonState={setButtonState}\r\n       style={buttonStyle}\r\n    />\r\n    {console.log(buttonState)}\r\n\r\n    </Box>\r\n\r\n)\r\n\r\n}","export const  hubenyDistance = (lat1, lon1, lat2, lon2)=>\r\n{\r\n    const rad = (deg) => {\r\n        return deg * (Math.PI / 180)\r\n    }\r\n        var lat1 = rad(lat1)\r\n        var lat2 = rad(lat2)\r\n        var lon1 = rad(lon1)\r\n        var lon2 = rad(lon2)\r\n  \r\n        var dy = Math.abs((lat1 - lat2))\r\n        var dx = Math.abs((lon1 - lon2))\r\n        var rx = 6378137\r\n        var ry = 6356775\r\n        var ave = (lat1 + lat2)/2\r\n  \r\n        var eccentricity = Math.sqrt(((rx)**2 - (ry)**2) / (rx)**2)\r\n        \r\n  \r\n        var w2 = Math.sqrt( 1.0 - ((eccentricity**2) * ((Math.sin(ave))**2)))\r\n        \r\n        var meridianRadius = rx*(1- eccentricity**2)/w2**3\r\n       \r\n        var boyuLine = rx / Math.sqrt(w2)\r\n       \r\n  \r\n        return Math.sqrt((dy * (meridianRadius))**2 + (dx * boyuLine * (Math.cos(ave)))**2 )\r\n\r\n}\r\n\r\n\r\n","import { Button, CircularProgress, FormControl, InputLabel, MenuItem, NativeSelect, Paper, Select, Stack, TextField, Typography } from \"@mui/material\";\r\n\r\nimport React, { useState, useContext, useMemo } from \"react\";\r\nimport { modulateRequest } from \"../../apis/timestamp\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\n\r\nexport const RequestForm = ({param}) => {\r\n\r\n     \r\n     const hours = useMemo(()=>([...Array(25).keys()]),[])\r\n     const minutes = useMemo(()=>([...Array(60).keys()]),[])\r\n\r\n     var at = new Date(param.attendance_time*1000);\r\n     var lv = new Date(param.leaving_time*1000);\r\n    \r\n     const initialFeed = {\r\n       id: param.id,\r\n       at_hour: at.getHours(),\r\n       at_minute: at.getMinutes(),\r\n       lv_hour: lv.getHours(),\r\n       lv_minute: lv.getMinutes(),\r\n       rest_time: param.rest_time || 60,\r\n       comment:\"\"\r\n     };\r\n    \r\n    const [feed, setFeed] = useState(initialFeed);\r\n    const sb = useContext(SnackbarContext);\r\n    const [loading ,setLoading] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n      console.log(feed)\r\n      if ((feed.at_hour*60+feed.at_minute)>(feed.lv_hour*60+feed.lv_minute)){return alert(\"入力された値が適切ではありません\")}\r\n      setLoading(true)\r\n      e.preventDefault();\r\n      const submitParams = {\r\n        id: feed.id,\r\n        updated_attendance_time: Date.parse(`${param.date} ${feed.at_hour}:${feed.at_minute}:00`)/1000,\r\n        updated_leaving_time:Date.parse(`${param.date} ${feed.lv_hour}:${feed.lv_minute}:00`)/1000,\r\n        updated_rest_time: feed.rest_time,\r\n        comment: feed.comment\r\n      }\r\n\r\n      modulateRequest(submitParams)\r\n      .then(res => {\r\n        if(res.status !== 200){return false && sb.setSnackBar({open: true, variant:\"error\",content:\"エラーが発生しました。\"})}\r\n      \r\n      e.target.classList.add(\"Mui-disabled\");\r\n      setLoading(false)\r\n       sb.setSnackBar({variant:\"success\", content:\"申請が完了しました\", open: true})\r\n      \r\n      }\r\n\r\n      )\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setFeed({...feed,[e.target.name]: e.target.value})\r\n    }\r\n    console.log(feed)\r\n\r\n\r\n    return( \r\n      <Paper sx={{p:1, my:2}}>\r\n      <Typography varinat=\"h3\">{param.date}</Typography>\r\n      <Stack \r\n        sx={{my:2}}\r\n        direction=\"row\" \r\n        spacing={1} \r\n        alignItems=\"center\"\r\n      >\r\n        <span>出</span>\r\n        <FormControl sx={{ m: 1, width:35}} variant=\"standard\">\r\n        <InputLabel>時</InputLabel>\r\n            <NativeSelect\r\n              value={feed.at_hour}\r\n              label=\"時\"\r\n              name=\"at_hour\"\r\n              onChange={(e)=>handleChange(e)}\r\n            > \r\n            {hours.map(n => \r\n                <option key={n} value={n}>{n}</option>\r\n                )\r\n            }   \r\n            </NativeSelect>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width:35}} variant=\"standard\">\r\n            <InputLabel>分</InputLabel>\r\n            <NativeSelect\r\n              value={feed.at_minute}\r\n              label=\"分\"\r\n              name=\"at_minute\"\r\n              onChange={(e)=>handleChange(e)}\r\n            > \r\n            {minutes.map(n => \r\n                <option key={n} value={n}>{n}</option>\r\n                )\r\n            }   \r\n            </NativeSelect>\r\n            </FormControl>\r\n            <div>\r\n\r\n            </div>\r\n            <span>退</span>\r\n          <FormControl sx={{ m: 1, width:35  }} variant=\"standard\">\r\n          <InputLabel id=\"demo-simple-select-label\">時</InputLabel>\r\n              <NativeSelect\r\n                value={feed.lv_hour}\r\n                label=\"時\"\r\n                name=\"lv_hour\"\r\n                onChange={(e)=>handleChange(e)}\r\n              > \r\n              {hours.map(n => \r\n                  <option key={n} value={n}>{n}</option>\r\n                  )\r\n              }   \r\n            </NativeSelect>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width:35 }} variant=\"standard\">\r\n            <InputLabel>分</InputLabel>\r\n            <NativeSelect\r\n              value={feed.lv_minute}\r\n              label=\"分\"\r\n              name=\"lv_minute\"\r\n              onChange={(e)=>handleChange(e)}\r\n          \r\n            > \r\n            {minutes.map(n => \r\n                <option key={n} value={n}>{n}</option>\r\n                )\r\n            }   \r\n            </NativeSelect>\r\n            </FormControl>\r\n            <div>\r\n            <span>休</span>\r\n              <TextField\r\n                sx={{width: 50}}\r\n                value={feed.rest_time}\r\n                name=\"rest_time\"\r\n                onChange={(e)=>handleChange(e)}\r\n              />\r\n            </div>\r\n           \r\n         </Stack>   \r\n          \r\n        <TextField\r\n          fullWidth\r\n          sx={{my:1}}\r\n          name=\"comment\"\r\n          onChange={(e)=>handleChange(e)}\r\n          placeholder=\"備考欄\"\r\n          multiline\r\n          rows={2}\r\n        />\r\n        \r\n        <Button \r\n          fullWidth\r\n          variant=\"contained\" \r\n          color=\"success\"\r\n          onClick={(e)=>handleSubmit(e)}\r\n          endIcon={\r\n            loading ?\r\n              <CircularProgress size=\"1.5rem\" color=\"inherit\"/>\r\n              :\r\n              \"\"\r\n          }\r\n          >\r\n            申　請\r\n        </Button>\r\n       \r\n       </Paper>\r\n      )\r\n    \r\n\r\n   \r\n}","import { Box } from \"@mui/system\";\r\nimport React, { useState } from \"react\"\r\nimport { DefaultModal } from \"../../components/shared/DefaultModal\"\r\nimport { RequestForm } from \"./RequestForm\";\r\n\r\n\r\nexport const RequestModal = ({params, open, setOpen}) => {\r\n    \r\n    const content = (\r\n        <Box>\r\n            {\r\n                params.map(param=> (\r\n                <RequestForm \r\n                    key={param.id}\r\n                    param={param} \r\n                />)\r\n                )\r\n           }\r\n        </Box>\r\n    )\r\n   \r\n    return (\r\n        <DefaultModal \r\n            open={open}  \r\n            setOpen={setOpen} \r\n            content={content}\r\n        />\r\n    )\r\n\r\n}","import { Button, Checkbox, Divider, FormControlLabel, FormGroup, Paper, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\r\nimport React, { useState, useMemo } from \"react\"\r\nimport { formattedTime } from \"../../lib/calcDate\";\r\nimport { DetailModal } from \"./DetailModal\";\r\nimport { DefaultModal } from \"../shared/DefaultModal\";\r\nimport { BASE_STYLE, STYLE_2 } from \"../const\";\r\nimport { IrregularTime } from \"./irregularTime\";\r\nimport { timeConvert, totalingTimes } from \"../../lib/calcTimes\";\r\n\r\n\r\nexport const AttendanceIndex = ({\r\n    list,\r\n    handleCheck,\r\n    checked\r\n}) => {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const calc = useMemo(() => {\r\n    return totalingTimes(list)\r\n  },[list]);\r\n  console.log(list)\r\n  \r\n\r\n\r\nconst content = (\r\n  <>\r\n  <Stack \r\n    sx={{my: 2}}\r\n    spacing={2} \r\n    direction=\"row\" \r\n    alignItems=\"center\"\r\n    divider={<Divider orientation=\"vertical\" flexItem/>}\r\n    >\r\n\r\n    <Typography variant=\"h6\"> \r\n      総労働時間 <br />\r\n      {timeConvert(calc.totalWorkingTime, \"full\")} \r\n    </Typography> \r\n  \r\n    <Typography variant=\"h6\"> \r\n      出勤日数 <br />\r\n      {calc.workDate} 日\r\n    </Typography> \r\n  \r\n  \r\n</Stack>\r\n\r\n <IrregularTime params={calc} />\r\n</>\r\n\r\n)\r\n\r\n    return (\r\n    <>\r\n    <div style={{width: '100%', margin:\"40px 0\" }}>\r\n      <TableContainer sx={{py:2}} component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow >\r\n          <TableCell></TableCell>\r\n            <TableCell align=\"right\">日</TableCell>\r\n            <TableCell align=\"right\">出</TableCell>\r\n            <TableCell align=\"right\">退</TableCell>\r\n            <TableCell align=\"right\">休</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n\r\n          {list.map((l,index) => (\r\n            <TableRow\r\n              key={index}\r\n              style={STYLE_2}\r\n            >\r\n        <TableCell sx={{padding:0}} align=\"center\">\r\n        <FormGroup>\r\n            <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                        checked={!!checked.find(v => v.id === l.id)}\r\n                        id={l.id.toString()} \r\n                        onChange={(e)=> handleCheck(e)}\r\n                        disabled={l.confirmed}\r\n                        />} \r\n            />\r\n          </FormGroup>\r\n        </TableCell>     \r\n              <TableCell sx={{padding:0}} align=\"center\">\r\n                {l.date.slice(-2)}日\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n              <div>\r\n                <Typography variant=\"subtitle1\" \r\n                  style={{color: \"red\"}}>\r\n                    {formattedTime(l.updated_attendance_time,\"(申)\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                    {formattedTime(l.attendance_time)}\r\n                </Typography>\r\n              </div>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n              <div>\r\n                <Typography variant=\"subtitle1\" \r\n                  style={{color: \"red\"}}>\r\n                    {formattedTime(l.updated_leaving_time,\"(申)\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                    {formattedTime(l.leaving_time)}\r\n                </Typography>\r\n              </div>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n              <div>\r\n                <Typography variant=\"subtitle1\" \r\n                  style={{color: \"red\"}}>\r\n                    {l.updated_rest_time}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                    {l.rest_time}\r\n                </Typography>\r\n              </div>\r\n              </TableCell>\r\n              <TableCell>\r\n                <DetailModal params={l} />\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      </div>\r\n      <Button \r\n      sx={{marginBottom: \"100px\"}}\r\n      fullWidth\r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n      onClick={() => setOpen(true)}\r\n    >\r\n      月ごと集計\r\n    </Button>\r\n    <DefaultModal\r\n      open={open}\r\n      setOpen={setOpen}\r\n      content={content}\r\n     />\r\n      </>\r\n    )\r\n}\r\n  \r\n  ","import React, { useState, useEffect } from 'react';\r\n\r\nimport { IconButton, ListItemIcon, Stack, Typography } from \"@mui/material\"\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport { fetchMonthly } from '../../apis/attendance';\r\nimport { useMonthFilter } from '../../customeHooks/hooks';\r\n\r\nexport const SelectMonth = ({\r\n    list, setList\r\n}) => {\r\n\r\n  const [month, setMonth] = useState((new Date).getMonth() + 1);\r\n  const filtered = useMonthFilter(list, month)\r\n    \r\n    useEffect(() => { setList(filtered) },[filtered])\r\n  \r\n  const handleChange = (type) => {\r\n    switch (type){\r\n      case \"ahead\":\r\n        return setMonth(month + 1)\r\n      case \"back\":\r\n        return setMonth(month - 1)\r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n    return (\r\n        <Stack direction=\"row\"alignItems=\"center\">\r\n           <IconButton onClick={() => handleChange(\"back\")}>\r\n            <ArrowBackIosNewIcon />\r\n           </IconButton>  \r\n         <Typography variant=\"h6\">{month}月</Typography>\r\n         <IconButton  onClick={() => handleChange(\"ahead\")}>\r\n              <ArrowForwardIosIcon />\r\n            </IconButton>\r\n    </Stack>\r\n\r\n    )\r\n\r\n\r\n\r\n}","import React, { useEffect, useReducer, useState } from \"react\"\r\n\r\nimport { Box, Button, Skeleton, Stack, Switch, Tooltip, Typography } from \"@mui/material\";\r\nimport { AttendanceGraph } from \"../../components/attendances/AttendanceGraph\";\r\nimport { fetchAttendance } from \"../../apis/attendance\";\r\nimport { AttendanceReducer, initialState } from \"../../reducers/attendances\";\r\nimport { RequestModal } from \"./RequestModal\";\r\nimport { SelectDate } from \"../../components/shared/SelectDate\";\r\nimport { AttendanceIndex } from \"../../components/attendances/AttendanceIndex\";\r\nimport { SelectMonth } from \"../../components/shared/SelectMonth\";\r\n\r\n\r\nexport const EmployeeAttendance = ({setSbParams}) => {\r\n\r\n  //----------------------state----------------\r\n\r\nconst [open, setOpen] = useState(false);\r\nconst [list, setList] = useState();\r\nconst [checked, setChecked] = useState([]);\r\n\r\nconst [state, dispatch] = useReducer(AttendanceReducer, initialState);\r\n\r\n\r\nconst handleCheck = (e) => {\r\n  var id = e.target.id;\r\n  var timestamp = state.attendanceData.find(elm => elm.id == id);\r\n  \r\n    \r\n  if (e.target.checked){\r\n    setChecked([...checked,timestamp])\r\n  }else{\r\n    var filtered = checked.filter(elm => \r\n      elm.id != id\r\n    )\r\n    setChecked(filtered)\r\n\r\n  } \r\n} \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch({type: \"FETCHING\"})\r\n    try {\r\n      fetchAttendance()\r\n      .then(res => {\r\n        console.log(res.data.attendances)\r\n        dispatch({type: \"FETCH_END\", payload: res.data.attendances})\r\n        setList( res.data.attendances)\r\n      }\r\n    )\r\n    }catch (e){\r\n      console.log(e.message);\r\n    }\r\n\r\n  },[]);\r\n\r\n\r\n      return(\r\n      <>        \r\n      <Box sx={{p: 2,height: 400}}>\r\n            <Stack \r\n              my={4}\r\n              direction=\"row\" \r\n              alignItems=\"center\"\r\n            >\r\n             \r\n              <SelectMonth\r\n                list={state.attendanceData}\r\n                setList={setList}\r\n              />  \r\n  \r\n              </Stack>\r\n              \r\n              \r\n              {\r\n                list ?\r\n                \r\n        <Box sx={{ margin:\"0 auto\", maxWidth: 600}}>\r\n           <Button \r\n                    size=\"large\"\r\n                    variant=\"contained\" \r\n                    color=\"success\"\r\n                    fullWidth\r\n                    disabled={checked.length == 0}\r\n                    onClick={() => setOpen(true)}\r\n                  >\r\n                  　　　申請画面へ　　　\r\n                </Button>\r\n        <AttendanceIndex\r\n          state={state.fetchState}\r\n          list={list} \r\n          checked={checked}\r\n          handleCheck={handleCheck}\r\n        />\r\n        </Box>\r\n  \r\n                :\r\n                <Skeleton \r\n                height=\"100%\"\r\n                variant=\"rectangle\" />\r\n               }\r\n\r\n            <RequestModal \r\n              open={open} \r\n              setOpen={setOpen} \r\n              params={checked}\r\n              setSbParams={setSbParams} />\r\n      </Box>\r\n     \r\n      </>\r\n\r\n    )\r\n}","import { CONFIRMED_COLOR, REQUEST_STATUS, UNCONFIRMED_COLOR } from \"../components/const\";\r\n\r\n\r\nexport const initialState = {\r\n    fetchState: REQUEST_STATUS.START,\r\n    shiftList :[],\r\n    orgParams: {\r\n        open:9,\r\n        close:18,\r\n        name:\"\",\r\n        address:\"\"\r\n    }\r\n}\r\n\r\nconst convertShift = (shifts) => {\r\n\r\n    const list = shifts.map(shift => {\r\n        const title = `${shift.attendance_time}-${shift.leaving_time}`\r\n        return  {title: title,\r\n                start: shift.date, \r\n                description: shift.comment,\r\n                backgroundColor: shift.confirmed? CONFIRMED_COLOR : UNCONFIRMED_COLOR\r\n            }\r\n    })\r\n    return list\r\n\r\n}\r\n\r\nexport const ShiftReducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case \"FETCHING\":\r\n            return {\r\n                ...state,\r\n                fechState: REQUEST_STATUS.LOADING,\r\n            };\r\n        case \"FETCH_END\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                shiftList : convertShift(action.payload.myshifts),\r\n                wholeShift: action.payload.shifts,\r\n                orgParams: action.payload.orgParams\r\n            };\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n\r\n\r\n}","import { Checkbox, FormControl, IconButton, InputLabel, MenuItem, Modal, Select, Stack, TextField, Typography } from \"@mui/material\";\r\nimport React,{ useMemo, useState} from \"react\";\r\nimport NotInterestedOutlinedIcon from '@mui/icons-material/NotInterestedOutlined';\r\nimport InsertCommentOutlinedIcon from '@mui/icons-material/InsertCommentOutlined';\r\nimport { getMonAndDate } from \"../../lib/calcDate\";\r\nimport { DefaultModal } from \"../shared/DefaultModal\";\r\nimport { dayOfWeek } from \"../const\";\r\nimport { Box } from \"@mui/system\";\r\n\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    height: \"200px\",\r\n    width: 500,\r\n    maxWidth: \"95%\",\r\n    overflow: \"scroll\",\r\n    bgcolor: 'white',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 2,\r\n  };\r\n  \r\n\r\n\r\nexport const SubmitFeed = ({\r\n    elm,\r\n    times, \r\n    list,\r\n    setList\r\n}) => {\r\n   \r\n    const copy = list.slice()\r\n    const [thisDate, setThisDate] = useState(list.find(l=> l.date == elm.date))\r\n   \r\n    const [isClick, setIsClick] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    const [comment, setComment] = useState();\r\n        \r\n    \r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setThisDate({...thisDate,[e.target.name]: value})\r\n        setList(copy)\r\n    }\r\n\r\n    const handleRest = (e) => {\r\n        setThisDate({...thisDate,rest: e.target.checked})\r\n        setList(copy)\r\n    }\r\n\r\n    const SelectTimes = ()=>(\r\n        <>\r\n         <FormControl sx={{ minWidth: 80 }}>\r\n        <InputLabel >出</InputLabel>\r\n        <Select\r\n            required\r\n            disabled={thisDate.rest}\r\n            name=\"attendance_time\"\r\n            label=\"出勤\"\r\n            value={thisDate.attendance_time}\r\n            onChange={(e)=> handleChange(e)}\r\n        >\r\n            {  \r\n                times.map((time,index) => (\r\n                    <MenuItem key={index} value={time}>{time}\r\n                    </MenuItem>\r\n                ))  \r\n            } \r\n        </Select>\r\n        </FormControl>\r\n\r\n        <FormControl sx={{ minWidth: 80 }}>\r\n        <InputLabel id=\"demo-select-small\">退</InputLabel>\r\n        <Select\r\n            disabled={thisDate.rest}\r\n            sx={{backgroundColor: thisDate.rest ? \"gray\" : \"\"}}\r\n            value={thisDate.leaving_time}\r\n            name=\"leaving_time\"\r\n            label=\"退勤\"\r\n            onChange={(e)=>handleChange(e)}\r\n        >\r\n            {  \r\n                times.map((time,index) => (\r\n                    <MenuItem key={index} value={time}>{time}\r\n                    </MenuItem>\r\n                ))  \r\n            } \r\n\r\n        </Select>\r\n\r\n        </FormControl>\r\n        </>\r\n    )\r\n\r\n    const content = (\r\n        <>\r\n        <Typography variant=\"h6\">備考</Typography>\r\n        <TextField\r\n            fullWidth\r\n            name=\"comment\"\r\n            multiline\r\n            rows={3}\r\n            value={comment}\r\n            placeHolder=\"備考\"\r\n            onChange={(e)=>setComment(e.target.value)}\r\n            onBlur={()=>{thisDate.comment=comment}}\r\n        />\r\n        </>\r\n    )\r\n\r\nreturn useMemo(() => {\r\n    return (\r\n        <>\r\n         {getMonAndDate(new Date(thisDate.date),\"/\") +`(${dayOfWeek[new Date(thisDate.date).getDay()]})`}\r\n        <div style={{marginLeft:\"auto\"}}>  \r\n        <Stack direction=\"row\" spacing={1}>\r\n            {isClick?\r\n            <SelectTimes/>: \r\n            <Checkbox\r\n            label=\"出勤\" \r\n            icon={<>出勤</>}\r\n            onChange={()=>setIsClick(true)}\r\n            />\r\n            }\r\n        <Checkbox\r\n            label=\"休\" \r\n            name=\"rest\"\r\n            checked={thisDate.rest}\r\n            icon={<>休 <NotInterestedOutlinedIcon /></>}\r\n            checkedIcon={\r\n                        <NotInterestedOutlinedIcon  \r\n                        style={{display:\"block\",height:\"2rem\",width: \"2rem\"}}\r\n                        color=\"error\"\r\n                    />}\r\n            onChange={(e)=> {handleRest(e)}}\r\n            />\r\n             <IconButton onClick={()=> {console.log(\"open\")\r\n             setOpen(true)}}>\r\n                 <InsertCommentOutlinedIcon color={thisDate.comment&&\"primary\"} />\r\n            </IconButton>\r\n        </Stack>   \r\n        <Modal\r\n            open={open} \r\n            onClose={()=>setOpen(false)} \r\n        >\r\n            <Box sx={style}>\r\n                {content}\r\n            </Box>\r\n        </Modal>\r\n       \r\n    </div>  \r\n\r\n        </>\r\n    \r\n\r\n    )\r\n\r\n},[thisDate, open])\r\n   \r\n} \r\n ","import { Button, Chip, CircularProgress, Divider, List, ListItem, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { SubmitFeed } from \"../../components/shifts/SubmitFeed\";\r\nimport { sendShifts, submitShifts } from \"../../apis/shifts\";\r\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport AddBoxOutlinedIcon from '@mui/icons-material/AddBoxOutlined';\r\nimport { getMonAndDate } from \"../../lib/calcDate\";\r\nimport { fetchNewShifts } from \"../../apis/shifts\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\n\r\nconst style = {\r\n    zIndex:100, \r\n    backgroundColor:\"white\",\r\n    width:\"100%\", \r\n    height: \"100%\",\r\n    position:\"absolute\",\r\n    top:0\r\n\r\n}\r\n\r\nconst chipStyle = {\r\n    position: 'fixed',\r\n    bottom: 30,\r\n    left: 20,\r\n    zIndex:200 \r\n}\r\n\r\nexport const NewSubmitShifts = ({\r\n    times,\r\n    list,\r\n    setList\r\n}) => {\r\n \r\n    const [open, setOpen] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const sb = useContext(SnackbarContext)\r\n    \r\n    const sendNewShifts = (e) => {\r\n        e.preventDefault();\r\n        if(!window.confirm(\"シフトを提出しますか？\")){return false}\r\n        sendShifts(list)\r\n        .then(res => {\r\n            if(res.status ===201){\r\n                setOpen(false)\r\n                setLoading(false)\r\n                sb.setSnackBar({open: true, variant:\"success\",content:\"シフトを提出しました。\"})        \r\n            }\r\n        }\r\n            )\r\n    }\r\n\r\n    const NewShifts = () => {\r\n        \r\n            return(\r\n            <>\r\n            <Box style={style}>\r\n            {list.length > 0 ?\r\n            <form  onSubmit={e=>sendNewShifts(e)}>  \r\n            <List style={{height:450,overflow:\"scroll\"}}>\r\n                {list.map((elm,index) => \r\n                <div key={index}>\r\n                    <ListItem sx={{height:60}}>\r\n                        <SubmitFeed\r\n                            elm={elm}\r\n                            times={times} \r\n                            list={list} \r\n                            setList={setList}\r\n                        />\r\n                    </ListItem>\r\n                    <Divider/> \r\n            \r\n        \r\n                </div>\r\n                )}\r\n            </List>\r\n                <Button\r\n                fullWidth\r\n                type=\"submit\" \r\n                color=\"success\" \r\n                variant=\"contained\" \r\n                margin=\"normal\"\r\n                endIcon={loading &&<CircularProgress/>}\r\n                onClick={(e)=> {sendNewShifts(e)}}>\r\n                    提　出 \r\n                </Button>\r\n                </form>\r\n        \r\n        :\r\n        <Typography variant=\"h5\">\r\n            現在提出可能なシフトはありません\r\n        </Typography>\r\n            }\r\n\r\n        </Box>\r\n        <Chip\r\n            style={chipStyle}\r\n            onClick={()=>setOpen(!open)}\r\n            size=\"medium\"\r\n            label=\"戻る\"\r\n            variant=\"outlied\"\r\n                />  \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n   \r\n    useEffect(() => {     \r\n        fetchNewShifts()\r\n        .then(res => {\r\n            setList(res.data.shifts)\r\n    })\r\n       \r\n\r\n    },[])\r\n    \r\n    \r\n  \r\n    return useMemo(()=> {\r\n\r\n        return (\r\n      <>\r\n      {\r\n          open?\r\n          <NewShifts/>\r\n          :\r\n          <Chip\r\n          sx={chipStyle}\r\n          onClick={()=>setOpen(!open)}\r\n          size=\"medium\"\r\n          label=\"新規提出\"\r\n          color=\"secondary\" \r\n          variant=\"contained\" \r\n          icon={<AddBoxOutlinedIcon/>}\r\n      />  \r\n      }\r\n      </>    \r\n    )\r\n    },[open])\r\n\r\n\r\n\r\n}\r\n","\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\n\r\nimport React, { useState, useEffect, useContext, useReducer } from \"react\";\r\nimport { fetchMyShifts, fetchSubmittedShifts } from \"../../apis/shifts\";\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\nimport { betweenDates, getMonAndDate } from \"../../lib/calcDate\";\r\nimport { DefaultModal } from \"../../components/shared/DefaultModal\";\r\nimport { initialState, ShiftReducer } from \"../../reducers/shift\";\r\nimport { Box, Button, Chip, Divider, Stack, Switch, Typography } from \"@mui/material\";\r\n\r\n\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport { BUSSINESS_HOUR, CONFIRMED_COLOR, REQUEST_STATUS, UNCONFIRMED_COLOR } from \"../../components/const\";\r\n\r\nimport { NewSubmitShifts } from \"../../components/shifts/NewSubmitShifts\";\r\nimport { PageLoadingCircle } from \"../../components/shared/commonPatrs\";\r\nimport { countToEvent } from \"../../lib/calc\";\r\nimport { ConfigContext } from \"../../contexts/config\";\r\n\r\nlet content = \"\";\r\n\r\nconst today = new Date();\r\n\r\nexport const EmployeeShifts = () => {\r\n    \r\n    const orgConfig = useContext(ConfigContext);\r\n    const time = BUSSINESS_HOUR(orgConfig.params.open, orgConfig.params.close);\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [overray, setOverray] = useState(true)\r\n    const [list, setList] = useState([]);\r\n    \r\n    const [state, dispatch] = useReducer(ShiftReducer, initialState)\r\n \r\n    const sb = useContext(SnackbarContext);\r\n    const [period, setPeriod] = useState([today.getFullYear(),today.getMonth()]);\r\n    \r\n    const times = () => {\r\n        let time = [];\r\n        for(let i=state.orgParams.open; i <= state.orgParams.close-1; i++){\r\n            for(let j=0; j< 60; j+=30){\r\n                time.push(`${i}:${(\"0\"+j).slice(-2)}`)\r\n            }\r\n        }\r\n        return time;\r\n    };\r\n\r\n   \r\n    const handleEventClick = (e) => {\r\n\r\n        content = (\r\n            <Stack spacing={2}>\r\n            \r\n                 <Typography variant=\"h5\">\r\n                    {getMonAndDate(e.event.start,\"/\")}\r\n                 </Typography>\r\n                 <Typography variant=\"h5\">\r\n                    {e.event.title}\r\n                 </Typography>\r\n                    \r\n                 <Typography variant=\"text\">\r\n                    備考： {e.event.extendedProps.description}\r\n                 </Typography>\r\n\r\n                 <Stack direction=\"row\" justifyContent=\"end\">\r\n                 {e.event.backgroundColor == CONFIRMED_COLOR?\r\n                    <Chip \r\n                        variant=\"filled\"\r\n                        color=\"success\"\r\n                        label=\"承認\"\r\n                        />     :\r\n                        <Chip \r\n                        variant=\"outlined\"\r\n                       \r\n                        label=\"未承認\"\r\n                        />    \r\n                    }\r\n\r\n                 </Stack>\r\n               \r\n                 <Divider/>\r\n                 <Typography variant=\"text\">\r\n                   <BusinessIcon />：{state.orgParams.name}\r\n                 </Typography>\r\n                 <Typography variant=\"text\">\r\n                   <LocationOnIcon/>：{state.orgParams.address}\r\n                 </Typography>\r\n                 <Typography variant=\"h5\">\r\n                   <LocalPhoneIcon/>：090-9999-9999\r\n                 </Typography>\r\n            </Stack>\r\n           \r\n        )\r\n       \r\n        setOpen(true)\r\n    }\r\n  \r\n    \r\n    useEffect(() => {\r\n    \r\n        dispatch({type: \"FETCHING\"})\r\n        fetchMyShifts(period)\r\n        .then(res => {\r\n            dispatch({\r\n                type: \"FETCH_END\",\r\n                payload: res.data\r\n            })\r\n        \r\n        })\r\n   \r\n    },[period])\r\n\r\n    return (\r\n        <>\r\n         {\r\n            state.fetchState === REQUEST_STATUS.OK ?\r\n            <Box>  \r\n                <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                    <Typography variant=\"subtitle1\">シフト反映</Typography>\r\n                    <Switch\r\n                        checked={overray}\r\n                        onChange={()=>setOverray(!overray)}\r\n                        />\r\n                </Stack>\r\n                <FullCalendar\r\n                 aspectRatio={1}\r\n                    plugins={[dayGridPlugin,interactionPlugin,timeGridPlugin ]}\r\n                    headerToolbar={{\r\n                    center: 'dayGridMonth'\r\n                    }}\r\n                    initialView=\"dayGridMonth\"\r\n                    locale=\"ja\" // 日本語化\r\n                    events={overray ?\r\n                         [...countToEvent(state.wholeShift,time),...state.shiftList] : \r\n                         state.shiftList\r\n                        }\r\n                    eventClick={handleEventClick}\r\n                />\r\n                <NewSubmitShifts\r\n                    times={times()}\r\n                    list={list}\r\n                    setList={setList}\r\n                    />\r\n\r\n                <DefaultModal\r\n                    open={open} \r\n                    setOpen={setOpen}\r\n                    content={content}\r\n                />\r\n            </Box>\r\n            :\r\n            <PageLoadingCircle/>\r\n        }\r\n        </>\r\n    \r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Paper } from \"@mui/material\"\r\nimport { fetchProfile, sendProfile } from \"../../apis/config\"\r\nimport { STYLE_2 } from \"../../components/const\"\r\nimport { NewEmployeeForm } from \"../../components/employees/NewEmployeeForm\"\r\nimport { SnackbarContext } from \"../../contexts/snackBar\";\r\nimport { imageUploder } from \"../../lib/imageUploader\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const [profile, setProfile] = useState() \r\n    const sb = useContext(SnackbarContext);\r\n    \r\n    const sendParams = (params)=> {\r\n      console.log(params)\r\n       \r\n        try {\r\n          if(params.image){\r\n            const imageUrl =  params.imageUrl || params.name + \"_\" +(new Date()).getTime();\r\n            imageUploder(params.image[0], imageUrl, sb)\r\n            params.image = imageUrl\r\n          }\r\n          sendProfile(params)\r\n            .then(res=> {\r\n              if(res.status !== 200){\r\n                sb.setSnackBar({open: true, variant:\"error\", content: \"プロフィールを編集できませんでした\"})\r\n                return\r\n              }\r\n              sb.setSnackBar({open: true, variant:\"success\", content: \"プロフィールを編集しました\"})\r\n              })\r\n          }\r\n          catch(e){console.log(e.message)}\r\n        \r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n        .then(res => {\r\n            setProfile(res.data)\r\n        })\r\n       \r\n    },[])\r\n\r\n\r\n    return (\r\n    \r\n      <Paper sx={{margin:\"0 auto\", maxWidth:500, p:1, ...STYLE_2}}>\r\n          \r\n          {profile && <NewEmployeeForm\r\n            sendParams={sendParams}\r\n            requestStatus=\"OK\"\r\n            profile={profile}\r\n          />\r\n          }\r\n         \r\n      \r\n        {/* <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Stack \r\n            sx={{py:2}}\r\n            direction=\"row\" \r\n            alignItems=\"center\"\r\n            spacing={2} \r\n            justifyContent=\"end\"\r\n            >\r\n            <Typography varinat=\"h6\">責任者： employee</Typography>\r\n            <TextField label=\"組織名\" className=\"mui-input\"/>\r\n            </Stack>\r\n        </form> */}\r\n        </Paper>\r\n    )\r\n    \r\n}","import React, { useContext, useState, useMemo } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\n\r\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\r\nimport BadgeOutlinedIcon from '@mui/icons-material/BadgeOutlined';\r\nimport AccessTimeOutlinedIcon from '@mui/icons-material/AccessTimeOutlined';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { TimeStamp } from './TimeStamp';\r\nimport { EmployeeAttendance } from './EmployeeAttendance'\r\nimport { Notification } from '../Notification';\r\nimport { SnackbarContext } from '../../contexts/snackBar';\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport { Button } from '@mui/material';\r\nimport { EmployeeShifts } from './EmployeeShift';\r\nimport { Redirect,  } from 'react-router-dom';\r\nimport { Profile } from './Profile';\r\n\r\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\r\n\r\nconst style= {\r\n  position: 'fixed',\r\n  bottom: 20, \r\n  right: 20, \r\n  zIndex:200,\r\n  marginTop: 30\r\n\r\n}\r\n\r\nexport const EmployeeTop = () => {\r\n    const [openState, setOpenState] = useState(\"timestamp\");\r\n    \r\n    const auth = useContext(AuthContext)\r\n\r\nconst actions = \r\n  !auth.state.chief ? \r\n  [\r\n    { icon: <LogoutIcon /> , name: 'logout',value: \"ログアウト\" },\r\n    { icon: <PersonOutlineOutlinedIcon />  , name: 'profile',value: \"アカウント設定\" },\r\n    { icon: <AccessTimeOutlinedIcon /> , name: 'timestamp',value: \"打刻画面\" },\r\n    { icon: <ListAltIcon />, name: 'attendance', value: \"打刻履歴\" },\r\n    { icon: <BadgeOutlinedIcon /> , name: 'shift',value: \"シフト\" },\r\n    { icon:  <ChatOutlinedIcon />   , name: 'chat',value: \"チャット\" }\r\n  ]\r\n  :\r\n  [{icon: <ArrowCircleLeftIcon />, name: 'back', value: \"管理画面へ\"},\r\n  { icon: <PersonOutlineOutlinedIcon />  , name: 'profile',value: \"アカウント設定\" },\r\n  { icon: <AccessTimeOutlinedIcon /> , name: 'timestamp',value: \"打刻画面\" },\r\n  { icon: <ListAltIcon />, name: 'attendance', value: \"打刻履歴\" },\r\n  { icon:  <ChatOutlinedIcon />   , name: 'chat',value: \"チャット\" }\r\n  ]\r\n;\r\n    const SwitchRender = () => {\r\n      \r\n\r\n        switch(openState){  \r\n            case \"logout\":\r\n              return (<Redirect to=\"/login\"/>)\r\n            case \"chat\":\r\n              return (<Redirect to=\"/chat\"/>)\r\n            case \"shift\":\r\n              return (<EmployeeShifts/>)\r\n            case \"attendance\":\r\n              return (<EmployeeAttendance  setOpenState={setOpenState}/>)\r\n            case \"timestamp\":\r\n              return (<TimeStamp />)\r\n            case \"notification\":\r\n              return (<Notification />)\r\n            case \"profile\":\r\n              return (<Profile />)\r\n            case \"back\":\r\n              return (<Redirect to=\"/Dashboard\"/>)\r\n        \r\n      }\r\n    }\r\n    \r\n\r\n  return useMemo(() => {\r\n\r\n  return (\r\n  <>     \r\n        <SwitchRender/>\r\n\r\n        <Box sx={style}>\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial openIcon example\"\r\n          icon={<SpeedDialIcon openIcon={<ModeEditIcon />} />}\r\n        >\r\n    \r\n          {actions.map((action) => (\r\n            <SpeedDialAction\r\n              onClick={() =>  {setOpenState(action.name)}}\r\n              key={action.name}\r\n              icon={action.icon}\r\n              tooltipTitle={action.value}\r\n            />\r\n          ))}\r\n          \r\n        </SpeedDial>\r\n      </Box>\r\n  \r\n  </>\r\n   \r\n  );\r\n          },[openState])\r\n}\r\n\r\n","import { Button, Grid, StepContext, TextField, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { AuthContext } from \"../../contexts/auth\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport const Login = () => {\r\n  \r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const auth = useContext(AuthContext);\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n\r\n  return (\r\n  \r\n      <>\r\n      {auth.state.loggedIn ? (\r\n          <>\r\n          <Grid \r\n            sx={{p:4,maxWidth: 500,margin:\"auto\"}} \r\n            container \r\n            direction=\"column\" \r\n            alignItems=\"center\"\r\n         >\r\n          <Typography sx={{my:4}}component=\"div\" variant=\"h5\">\r\n                <Link to ={auth.state.chief ? \"/Dashboard\": \"/employeeDashboard\"}>\r\n                  <Typography variant=\"h6\">\r\n                    {auth.state.name}でログイン中です\r\n                  </Typography>\r\n                </Link>\r\n              </Typography>\r\n            <Grid item>\r\n            <Button \r\n              color=\"error\" \r\n              variant=\"contained\" \r\n              onClick={auth.logout}\r\n            >\r\n              ログアウト\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n          <Grid \r\n            sx={{p:4,maxWidth: 500,margin:\"auto\"}} \r\n            container\r\n            direction=\"column\" \r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n          <form  onSubmit={handleSubmit(auth.login)}>  \r\n          \r\n          <Grid item>\r\n            <TextField  \r\n              margin=\"normal\" \r\n              label=\"メールアドレス\"\r\n              defaultValue=\"sample@user0.com\"\r\n              {...register('email',{ required: \"※空白にはできません\"})}\r\n             />\r\n          </Grid>\r\n          <span style={{color: \"red\"}}>{errors.email && errors.email.message}</span>\r\n          <Grid item>\r\n            <TextField\r\n                  margin=\"normal\"\r\n                  label=\"パスワード\"\r\n                  defaultValue=\"password\"\r\n                  {...register(\"password\", {required:  \"※空白にはできません\"})}\r\n                  />\r\n          </Grid>\r\n          <span style={{color: \"red\"}}>{errors.password && errors.password.message}</span>\r\n          <Grid item>\r\n          <Button \r\n            type=\"submit\" \r\n            color=\"success\" \r\n            variant=\"contained\" \r\n            size=\"large\"\r\n            fullWidth\r\n            onClick={()=> setLoading(true)}\r\n            endIcon={loading ?\r\n              <CircularProgress size=\"1.5rem\" color=\"inherit\"/>\r\n              :\r\n              \"\"\r\n            }>\r\n                ログイン   \r\n          </Button>\r\n          </Grid>\r\n          </form>\r\n       \r\n        </Grid>\r\n        <div style={{textAlign: \"center\"}}>\r\n        <Link to=\"/signup\">\r\n             <Button \r\n                 variant=\"contained\" \r\n                 color=\"primary\"\r\n                 fulWidth\r\n             >\r\n                 新規登録\r\n             </Button>\r\n          </Link>\r\n\r\n        </div>\r\n      \r\n          </>\r\n\r\n          \r\n     \r\n       \r\n     \r\n        )}    \r\n  \r\n        \r\n        </>\r\n\r\n    )};\r\n\r\n","\r\nimport React, { useContext, useState } from 'react';\r\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\"\r\nimport { useForm } from 'react-hook-form';\r\nimport { GoogleMap, Marker, LoadScript } from \"@react-google-maps/api\";\r\nimport { createOrganization } from '../../apis/organization';\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport { imageUploder } from '../../lib/imageUploader';\r\nimport { SnackbarContext } from '../../contexts/snackBar';\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n\r\nexport const NewOrganizationForm = ({empParams,setStepIndex}) => {\r\n    \r\n    const sb = useContext(SnackbarContext)\r\n\r\n    const geocoder = new window.google.maps.Geocoder();\r\n    const [validate, setValidate] = useState(false);\r\n    const [coords, setCoords] = useState({lat: 35.6815171,lng: 139.7567439});\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const auth = useContext(AuthContext)\r\n\r\n    const handleBlur = (e) => {\r\n        geocoder.geocode({address: e.target.value},function(results, status){\r\n            \r\n            if(status == \"OK\"){\r\n                const position = results[0].geometry.location\r\n                setCoords({\r\n                    lat: position.lat(),\r\n                    lng: position.lng()\r\n                })\r\n                setValidate(true)\r\n            }else{\r\n                alert(\"位置情報の取得ができませんでした。\")\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const sendOrgPrams = (params) => {\r\n    \r\n        const orgParams = {...params,lat: coords.lat, lng: coords.lng}\r\n        createOrganization({\r\n            organizations: orgParams,\r\n            employees: empParams\r\n        })\r\n        .then((res) => {\r\n            \r\n            if(res.status == 200){\r\n                const imageUrl = empParams.name + (new Date()).getTime();\r\n                imageUploder(empParams.image[0], imageUrl, sb)\r\n                auth.login({\r\n                    \"email\":empParams.email,\r\n                    \"password\":empParams.password\r\n                })\r\n                setStepIndex(2)\r\n            }\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <form onSubmit={handleSubmit(sendOrgPrams)}>\r\n                <Stack \r\n                    spacing={1}\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <TextField \r\n                        {...register('name', { \r\n                            required: \"※組織名が入力されてません\",\r\n                            maxLength: {\r\n                                value:24,\r\n                                message: \"最大文字数(24文字)を越えています。\"\r\n                                }\r\n                            })}\r\n                        label=\"組織名\"\r\n                        required\r\n                    />\r\n                     <span style={{color: \"red\"}}>{errors.name && errors.name.message}</span>\r\n\r\n                    <TextField\r\n                        {...register('address',{required: \"no address\"})} \r\n                        label=\"所在地\"\r\n                        defaultValue={\"東京\"}\r\n                        required\r\n                        onBlur={e => handleBlur(e)}\r\n                    />\r\n                    <span style={{color: \"red\"}}>{errors.address && errors.address.message}</span>\r\n                    <Box>\r\n                        <Typography variant=\"subtitle1\">\r\n                            ※営業時間・打刻可能範囲 等の詳細設定は組織作成後に管理画面から行うことができます。\r\n                        </Typography>\r\n                    </Box>\r\n                   \r\n\r\n                    <GoogleMap\r\n                        mapContainerStyle={{ height:250}}\r\n                        center={{lat: coords.lat, lng: coords.lng}}\r\n                        zoom={14}\r\n                    >\r\n                    \r\n                        <Marker position={{lat: coords.lat, lng: coords.lng}} zIndex={2} />\r\n                    </GoogleMap>\r\n                   \r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"success\"\r\n                        type=\"submit\"\r\n                        disabled={!validate}\r\n                    >\r\n                        作成\r\n                    </Button>\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { newOrganization } from \"../urls/urlList\";\r\n\r\nexport const createOrganization = (params) => {\r\n    return axios.post(newOrganization, {organizations: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n","import { NewEmployeeForm } from '../../components/employees/NewEmployeeForm';\r\nimport { useState } from 'react';\r\nimport { Box, TextField, Step, StepLabel, Stepper, Stack, Button, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport { REQUEST_STATUS } from '../const';\r\nimport { NewOrganizationForm } from './OrganizationForm';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst steps = [\r\n    '責任者アカウント作成',\r\n    '組織作成',\r\n    // '各種設定',\r\n  ];\r\n\r\nexport const SignUp = () => {\r\n    const [stepIndex, setStepIndex] = useState(0);\r\n　  const [empParams, setEmpParams] = useState();\r\n   \r\n    const sendEmployeeParams = (params) => {\r\n        setEmpParams(params)\r\n        setStepIndex(1)\r\n    }\r\n\r\n    const stepComponents = [ \r\n        <NewEmployeeForm \r\n            sendParams={sendEmployeeParams}\r\n            requestStatus={REQUEST_STATUS.OK}\r\n        />,\r\n        <NewOrganizationForm \r\n          empParams={empParams} \r\n          setStepIndex={setStepIndex}\r\n        />,]\r\n      \r\n    return (\r\n        <Box  sx={{width: \"90%\",maxWidth:500, margin:\"32px auto\"}}>\r\n                  \r\n        <Stepper \r\n            activeStep={stepIndex} \r\n            alternativeLabel\r\n            style={{my:4}}\r\n        >\r\n          {steps.map((label, index) => (\r\n            <Step key={index}>\r\n              <StepLabel>\r\n                  {label}\r\n              </StepLabel> \r\n            </Step>\r\n          ))}\r\n          </Stepper>\r\n        {stepComponents[stepIndex]}\r\n\r\n        <Link to=\"/login\">\r\n        <Button \r\n            color=\"primary\" \r\n            variant=\"contained\" \r\n            size=\"large\"\r\n            fullWidth\r\n            >\r\n                登録済みの方はこちら\r\n          </Button>\r\n\r\n        </Link>\r\n      \r\n        </Box>\r\n        \r\n    )\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport defaultChatMsgStyles from '@mui-treasury/styles/chatMsg/default';\r\n\r\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\r\n\r\nimport { IconButton } from '@mui/material';\r\n\r\nconst timeStyle = {\r\n  position:\"absolute\",\r\n  top:-20, \r\n  left:0,\r\n  color:\"#808080\"\r\n}\r\n\r\nconst deleteStyle = {\r\n  position:\"absolute\",\r\n  top:10,\r\n  left:-30,\r\n  color:\"#808080\",\r\n}\r\n\r\n\r\n\r\nconst ChatTemplate = withStyles(defaultChatMsgStyles, { name: 'ChatMsg' })(props => {\r\n  const {\r\n    classes,\r\n    avatar,\r\n    message,\r\n    roomId,\r\n    time,\r\n    cancelSend,\r\n    side,\r\n    GridContainerProps,\r\n    GridItemProps,\r\n    AvatarProps,\r\n    getTypographyProps,\r\n  } = props;\r\n  \r\n  const [deletable, setDeletable] = useState(false);\r\n\r\n  const attachClass = index => {\r\n    if (index === 0) {\r\n      return classes[`${side}First`];\r\n    }\r\n    if (index === [message.content].length - 1) {\r\n      return classes[`${side}Last`];\r\n    }\r\n    return '';\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={5}\r\n      style={{justifyContent: side === 'right' ? 'flex-end' : 'flex-start'}}\r\n      {...GridContainerProps}\r\n    >\r\n      {side === 'left' && (\r\n        <Grid item {...GridItemProps}>\r\n          <Avatar\r\n            src={avatar}\r\n            {...AvatarProps}\r\n            className={cx(classes.avatar, AvatarProps.className)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={8}>\r\n\r\n        {[message.content].map((msg, i) => {\r\n          \r\n          const TypographyProps = getTypographyProps(msg, i, props);\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <div \r\n              key={i} \r\n              className={classes[`${side}Row`]}\r\n            >  \r\n              <Typography\r\n                align={'left'}\r\n                  {...TypographyProps}\r\n                  className={cx(\r\n                    classes.msg,\r\n                    classes[side],\r\n                    attachClass(i),\r\n                    TypographyProps.className\r\n                  )}\r\n                  onMouseOver={()=>setDeletable(true)}\r\n                  onMouseOut={()=>setDeletable(false)}\r\n                  style={{position: \"relative\"}}\r\n                >\r\n                  {msg}\r\n                  <span style={timeStyle}>\r\n                    {time}\r\n                  </span>\r\n                \r\n                {side===\"right\" && \r\n                  <IconButton \r\n                    style={{...deleteStyle, display: deletable ? \"block\" : \"none\"}}\r\n                    onClick={()=>{cancelSend(roomId, message.id)}}>\r\n                    <DeleteForeverOutlinedIcon />\r\n                  </IconButton>\r\n                }\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nChatTemplate.propTypes = {\r\n  avatar: PropTypes.string,\r\n  messages: PropTypes.arrayOf(PropTypes.string),\r\n  time: PropTypes.string,\r\n  side: PropTypes.oneOf(['left', 'right']),\r\n  GridContainerProps: PropTypes.shape({}),\r\n  GridItemProps: PropTypes.shape({}),\r\n  AvatarProps: PropTypes.shape({}),\r\n  getTypographyProps: PropTypes.func,\r\n};\r\nChatTemplate.defaultProps = {\r\n  avatar: '',\r\n  messages: [],\r\n  side: 'left',\r\n  GridContainerProps: {},\r\n  GridItemProps: {},\r\n  AvatarProps: {},\r\n  getTypographyProps: () => ({}),\r\n};\r\n\r\n\r\nexport default ChatTemplate;","import { Box, Stack, Typography } from \"@mui/material\";\r\nimport React, { useState, useContext, useEffect, useMemo } from \"react\";\r\nimport { AuthContext } from \"../../contexts/auth\";\r\nimport { formattedDate } from \"../../lib/calcDate\";\r\n\r\nimport ChatTemplate from \"./ChatTemplate\"\r\n\r\nconst height =  document.documentElement.clientHeight;\r\nconst timeStyle = {\r\n    margin:\"1rem 0\",\r\n    color:\"#808080\",\r\n    textAlign: \"center\"\r\n  }\r\n\r\nexport const ChatMessages = ({\r\n    messages, \r\n    selected, \r\n    cancelSend ,\r\n    tempId,\r\n}) => {\r\n\r\n    let date = new Date().toString()\r\n    let currentDate = new Date(0)\r\n    \r\n   return (\r\n        <Box  \r\n            id=\"chatMessagesBox\"\r\n            sx={{padding:\"100px 2rem 0\",\r\n            height:`${height-100}px`,\r\n            width:\"100%\",\r\n            overflow: \"scroll\"\r\n            }}\r\n            >\r\n             {messages.map((message, index) => {\r\n                const side = message.employee_id === tempId ? \"right\" : \"left\";\r\n                const baseTime = new Date(message.created_at)\r\n                const messageDate = new Date(message.date)\r\n                const time = `${(\"00\"+baseTime.getHours()).slice(-2)} :${(\"00\" + baseTime.getMinutes()).slice(-2)}`\r\n                if(messageDate > currentDate){\r\n                    currentDate = messageDate\r\n                    date = formattedDate(currentDate)\r\n                }else{\r\n                    date = \"\"\r\n                }\r\n                \r\n               \r\n                return (\r\n                <div key={index}>\r\n                <h5 style={timeStyle}>\r\n                {date}\r\n                  </h5>\r\n                     <ChatTemplate\r\n                        message={message}\r\n                        roomId={selected.id}\r\n                        side={side}\r\n                        avatar={selected.avatar}\r\n                        time={time}\r\n                        cancelSend={cancelSend}\r\n                    />\r\n                </div>\r\n                )\r\n                })}\r\n\r\n        </Box>)\r\n\r\n\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Box, InputBase, Stack, TextField } from \"@mui/material\";\r\n\r\nexport const ChatInput = ({selected, sendMessage,width}) => {\r\n\r\n  const [text, setText] = useState();\r\n  \r\n  const handleChange = (e) => {\r\n    setText(e.target.value)\r\n  }\r\n  \r\n  const Submit = (e) => {\r\n    \r\n    e.preventDefault();\r\n    if(!text){return}\r\n    sendMessage(selected.id, text);\r\n    setText(null);\r\n    document.getElementById(\"chatInput\").value=\"\";\r\n  }\r\n\r\n  return (\r\n    <Box >\r\n     <form \r\n      onSubmit={Submit} \r\n      style={{position:\"fixed\",\r\n       bottom:0, \r\n       width:`calc(100% - ${width}px`}}\r\n     >\r\n       <Stack \r\n        sx={{py:2}}\r\n        direction=\"row\" \r\n        spacing={1} \r\n        alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            id=\"chatInput\"\r\n            required\r\n            style={{width:\"calc(100% - 50px)\"}}\r\n            onChange={handleChange} \r\n        /> \r\n         <IconButton \r\n          type=\"submit\"\r\n          color=\"primary\" \r\n          component=\"button\"\r\n          >\r\n         <SendIcon/>\r\n          </IconButton>\r\n\r\n       </Stack>\r\n\r\n   \r\n        \r\n    </form>\r\n\r\n     </Box>\r\n    \r\n  \r\n\r\n  )\r\n\r\n}","import axios from \"axios\";\r\nimport { messageList, newMessage, removeMessage } from \"../urls/urlList\"\r\n\r\nexport const fetchMessages = (id) => {\r\n    console.log(id)\r\n    return axios.get(messageList(id))\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n\r\nexport const  createMessage = (id,params) => {\r\n   \r\n    return axios.post(messageList(id),{messages: params})\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n\r\nexport const  deleteMessage = (room_id, id) => {\r\n   \r\n    return axios.delete(removeMessage(room_id, id))\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch((e) =>   {throw e;})\r\n}\r\n\r\n","import { REQUEST_STATUS } from \"../components/const\";\r\n\r\nexport const initialState = {\r\n    fetchState: REQUEST_STATUS.START,\r\n    messageList :[]\r\n}\r\n\r\nexport const ChatReducer = (state, action) => {\r\n    console.log(action)\r\n\r\n    switch(action.type) {\r\n\r\n        case \"FETCHING\":\r\n            return {\r\n                ...state,\r\n                fechState: REQUEST_STATUS.LOADING,\r\n            };\r\n        case \"FETCH_END\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                messageList: action.payload\r\n            };\r\n        case \"ADD\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                messageList: [...state.messageList,action.message]\r\n            };\r\n        case \"REMOVE\":\r\n            return {\r\n                fetchState: REQUEST_STATUS.OK,\r\n                messageList: state.messageList.filter(m => m.id !== action.id)\r\n            };\r\n        default:\r\n            throw new Error();\r\n    }\r\n\r\n\r\n}","import { IconButton, Input, Modal, Select, Skeleton, SnackbarContent, TextField, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { Button, Divider, List, ListItemAvatar, ListItemButton, ListItemText } from \"@mui/material\"\r\nimport React, { useContext, useState } from \"react\"\r\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\r\nimport AddCommentOutlinedIcon from '@mui/icons-material/AddCommentOutlined';\r\nimport { SnackbarContext } from '../../contexts/snackBar';\r\nimport { createRoom } from '../../apis/room';\r\nimport { NewRoomForm } from './NewRoomForm';\r\n\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  maxWidth: \"95%\",\r\n  bgcolor: 'white',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 2,\r\n};\r\n\r\n\r\nexport const AddChatRoom  = ({setRooms}) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const sb = useContext(SnackbarContext);\r\n\r\n    const sendRoomParams = (params) => {\r\n     \r\n      createRoom(params)\r\n      .then(res => {\r\n        if(!res.status === 201){\r\n          return false\r\n        }\r\n        setRooms(res.data.rooms)\r\n        setLoading(false)\r\n        setOpen(false)\r\n        sb.setSnackBar({open: true, variant:\"success\",content:\"新しいチャットを作成しました。\"})\r\n      })\r\n\r\n    }\r\n    \r\n    \r\n\r\n    const content = (\r\n       <NewRoomForm\r\n        sendRoomParams={sendRoomParams}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n       />\r\n       \r\n    )\r\n\r\n    return(\r\n        <>\r\n        <IconButton onClick={()=> setOpen(true)}>\r\n          <AddCommentOutlinedIcon />\r\n        </IconButton>\r\n        <Modal\r\n          open={open}\r\n          onClose={()=> setOpen(false)}\r\n          >\r\n        <Box sx={style}>\r\n            {content}\r\n        </Box>\r\n          </Modal>\r\n        </>\r\n        \r\n    )\r\n   \r\n}","import React, { Fragment, useEffect, useState, useReducer, useContext } from 'react';\r\n\r\nimport { ChatMessages } from '../components/chats/ChatMessages'\r\nimport { ChatInput } from '../components/chats/ChatInput';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport { Alert, Badge, Chip, CircularProgress, Drawer, IconButton, ListItemAvatar, Snackbar, SnackbarContent, stepButtonClasses, Switch, TextField } from '@mui/material';\r\nimport { fetchMessages, createMessage, deleteMessage } from '../apis/chat';\r\nimport Stack from '@mui/material/Stack';\r\nimport { ChatReducer, initialState } from '../reducers/chat';\r\nimport { FormControlLabel, FormGroup } from '@material-ui/core';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\n\r\nimport { Avatar, ListItem, ListItemText } from \"@mui/material\"\r\n\r\nimport MainImage from '../images/employee-default.jpg';\r\n\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport { fetchRooms } from '../apis/room';\r\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\r\nimport { AuthContext } from '../contexts/auth';\r\nimport { AddChatRoom } from '../components/chats/AddChatRoom';\r\nimport { gridColumnGroupsLookupSelector } from '@mui/x-data-grid';\r\nimport { convertLength } from '@mui/material/styles/cssUtils';\r\nimport { useTextFilter } from '../customeHooks/hooks';\r\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { imageSrc, REQUEST_STATUS } from '../components/const';\r\n\r\nconst welcomeStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, 0)',\r\n  height: 400,\r\n  maxWidth: \"95%\",\r\n \r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst responsiveWidth = window.innerWidth > 768 ? drawerWidth : 0;\r\n\r\nlet   socket = null\r\n\r\nexport const Chat = () => {\r\n \r\nconst [state, dispatch] = useReducer(ChatReducer, initialState);\r\n\r\nconst [rooms, setRooms] = useState([]);\r\nconst [selected, setSelected] = useState({id: \"\",name:\"\",avatar:\"\"});\r\nconst [open, setOpen] = useState(responsiveWidth !== 0);\r\nconst [openSearch, setOpenSearch] = useState(false)\r\n\r\nconst [notice, setNotice] = useState({open: false, content: \"\"});\r\nconst [tempId, setTempid] = useState();\r\nconst auth = useContext(AuthContext);\r\n\r\nconst history = useHistory();\r\n\r\nconst [text, setText] = useState(\"\")\r\n\r\nconst filtered = useTextFilter(state.messageList,\"content\",text)\r\nconst messageList = filtered.length > 0? filtered : state.messageList\r\n\r\nconst DOMAIN = process.env.NODE_ENV == \"production\" ? \"https://web.queen-of-time.com\": \"http://localhost\"\r\nconst SERVER = `${DOMAIN}:5500`; // WebSocket通信のサーバURL\r\n\r\n  const cancelSend = (roomId, id) => {\r\n\r\n    if(window.confirm(\"メッセージの送信を取り消しますか？\")){\r\n\r\n    deleteMessage(roomId, id)\r\n    .then(res => {\r\n      if(res.status !== 200){return}\r\n      dispatch({\r\n        type: \"REMOVE\",\r\n        id: id\r\n      })\r\n      socket.emit(\"CANCEL_MESSAGE\", roomId, id);\r\n    })\r\n\r\n  }\r\n  \r\n  }\r\n\r\n\r\n  const handleSelect = (id) => {\r\n    dispatch({type: \"FETCHING\"})\r\n    fetchMessages(id)\r\n    .then((res) => {\r\n      socket.emit(\"leave\", selected.id)\r\n      setSelected({id: id, name: res.data.companion,avatar: res.data.avatar})\r\n      socket.emit(\"join\", id)\r\n      dispatch({\r\n        type: \"FETCH_END\",\r\n        payload: res.data.messages\r\n      })\r\n      setText()\r\n      \r\n    })\r\n   \r\n  \r\n  }\r\n \r\n\r\n  const handleTransition = (path) => {\r\n    history.push(path)\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault()\r\n    if(filtered.length == 0){alert(\"結果が見つかりませんでした\")}\r\n\r\n      // socket.emit(\"leave\", selected.id)\r\n      // socket.emit(\"join\", selected.id)\r\n  }\r\n\r\n  const sendMessage = (id, content) => {\r\n    \r\n    createMessage(id, content)\r\n    .then(res => {\r\n      if(res.status !== 201){return}\r\n      // joinedSocket.emit(\"SEND_PUSH\", res.data.message);\r\n      socket.emit(\"SEND_MESSAGE\", selected.id, res.data.message);\r\n      dispatch({\r\n        type: \"ADD\",\r\n        message: res.data.message\r\n      })\r\n    \r\n    })\r\n    .catch(e => console.log(e))\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n   \r\n    (async () => {\r\n      socket = io(SERVER);\r\n      console.log('Chat : useEffect()');\r\n      socket.on('connection', () => {\r\n          console.log('start connection. socket.id=' + socket.id);\r\n      });\r\n\r\n        \r\n    socket.on(\"RECIEVE_MESSAGE\",(message)=>{\r\n      setNotice({open: true, content: message.content})\r\n      console.log(notice)\r\n        dispatch({\r\n          type: \"ADD\",\r\n          message: message\r\n        })\r\n        \r\n    })\r\n\r\n  socket.on(\"REMOVE_MESSAGE\",(id)=>{\r\n    dispatch({\r\n      type: \"REMOVE\",\r\n      id: id\r\n    })\r\n  }) \r\n\r\n  })();\r\n\r\n        \r\n    fetchRooms()\r\n    .then(res => {\r\n      setRooms(res.data.rooms)\r\n      setTempid(res.data.tempId)\r\n    })\r\n    \r\n\r\n\r\n  return () => {\r\n    setTempid(\"\")\r\n    // socket.disconnect()\r\n  };\r\n}, []);\r\n\r\n\r\nreturn (\r\n \r\n    <Box >   \r\n      <AppBar\r\n        position=\"fixed\"\r\n        style={{paddingLeft: `calc(${responsiveWidth}px + 16px)`}}\r\n      >\r\n        <Stack>\r\n        <Stack \r\n          direction=\"row\"\r\n          alignItems=\"center\" \r\n          justifyContent=\"space-between\"\r\n        >\r\n          <h4>{selected.name}</h4> \r\n          <div>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch onChange={()=>setOpen(!open)} checked={open} color=\"default\"/>\r\n            } \r\n            label=\"\"\r\n            labelPlacement=\"start\"\r\n            />  \r\n            <IconButton onClick={() => setOpenSearch(!openSearch)}>\r\n              <SearchOutlinedIcon sx={{marginLeft:\"1rem\",color:\"white\"}} />\r\n           </IconButton>   \r\n          </div> \r\n        </Stack>\r\n        <form onSubmit={(e)=>{\r\n          handleSearch(e)\r\n        }}>\r\n        <TextField \r\n          sx={{my:2,display: openSearch ? \"\": \"none\"}}\r\n          style={{backgroundColor: \"white\"}}\r\n          variant=\"standard\"\r\n          fullWidth\r\n          placeholder=\"検索\"\r\n          name=\"text\"\r\n          onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </form>\r\n        \r\n\r\n        </Stack>\r\n\r\n       \r\n      </AppBar>\r\n      \r\n         <Drawer\r\n           sx={{\r\n            width: responsiveWidth,\r\n            flexShrink: 0,\r\n            '& .MuiDrawer-paper': {\r\n              width:  drawerWidth,\r\n              boxSizing: 'border-box',\r\n            },\r\n          }}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n        >\r\n                \r\n<ul id=\"messages\"></ul>\r\n      <List sx={{ width: '100%',height:\"100%\", bgcolor: 'background.paper'}}>\r\n      　{auth.state.chief ?  \r\n      <ListItem>\r\n        <AddChatRoom setRooms={setRooms}/>\r\n      </ListItem>\r\n      :\r\n      \"\"\r\n      }\r\n      {rooms.map((room, index) => (\r\n        <div key={index}>\r\n         <ListItem button onClick={()=>handleSelect(room.id)}>\r\n          <ListItemAvatar>\r\n          <Badge color=\"error\" badgeContent={room.read}>\r\n                \r\n            </Badge>\r\n          <Avatar\r\n            src={imageSrc(room) || MainImage}\r\n            alt={room.name}\r\n          />\r\n        \r\n          </ListItemAvatar>\r\n          <ListItemText primary={room.name}/>\r\n         </ListItem>\r\n         <Divider variant=\"inset\" component=\"li\" />\r\n        </div>\r\n      )\r\n      )}\r\n      <ListItem style={{position:\"absolute\", bottom:10}}>\r\n      {auth.state.chief ?\r\n      \r\n      <Button \r\n        fullWidth \r\n        color=\"success\" \r\n        variant=\"outlined\"\r\n        onClick={()=> {handleTransition(\"/Dashboard\")}}\r\n      >\r\n        管理画面へ\r\n      </Button>\r\n\r\n      :\r\n      <Button \r\n        fullWidth \r\n        color=\"success\" \r\n        variant=\"outlined\"\r\n        onClick={()=> {handleTransition(\"/employeeDashboard\")}}\r\n      >\r\n        メニュー画面へ\r\n      </Button>\r\n      }\r\n      </ListItem>\r\n\r\n    </List>\r\n        \r\n    </Drawer>\r\n    <Box style={{\r\n        width: `calc(100% - ${responsiveWidth}px)`,\r\n        marginLeft: `${responsiveWidth}px`\r\n    }}\r\n    >   \r\n        \r\n      {\r\n        selected.id?\r\n        <>\r\n\r\n          {state.fetchState == REQUEST_STATUS.OK?\r\n            <>\r\n            <Stack>\r\n            <ChatMessages \r\n              selected={selected}\r\n              messages={messageList} \r\n              setMessage={dispatch}\r\n              cancelSend={cancelSend}\r\n              tempId={tempId}\r\n            />\r\n           \r\n        <Snackbar \r\n          open={notice.open} \r\n          autoHideDuration={4000}\r\n          sx={{marginBottom: 6}}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n          onClose={()=>setNotice({...notice, open: false})}\r\n          onClick={()=>{\r\n            const elm = document.getElementById(\"chatMessagesBox\");\r\n            const bottom = elm.scrollHeight - elm.clientHeight;\r\n            elm.scrollTo({top:bottom,  behavior: 'smooth'});\r\n          }} >\r\n          <Alert severity=\"secondary\">\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Avatar\r\n              src={selected.avatar || MainImage}\r\n            /><p>「{notice.content.slice(0,20)}」</p>\r\n            </Stack>\r\n          </Alert>\r\n      </Snackbar>\r\n            <ChatInput\r\n              selected={selected}\r\n              sendMessage={sendMessage}\r\n              width={responsiveWidth}\r\n            />\r\n            </Stack>\r\n    \r\n          </>\r\n          :\r\n          <CircularProgress\r\n          style={{width: \"80px\", height: \"80px\", margin: \"180px auto\"}}\r\n          color=\"inherit\"/>\r\n          \r\n      }\r\n      </>\r\n     \r\n      :\r\n      <div style={welcomeStyle}>\r\n         <ChatOutlinedIcon /> \r\n          <Typography variant=\"h5\">\r\n            ルームをクリックして会話を始めましょう！\r\n          </Typography>\r\n          \r\n      </div>\r\n      } \r\n      </Box>\r\n      \r\n    </Box>\r\n    \r\n  \r\n);\r\n\r\n  \r\n}","import React from \"react\";\r\nimport { Button, Grid, Paper, Stack, Typography } from \"@mui/material\";\r\nimport { Box, fontWeight } from \"@mui/system\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_STYLE, LIGHT_GRAY, SiteName } from \"../const\";\r\nimport { STYLE_2 } from \"../const\";\r\n\r\nimport descImage1 from \"../../images/desc_image1.jpg\"\r\nimport descImage2 from \"../../images/desc_image2.jpg\"\r\nimport employeesIcon from \"../../images/employees.png\"\r\nimport shiftIcon from \"../../images/shift.png\"\r\nimport manageIcon from \"../../images/manage.png\"\r\nimport timestampIcon from \"../../images/timestamp.png\"\r\nimport calendarIcon from \"../../images/calendar.png\"\r\nimport chatIcon from \"../../images/chat.png\"\r\nimport { MainLogo } from \"./commonPatrs\";\r\n// import descImage3 from \"../../images/desc_image3.jpg\"\r\n\r\nconst gridContentStyle = {\r\n    p:2,\r\n    height: 300,\r\n    margin:\"0 auto\",\r\n    textAlign: \"center\"\r\n}\r\n\r\nconst gridIconStyle = {\r\n    width: \"80%\",\r\n    height: \"100%\"\r\n}\r\n\r\nconst descContent = {\r\n    p:2,\r\n    width:\"100%\", \r\n    maxWidth: 700, \r\n    margin:\"24px auto\"\r\n}\r\n\r\nconst descImage = {\r\n    maxHeight:350,\r\n    margin: \"16px 0\"\r\n}\r\nconst icons = [\r\n    {\r\n        icon: <img src={employeesIcon} style={gridIconStyle} />,\r\n        title: \"従業員管理\",\r\n        desc: \"説明テキスト説明テキスト説明テキスト説明テキスト\"\r\n    },\r\n    {\r\n        icon:  <img src={timestampIcon} style={gridIconStyle} />,\r\n        title: \"打刻管理\",\r\n        desc: \"説明テキスト説明テキスト説明テキスト\"\r\n    },\r\n    {\r\n        icon:  <img src={calendarIcon} style={gridIconStyle} />,\r\n        title: \"カレンダー\",\r\n        desc: \"説明テキスト説明テキスト説明テキスト説明テキスト\"\r\n    },\r\n    {\r\n        icon:  <img src={chatIcon} style={gridIconStyle} />,\r\n        title: \"個別チャット\",\r\n        desc: \"説明テキスト説明テキスト説明テキスト説明テキスト\"\r\n    },\r\n    {\r\n        icon:  <img src={shiftIcon} style={gridIconStyle} />,\r\n        title: \"シフト管理\",\r\n        desc: \"説明テキスト説明テキスト説明テキスト説明テキスト\"\r\n    },\r\n    {\r\n        icon:  <img src={manageIcon} style={gridIconStyle} />,\r\n        title: \"クラウド管理\",\r\n        desc: \"説明テキスト説明テキスト説明テキスト説明テキスト\"\r\n    }\r\n]\r\n\r\n\r\nexport const Top = () => (\r\n\r\n    <Stack  \r\n        sx={{p:2}}\r\n        style={STYLE_2} \r\n        >\r\n        <MainLogo/>\r\n        <Stack style={{width:\"100%\"}}>\r\n        <Stack\r\n          alignItems=\"center\"\r\n        >\r\n            <Link to=\"/signup\">\r\n                    <Button \r\n                        sx={{width: 370, margin:\"24px auto\"}}\r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                    >\r\n                        始める >>\r\n                    </Button>\r\n            </Link>\r\n        </Stack>\r\n   \r\n\r\n        </Stack>\r\n\r\n         <Box>\r\n            <Grid \r\n                container\r\n                spacing={4}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n            {   \r\n                icons.map((i,index) => (\r\n                    <Grid \r\n                        key={index} \r\n                        item xs={10} \r\n                        sm={6} md={4}\r\n                    >\r\n                    <Paper sx={gridContentStyle}>\r\n                        <Typography style={BASE_STYLE} variant=\"h5\">{i.title}</Typography>\r\n                        <div style={{height: 200}}>\r\n                            {i.icon}\r\n                        </div>\r\n                        <Typography variant=\"subtitle1\">\r\n                            {i.desc}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                )\r\n                )\r\n            }\r\n      </Grid>\r\n\r\n         </Box>\r\n         <Stack sx={{my:4}}>\r\n             <Paper sx={descContent}>\r\n                 <Stack spacing={2}>\r\n                     <img \r\n                      style={descImage}\r\n                      src={descImage1}\r\n                     />\r\n                     <Typography variant=\"subtitle1\">\r\n                        クラウドを通して、「従業員情報・シフト・打刻履歴・予定・タスク・メッセージ」を一括管理可能。\r\n                     </Typography>\r\n                 </Stack>\r\n             </Paper>\r\n             \r\n             <Paper sx={descContent}>\r\n                 <Stack spacing={2}>\r\n                     <img \r\n                      style={descImage}\r\n                      src={descImage2}\r\n                     />\r\n                     <Typography variant=\"subtitle1\">\r\n                     SPAアプリケーションを使用。不要なページ更新やページ遷移がなく高速化する仕事スピードへストレスフリーに対応できます。\r\n                     </Typography>\r\n                 </Stack>\r\n             </Paper>\r\n\r\n         </Stack>\r\n         <Stack \r\n            direction=\"row\" \r\n            spacing={4}\r\n            justifyContent=\"center\"\r\n            >\r\n            <Link to=\"/signup\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                >\r\n                    新規登録\r\n                </Button>\r\n            </Link>\r\n            <Link to=\"/login\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"success\"\r\n                    size=\"large\"\r\n                >\r\n                    登録済みの方\r\n                </Button>\r\n            </Link>\r\n         </Stack>\r\n    </Stack>\r\n)","import React, { useContext, useEffect } from 'react';\n\nimport './App.css';\nimport { Employees } from './containers/Employees';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n\nimport { Management } from './containers/Management';\nimport { EmployeeTop } from './containers/employeeSide/Top';\nimport { Login } from './components/signin/Login';\n\nimport { AuthContext, AuthProvider } from './contexts/auth';\nimport { SnackbarProvider } from './contexts/snackBar';\nimport { SignUp } from './components/signin/SignUp';\nimport { Chat } from './containers/Chat';\nimport { ConfigProvider } from './contexts/config';\nimport { BadgeProvider } from './contexts/badge';\nimport { Top } from './components/shared/Top';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\nconst auth = useContext(AuthContext);\n\nreturn (\n\n      <Route\n        render={props =>\n          auth.state.loggedIn ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to=\"/login\"/>\n          )\n        }\n        {...rest}\n      />\n  \n)};\n\n\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n  const auth = useContext(AuthContext);\n \n  return (\n  <Route\n    render={props =>\n      (auth.state.loggedIn && auth.state.chief) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n    {...rest}\n  />)\n\n  }\n\n\nconst  App = () => (\n \n  <Router>\n    <div>\n\n      <Route exact path=\"/\" component={Top} />\n      <BadgeProvider>\n      <ConfigProvider>\n      <AuthProvider>  \n      <SnackbarProvider>\n       \n        <Switch>\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/login\" component={Login} />\n      \n            <AuthenticatedRoute\n                exact\n                path=\"/Dashboard\"\n                component={Management} \n            />\n            <AuthenticatedRoute\n                exact\n                path=\"/employees\"\n                component={Employees} \n            />\n            \n            <PrivateRoute \n              exact \n              path=\"/employeeDashboard\" \n              component={EmployeeTop}\n            />\n            <PrivateRoute \n            exact \n            path=\"/chat\" \n            component={Chat}\n          />\n      \n        </Switch> \n        </SnackbarProvider>\n        </AuthProvider>\n      </ConfigProvider>\n      </BadgeProvider>\n    \n  </div>\n</Router>\n\n\n  );\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n   \n      <App/>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/employee-default.e22677e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/icon.d78a09ee.png\";","module.exports = __webpack_public_path__ + \"static/media/mountain.71506fe6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/offices-buildings-svgrepo-com.39957d64.svg\";","module.exports = __webpack_public_path__ + \"static/media/desc_image1.7e269903.jpg\";","module.exports = __webpack_public_path__ + \"static/media/desc_image2.bb044e3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/employees.426a6714.png\";","module.exports = __webpack_public_path__ + \"static/media/shift.47766b22.png\";","module.exports = __webpack_public_path__ + \"static/media/manage.0fb1df28.png\";","module.exports = __webpack_public_path__ + \"static/media/timestamp.f033fa29.png\";","module.exports = __webpack_public_path__ + \"static/media/calendar.d181c0c0.png\";","module.exports = __webpack_public_path__ + \"static/media/chat.a5c9cd23.png\";"],"sourceRoot":""}